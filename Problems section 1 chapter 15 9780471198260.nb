(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    252592,       5000]
NotebookOptionsPosition[    245442,       4873]
NotebookOutlinePosition[    246080,       4893]
CellTagsIndexPosition[    246037,       4890]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["1.2", "Section",
 CellChangeTimes->{{3.8784934075584736`*^9, 
  3.878493408035545*^9}},ExpressionUUID->"fdf7fe4f-7636-4807-b6bb-\
96f8b0f0a038"],

Cell["\<\
Three coins are tossed; what is the probability that two are heads and one \
tails? That the first are heads and the third tails? If at least two are \
heads, what is the probability that all are heads?\
\>", "Text",
 CellChangeTimes->{{3.878493393392009*^9, 
  3.8784934442077627`*^9}},ExpressionUUID->"cbe18021-80c8-4c57-a7c3-\
7afc1d89fe48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threeCoins\[ScriptCapitalD]", "=", 
  RowBox[{"BinomialDistribution", "[", 
   RowBox[{"3", ",", "0.5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8784934457702312`*^9, 3.87849348905157*^9}},
 CellLabel->
  "In[643]:=",ExpressionUUID->"d58b5b47-eebe-4707-9e9f-d400912da7ef"],

Cell[BoxData[
 RowBox[{"BinomialDistribution", "[", 
  RowBox[{"3", ",", "0.5`"}], "]"}]], "Output",
 CellChangeTimes->{{3.878493464970374*^9, 3.8784934896131754`*^9}},
 CellLabel->
  "Out[643]=",ExpressionUUID->"4dca9cc8-46fa-4968-9a93-7b41d77ef1f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"p", "==", "2"}], ",", 
   RowBox[{"p", "\[Distributed]", "threeCoins\[ScriptCapitalD]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.878493467211805*^9, 3.8784934767749443`*^9}},
 CellLabel->
  "In[644]:=",ExpressionUUID->"0faf32c9-0703-47c2-8d5b-b8ffd25a71fd"],

Cell[BoxData["0.3749999999999999`"], "Output",
 CellChangeTimes->{{3.878493477149988*^9, 3.8784934905194197`*^9}},
 CellLabel->
  "Out[644]=",ExpressionUUID->"189172cf-0036-4eeb-91ae-467f355d1bbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["probability two heads out of three coin tosses", "WolframAlphaLong",
 CellChangeTimes->{{3.878493494425679*^9, 3.8784935031991253`*^9}},
 CellLabel->
  "In[645]:=",ExpressionUUID->"1f574e18-1053-4f7f-b4a3-959afc2c19f6"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "probability two heads out of three coin tosses", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {
     "ProbabilityOfAGivenNumberOfSuccessesInAGivenNumberOfBernoulliTrials__\
Show computation", "ProbabilityTree__Show details", 
      "ProbabilityTree__Show letters", "ProbabilityTree__Show coins"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"ResourceFunction[\"IdealCoinTossStatistics\"][3, 2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coins\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center], 
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"number of flips\"", {
                    GrayLevel[0.6]}], "3"}, {
                    StyleBox["\"number of heads\"", {
                    GrayLevel[0.6]}], "2"}, {
                    StyleBox["\"number of tails\"", {
                    GrayLevel[0.6]}], "1"}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 
                    Automatic], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Probability of occurrence", "scanner" -> "Probability",
      "id" -> "ProbabilityOfAGivenNumberOfSuccessesInAGivenNumberOfBernoulliTr\
ials", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{"\[ThinSpace]", "\" \"", 
                  TagBox[
                   TemplateBox[{
                    RowBox[{"2", "+", "1"}], "2"}, "Binomial"], HoldForm], 
                  TagBox[
                   SuperscriptBox["2", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "1"}], ")"}]}]], HoldForm], "\"=\"", 
                  StyleBox[
                   TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "+", "1"}], ")"}], "!"}], 
                    RowBox[{
                    RowBox[{"2", "!"}], " ", 
                    RowBox[{"1", "!"}], " ", 
                    SuperscriptBox["2", 
                    RowBox[{"2", "+", "1"}]]}]], HoldForm], ScriptLevel -> 0, 
                   StripOnInput -> False], "\"=\"", 
                  StyleBox[
                   FractionBox["3", "8"], ScriptLevel -> 0, StripOnInput -> 
                   False], "\"\[TildeTilde]\"", 
                  TagBox["0.375", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "0.375", "SRString" -> "0.375"]], 
                  "\"\[TildeTilde]\"", 
                  StyleBox[
                   FractionBox["1", 
                    TagBox["2.667", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.667", "SRString" -> "2.667"]]], 
                   ScriptLevel -> 0, StripOnInput -> False]}, 
                 "RowWithSeparators"]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"assuming a fair coin\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}], 
       XMLElement["infos", {"count" -> "2"}, {
         XMLElement[
         "info", {"text" -> "binomial(n, m) is the binomial coefficient"}, {
           XMLElement[
           "link", {
            "url" -> 
             "http://reference.wolfram.com/language/ref/Binomial.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/GammaBetaErf/Binomial", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/BinomialCoefficient.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement["info", {"text" -> "n! is the factorial function"}, {
           XMLElement[
           "link", {
            "url" -> 
             "http://reference.wolfram.com/language/ref/Factorial.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/GammaBetaErf/Factorial", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/Factorial.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide computation", "input" -> 
         "ProbabilityOfAGivenNumberOfSuccessesInAGivenNumberOfBernoulliTrials_\
_Hide computation"}, {}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Distribution of number of heads", "scanner" -> 
     "Probability", "id" -> "DistributionOfNumberOfHeads/successes", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListPlot[{Tooltip[{{0, 1/8}, {1, 3/8}, {2, 3/8}, {3, 1/8}}], \
Tooltip[{{2, 3/8}}]}, Filling -> If[ !StringQ[2], {1 -> Axis, 2 -> {Axis, \
Directive[Red, Thickness[0.007]]}}, Axis], Frame -> True, FrameLabel -> \
{Style[StringForm[\"number of `1`\", \"heads\"], \"Label\", 10], \
Style[\"probability\", \"Label\", 10]}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{0.0195484340859432, 0.}, {4.902403495994173, 
                    0.}}]}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6719999999999999]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6719999999999999]]], 
                    Opacity[0.3], 
                    Hue[0.67, 0.6, 0.6]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.125}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 
                    Rational[1, 8]]& , TagBoxNote -> "1/8"], 
                    StyleBox[
                    FractionBox["1", "8"], {
                    GrayLevel[0]}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Rational[1, 8], {
                    GrayLevel[0]}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6719999999999999]]], 
                    Opacity[0.3], 
                    Hue[0.67, 0.6, 0.6]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.375}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 
                    Rational[3, 8]]& , TagBoxNote -> "3/8"], 
                    StyleBox[
                    FractionBox["3", "8"], {
                    GrayLevel[0]}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Rational[3, 8], {
                    GrayLevel[0]}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6719999999999999]]], 
                    RGBColor[1, 0, 0]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.5487982520029133`, 0.}, {
                    3.4512017479970867`, 0.375}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 
                    Rational[3, 8]]& , TagBoxNote -> "3/8"], 
                    StyleBox[
                    FractionBox["3", "8"], {
                    GrayLevel[0]}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Rational[3, 8], {
                    GrayLevel[0]}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6719999999999999]]], 
                    Opacity[0.3], 
                    Hue[0.67, 0.6, 0.6]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{3.5487982520029133`, 0.}, {
                    4.451201747997087, 0.125}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 
                    Rational[1, 8]]& , TagBoxNote -> "1/8"], 
                    StyleBox[
                    FractionBox["1", "8"], {
                    GrayLevel[0]}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Rational[1, 8], {
                    GrayLevel[0]}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
                 GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                  DisplayFunction -> Identity, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0.0195484340859432, 0.}, AxesStyle -> 
                  Directive[
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                  CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> True, FrameLabel -> {{
                    FormBox[
                    StyleBox[
                    "\"probability\"", "Label", 10, StripOnInput -> False], 
                    TraditionalForm], None}, {
                    FormBox[
                    StyleBox[
                    "\"number of heads\"", "Label", 10, StripOnInput -> 
                    False], TraditionalForm], None}}, FrameStyle -> Directive[
                    AbsoluteThickness[0.2]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Automatic, 
                  ImageSize -> 220., LabelStyle -> GrayLevel[0], 
                  PlotRange -> {{All, All}, {All, All}}, 
                  PlotRangePadding -> {{0.1, 0.1}, {
                    Scaled[0.15], 
                    Scaled[0.1]}}, Ticks -> {None, Automatic}}]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"assuming a fair coin\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Probability tree", "scanner" -> "Probability", "id" -> 
     "ProbabilityTree", "position" -> "100", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
                    15}, {
                    SparseArray[
                    Automatic, {15, 15}, 0, {
                    1, {{0, 2, 4, 6, 8, 10, 12, 14, 14, 14, 14, 14, 14, 14, 
                    14, 14}, {{2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {
                    11}, {12}, {13}, {14}, {15}}}, Pattern}], Null}, {
                    EdgeLabels -> {DirectedEdge[7, 15] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[1, 3] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[5, 11] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[4, 9] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[5, 10] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[1, 2] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[6, 12] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[6, 13] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[4, 8] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[3, 7] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[3, 6] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[2, 4] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[2, 5] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel], 
                    DirectedEdge[7, 14] -> Placed[
                    Rational[1, 2], {"Middle"}, 
                    CalculateScan`ProbabilityScanner`Private`panelLabel]}, 
                    EdgeLabelStyle -> {
                    DirectedEdge[6, 12] -> Bold, DirectedEdge[2, 4] -> Bold, 
                    DirectedEdge[5, 10] -> Bold, DirectedEdge[3, 6] -> Bold, 
                    DirectedEdge[4, 9] -> Bold, DirectedEdge[1, 3] -> Bold, 
                    DirectedEdge[2, 5] -> Bold, DirectedEdge[1, 2] -> Bold}, 
                    EdgeShapeFunction -> {Line[#]& }, GraphHighlight -> {
                    DirectedEdge[1, 2], 
                    DirectedEdge[4, 9], 
                    DirectedEdge[2, 4], 
                    DirectedEdge[5, 10], 
                    DirectedEdge[2, 5], 
                    DirectedEdge[1, 3], 
                    DirectedEdge[6, 12], 
                    DirectedEdge[3, 6]}, 
                    GraphHighlightStyle -> {
                    DirectedEdge[3, 6] -> {EdgeStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, 
                    DirectedEdge[1, 2] -> {EdgeStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, 
                    DirectedEdge[2, 4] -> {EdgeStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, 
                    DirectedEdge[4, 9] -> {EdgeStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, 
                    DirectedEdge[2, 5] -> {EdgeStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, 
                    DirectedEdge[1, 3] -> {EdgeStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, 
                    DirectedEdge[6, 12] -> {EdgeStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, 
                    DirectedEdge[5, 10] -> {EdgeStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, ImageSize -> Medium, 
                    VertexLabels -> {9 -> Placed[
                    Image[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 14 -> Placed[
                    Image[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 5 -> Placed[
                    Image[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 6 -> Placed[
                    Image[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 13 -> Placed[
                    Image[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 4 -> Placed[
                    Image[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 15 -> Placed[
                    Image[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 12 -> Placed[
                    Image[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 7 -> Placed[
                    Image[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 8 -> Placed[
                    Image[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 2 -> Placed[
                    Image[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 10 -> Placed[
                    Image[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 3 -> Placed[
                    Image[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}], 11 -> Placed[
                    Image[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], "Byte", ColorSpace -> "RGB", ImageSize -> 20, 
                    Interleaving -> True, Magnification -> Automatic], {
                    Center}]}, VertexSize -> {Large}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], {
                    StyleBox[
                    
                    LineBox[{{2.4748737341529163`, 2.1213203435596424`}, {
                    1.0606601717798212`, 1.414213562373095}}], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], StripOnInput -> False], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    StyleBox[
                    FractionBox["1", "2"], Bold, StripOnInput -> False], 
                    FrameMargins -> 0, Background -> RGBColor[1., 1., 1.]], 
                    TraditionalForm], {1.7677669529663689`, 
                    1.7677669529663687`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    StyleBox[
                    
                    LineBox[{{2.4748737341529163`, 2.1213203435596424`}, {
                    3.8890872965260113`, 1.414213562373095}}], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], StripOnInput -> False], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    StyleBox[
                    FractionBox["1", "2"], Bold, StripOnInput -> False], 
                    FrameMargins -> 0, Background -> RGBColor[1., 1., 1.]], 
                    TraditionalForm], {3.181980515339464, 
                    1.7677669529663687`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    StyleBox[
                    
                    LineBox[{{1.0606601717798212`, 1.414213562373095}, {
                    0.35355339059327373`, 0.7071067811865475}}], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], StripOnInput -> False], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    StyleBox[
                    FractionBox["1", "2"], Bold, StripOnInput -> False], 
                    FrameMargins -> 0, Background -> RGBColor[1., 1., 1.]], 
                    TraditionalForm], {0.7071067811865475, 
                    1.0606601717798212`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    StyleBox[
                    
                    LineBox[{{1.0606601717798212`, 1.414213562373095}, {
                    1.7677669529663687`, 0.7071067811865475}}], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], StripOnInput -> False], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    StyleBox[
                    FractionBox["1", "2"], Bold, StripOnInput -> False], 
                    FrameMargins -> 0, Background -> RGBColor[1., 1., 1.]], 
                    TraditionalForm], {1.414213562373095, 
                    1.0606601717798212`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    StyleBox[
                    
                    LineBox[{{3.8890872965260113`, 1.414213562373095}, {
                    3.181980515339464, 0.7071067811865475}}], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], StripOnInput -> False], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    StyleBox[
                    FractionBox["1", "2"], Bold, StripOnInput -> False], 
                    FrameMargins -> 0, Background -> RGBColor[1., 1., 1.]], 
                    TraditionalForm], {3.5355339059327378`, 
                    1.0606601717798212`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    
                    LineBox[{{3.8890872965260113`, 1.414213562373095}, {
                    4.596194077712559, 0.7071067811865475}}], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    FractionBox["1", "2"], FrameMargins -> 0, Background -> 
                    RGBColor[1., 1., 1.]], TraditionalForm], {
                    4.242640687119285, 1.0606601717798212`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    
                    LineBox[{{0.35355339059327373`, 0.7071067811865475}, {0., 
                    0.}}], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    FractionBox["1", "2"], FrameMargins -> 0, Background -> 
                    RGBColor[1., 1., 1.]], TraditionalForm], {
                    0.17677669529663687`, 0.35355339059327373`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    StyleBox[
                    
                    LineBox[{{0.35355339059327373`, 0.7071067811865475}, {
                    0.7071067811865475, 0.}}], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], StripOnInput -> False], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    StyleBox[
                    FractionBox["1", "2"], Bold, StripOnInput -> False], 
                    FrameMargins -> 0, Background -> RGBColor[1., 1., 1.]], 
                    TraditionalForm], {0.5303300858899106, 
                    0.35355339059327373`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    StyleBox[
                    
                    LineBox[{{1.7677669529663687`, 0.7071067811865475}, {
                    1.414213562373095, 0.}}], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], StripOnInput -> False], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    StyleBox[
                    FractionBox["1", "2"], Bold, StripOnInput -> False], 
                    FrameMargins -> 0, Background -> RGBColor[1., 1., 1.]], 
                    TraditionalForm], {1.590990257669732, 
                    0.35355339059327373`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    
                    LineBox[{{1.7677669529663687`, 0.7071067811865475}, {
                    2.1213203435596424`, 0.}}], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    FractionBox["1", "2"], FrameMargins -> 0, Background -> 
                    RGBColor[1., 1., 1.]], TraditionalForm], {
                    1.9445436482630054`, 0.35355339059327373`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    StyleBox[
                    
                    LineBox[{{3.181980515339464, 0.7071067811865475}, {
                    2.82842712474619, 0.}}], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], StripOnInput -> False], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    StyleBox[
                    FractionBox["1", "2"], Bold, StripOnInput -> False], 
                    FrameMargins -> 0, Background -> RGBColor[1., 1., 1.]], 
                    TraditionalForm], {3.005203820042827, 
                    0.35355339059327373`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    
                    LineBox[{{3.181980515339464, 0.7071067811865475}, {
                    3.5355339059327373`, 0.}}], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    FractionBox["1", "2"], FrameMargins -> 0, Background -> 
                    RGBColor[1., 1., 1.]], TraditionalForm], {
                    3.3587572106361003`, 0.35355339059327373`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    
                    LineBox[{{4.596194077712559, 0.7071067811865475}, {
                    4.242640687119285, 0.}}], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    FractionBox["1", "2"], FrameMargins -> 0, Background -> 
                    RGBColor[1., 1., 1.]], TraditionalForm], {
                    4.419417382415922, 0.35355339059327373`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
                    
                    LineBox[{{4.596194077712559, 0.7071067811865475}, {
                    4.949747468305833, 0.}}], 
                    InsetBox[
                    FormBox[
                    PanelBox[
                    FractionBox["1", "2"], FrameMargins -> 0, Background -> 
                    RGBColor[1., 1., 1.]], TraditionalForm], {
                    4.772970773009195, 0.35355339059327373`}, 
                    ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    
                    DiskBox[{2.4748737341529163`, 2.1213203435596424`}, 
                    0.1414213562373095], {
                    
                    DiskBox[{1.0606601717798212`, 1.414213562373095}, 
                    0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {1.0606601717798212`,
                     1.414213562373095}, BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{3.8890872965260113`, 1.414213562373095}, 
                    0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {3.8890872965260113`,
                     1.414213562373095}, BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.35355339059327373`, 0.7071067811865475}, 
                    0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {
                    0.35355339059327373`, 0.7071067811865475}, BaseStyle -> 
                    "Graphics"]}, {
                    
                    DiskBox[{1.7677669529663687`, 0.7071067811865475}, 
                    0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {1.7677669529663687`,
                     0.7071067811865475}, BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{3.181980515339464, 0.7071067811865475}, 
                    0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {3.181980515339464, 
                    0.7071067811865475}, BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{4.596194077712559, 0.7071067811865475}, 
                    0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {4.596194077712559, 
                    0.7071067811865475}, BaseStyle -> "Graphics"]}, {
                    DiskBox[{0., 0.}, 0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {0., 0.}, BaseStyle -> 
                    "Graphics"]}, {
                    DiskBox[{0.7071067811865475, 0.}, 0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {0.7071067811865475, 
                    0.}, BaseStyle -> "Graphics"]}, {
                    DiskBox[{1.414213562373095, 0.}, 0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {1.414213562373095, 
                    0.}, BaseStyle -> "Graphics"]}, {
                    DiskBox[{2.1213203435596424`, 0.}, 0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {2.1213203435596424`,
                     0.}, BaseStyle -> "Graphics"]}, {
                    DiskBox[{2.82842712474619, 0.}, 0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {2.82842712474619, 
                    0.}, BaseStyle -> "Graphics"]}, {
                    DiskBox[{3.5355339059327373`, 0.}, 0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {3.5355339059327373`,
                     0.}, BaseStyle -> "Graphics"]}, {
                    DiskBox[{4.242640687119285, 0.}, 0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJytmUlslVUUx7+2iMiocdi4cIiJcVgQwgJDJE4hsnADuNAdVSAmBLAoxp3G
nQmRRFKg0EIpQ1ta6AwUSqEDQ0uxpLRShg7QAsGIGAYNVj7/v5uel+fL+977
3msXp+/1vu+e+7/n/M9w7/dS9qqFyzI9z1szSX8WLvnm3ZycJd8uelL/fLxy
zRfLVy79fMHKr5YuX5ozJztLg2+MygRJU1PT/+TYsWNeZWWlt2fPHm/fvn1e
dXW1d+DAASdVVVWMZZWUlEzeu3fvLMmK3bt3F+3YsaNn27ZtdwoKCv6KFcYL
Cwt7d+3aVbJ///4c6Z4jHdP0PQt9FRUVXmlpqVurpqbGrQ2GkydPeidOnIiI
7/upYM2U7mfKysoWCl/p9u3b723dutVHhCmh5OfnOxl99qFw10j3J1rneWHN
HGesU6RngcbqWHPLli1u7WQYg4T54Naem8vLyxcJ61NjxSo/Mf8F6ftRa9xn
jUR2M7G9mATNGbXzyM6dO/OF9XWtlZEm1gzNf1vcbDA7xFuP3/Ly8pzwDGPi
qPseO57IxsL7i2zzodbOShFrhrDOV8x0x/M3/4Nh48aNvnjraw1fPPHr6+v9
48eP+6dPn/YbGhp82ckvLi6O4A7itumTrkHF6yLpyDp16lRSrHqO2HxP835l
fjx7GBcUZw5XX1+ff/XqVSdDQ0P+8PCw+z4wMOD39PT40uueRd/mzZud3ZF4
PtJ+hg8ePLi4paUlQ+K1trY6AWtzc3NE+O3o0aMzFacd6I1nA9ZSLPhnzpzx
r1y54rBdu3bN4ULAzXh/f78/ODjofkMuXbrkHzlyJOIP40qsfn5XjuuXT+bh
YxOwGm74IRs9Jx/sA0+QPdHf1tbm37hxw2EA2+XLlx2+WGEcATd7Yi/YGN4E
rYF+9qI4aRbGl42X0VjFiYna9+pNmzYF8orflGMdDmwWhDFIwAo3zp075zgO
XtaKxwd+U75cJz9PNA4Y1sbGxllFRUUD4InnG+bzm+Y6nObrVAW8169fdzyW
7ZwNg/KDuHBHMft+e3t7pmEVV6don+vAkiiHs9e6uroIH9PBanPhhGLd2SUo
NhhXbi8T56aBVXYi9t8Uh24F5fpoDmiu39vb63yZLlaE+RcuXPAVH36QjUbj
4w9h/AissvFjtbW1XwftLRYrOdN8ORasxnflcseDoFrDuJ6pVixlSGYo77cl
s6npUgyOia/RWOECnEoUz4zL9r/J908IK/7/O1kvAlfVa/jd3d1j9r9hxTfK
+5F8EIRV9XdEOfVZ5aAlYXomq7XjaVfjAHZN1OMQf6rZc1WDNoTtQeEVNT+6
PqUjVpPPnz/vfIVdk/FPNv1S9bQ+jF2ttnZ1dY05rqz+Klc6HGFiRTFVoF6q
MxlWdIGV+jgeXDW/0Jsliqton4qzjYqrS2Fsql7Wv3jxorPHeMQVn+S/oHwV
i1U27RJv+5LZn9xLP0qvMpZ6Fc1VegK4mqxWmoATvIk4YOcQ8drVGNVkt166
scVeEfUfgb1LPMH/8CBszsIG9P1jyVnghK/0QGBNFldRHOgkvsLmLLhAzgJn
ulxgHn0AvWWYuLK1yVfkrTDPW4wRD/T46eQtcHZ2drpeMOy53XoC6gD1QHwZ
CYMVO5AP6LNSzQf4gv3RB7JnfBSGpxYv1FfqrOx7IQxvwKpe3a1NLKfKWTsr
EqPkqjBYwaW4ekTfQv+iPvunMD0h9oBncACs2DaVOLMaQL+yYcOGUBwAl87t
t+kH6QsPHTo0V/MeJJsLbxSPjrPEMfmLmp5KnPHs2bNnqUN+bm5u0vX0+VB9
YzF9NvcBOidO1/m9LExeZj7+41nszLkfv4aNNbBSU+jX0JVoTWyqPNWq2v4O
5wKdsz2dZzL1/3zZ9Z6dq8Ngxi74gthOhb/GHXxje44XU8IyIp9nq8eZDlbu
YsDb0dExRTbKCzpXBvEXu8LfVPMCZ0PmMd/2HKtbMVgpnE/bmRushlf563Xx
qCssF9CHbbBpOrWBuyT6ArgbfbeB73X+v6ZYeou7IASs3LeYgPfw4cMLNedW
srzAfrg/oZ9Np/difzdv3nRYxclIvh3Np/cVS8sUR5nEExKLFftqDxMqKipW
CM/dRGcgdGtfkV4kLEb2xV0GsUgeodeydYyjyovfk0u5G1KP4yQWK4K9xedJ
4spq6bgbWyOsL9AzkXvBZH2X9YF2p8W9HXna7oKi7pf/EfYfhG0ad4GGMxFW
5WreYzyuGvxZYWHhcHTttvrMfRR3cNRbu6eKFXKT3W3Sr0i/mwd32K/ZgU/l
7T+13try8vKpYOPOLQWsnuZlKU4/EJ+aYt9jWN/JXTBnUe4rqfXkeXIYn+RQ
xvkdTtp9kGE0nYqjTj2zWPvAn146WIXT3o+8qO/fycZDdp9u69jatj4203OR
HG1nv+i7eJuvZ24L289a67XR91HeWLDKtl5tbS133ZP1fbbG1stfA8LxKBqz
ieG29wAm0e85tJ8h+mb5ZJ5sOd3ev4wXVt7JINI3VWMz1YOuUl4s4z2c1r8l
G93XZ2xv+a/GH0h+13O98nWVMK4VL2frc0bse63xxIoudPKuT1gn6bdXNP6p
1l0vHPuFqUX4zkjaEf3fqvFKxXauMGQL26v6jn+cbulICet/uQhKcA==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {4.242640687119285, 
                    0.}, BaseStyle -> "Graphics"]}, {
                    DiskBox[{4.949747468305833, 0.}, 0.1414213562373095], 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzVmW1MllUYx28QTXOludqs5spcrbL12aVrM/1SfmhZfmitD1roXJttYmtW
a2tttdbL8AUB3xBEERVQUXxHBAUFFRAUQUQFFXQ2XTZlNrv7/07PxW7ueBQU
cH24nvvtnOv6n//1P9c59/2MnvH51JmxnuclDNbP1OlfTpw7d/r894frYtqc
hNmz5sR/+vacefGz4ueOmzFAN8dGLE5WXFzcyUpKSrzdu3d7mzZt8jZv3uxt
3brV27Jli7dhwwZ3Txazfv36Iboeo/N3s7Kyflm9enVRenp6U1pa2rWVK1fe
lN3S+Z+rVq1qy8jIqNHz3Ozs7IS8vLwJOj4ti8Ofrr2cnBwXhxjy6+mZt3Hj
Rq+oqMg7duyYV1lZ2WE9wBqje8Plf+K6detShKNVmPwVK1Z0GNdBCz6z58Jd
qf5fyN9Y+RrSB1iHqv8kcZglvv5avnx5l9i6Y9ZXmNuE9zv5fVVx4h4UK/3z
8/Ofz83N/UE83li2bNl9YwwbvjBhrhO/HynW4w+ANVbjnSAqC81vb2AMc5ya
muorV+3iOFE2qidYDxw44O3ZsydW/aZoXtQvXbrU+extnGGOibFmzZpscTsm
Gtb9+/c7M051jCkoKJii/k3g7K2cd4djLDMzM1fz7bmusHIPA2dZWZknnOM1
vjpy0x8Yu8K7du3aTHH2VBBnECu5Ly0tHa16UtxTnHBPDuiHpaSkdJz3VD+m
YXH2rfANqKqq8swCvA7W85+Jc6+88xyN4TM5Odlh41q1wpfefOUQ7bm2jIHn
WHe1H5nH14VpYkVFhVdeXu7MtLpr165JinUNf5qXUbEZZ9zTWuVrHvjbt2/3
lRf/yJEjfl1dnX/69Gm/pqbGl39/3759vmpKJ+zB8XXFC/GJoRwXCduTwRol
vCM073ODube8Gh/cI55qoa864UsvvrTv19fX+2fPnvWbm5s77Pz58+7Y0tLi
zhsbGzuwK4e+aima7ODQ9BKui9zbsWPHTPSJgVf1dLKw3bYxciSfqnX+tm3b
nH/lwsWDM+KDAwPTuXPnHN6mpqb/GPfD7c+cOeOfOHHC+VR8F0N13MUMa0Fj
qjh48OAIGVodJq5SjTvLExyKc7+2ttbZyZMnnXF+/PhxZ9XV1T02+jFm8wdm
7oO7sLDQxQ1yJmuXPqcJa+zevXvHSXdXgpo3zeq544U8m28zdBk+v9cxfI6d
OnXK+Yd7xiCNdtICuDRX06WBx8T/Z2Gd2DrCvCDnDQ0N7ohfYmFokPt2zTn3
aGMYuLZxWhv8GF6e0YZzdKEa5XQcxBPZ59RJp+NVYzK6wkobce78qLa5Oc6R
fDH+o0ePumvTA3FoYzmmnfWxNsxFaxPsQxtwowM0EMxxRA/XtDf5Ws9qw3XD
eEX3bW1t/qFDh5wP5v6FCxdcHOad5qjTCNwwP8gfer548aLTj/hw42VOwTM1
RHs2xy1+pEPHI+MmDnVCe5CusN5W/Dw9ux5t7SBOa2urr5rmJyYm+jt37nTX
jCEpKclhIXfklhhLlizxDx8+7Npo3+svXLjQ4QMXPEf2VC5X4Gds+EVr9CFe
tJqrGlGuvn+Hn4GV+UXfS5cuuXqwePFixyOcgZ242mc4TuEJ3qnF5IA2YGU8
yp3DRb7BwZjQK7WLNW7BggWuXtPnblhlNXdbk/EBVngEK7zik2t8gs/mHrmk
D7zSBk3AM3U/jBVewar1x3EPxm5grQ2vp/93rKaBIFZbL0wD/YC1Rpq93ZVe
iaua1qtY8ct8NL32BKs4rRLWy9GwUlPwAdZFixZ1whptbgWxdndugZFaATe2
hwtj1dpaIj5Ko9VXagm86n3BXZtP6iz7QXihZoGXvSF7D2okfRgnftkvgpX1
AZzUZeo+9xgH2NgbGSf46KK+3uR1X/Xvt/AzrokFDmo9PFD/0Zmttban4Rpj
DwIeWzeDfWw95nmwDX2CbdivsXaRL8MU2fO16t3/E2H6UNd3gvsWjrbHoi/r
CrWcPAavbX+E2frLmgm3rKfWh2vuc23rNX14ZmsvbWw9RhuGA6zKfZn08bLy
/JL0XmvfQziyDtLXsPWlESd4TkzmBXoxrMr9T9LJIExrzHx7p0BPjI18kCty
15+Gntijo0F771LtHCdOY3gv0D7jNWniKnjBSo7QFWPlvD+NmOgXrOhA8zdH
eozTPtyLYB0i7f5o9YL14WFb5J3gpvL+lvDFRL6zOBPHr2j+NfKOae+E9s7W
30bsSG1O1V5okGq2h4Ez8t4dW1BQEC+NtNu7/sPiFLxaW+qF6UXDiQW/Z4nb
YaoXydHWjv4wciqeftd8+iCizw4LYkW/qhejVCNy0EJ/442sl+3aQyQIz0DL
edi4rzXUmfT8otbQ/N78NtxdnKr730iLjxqmoIWxinv3fUvrwQt6x8i2b3d9
nXdxc131cp5q1FBh9bqLVbp13+BVx0aq7/fSzx99wbHxoHlUo7xPk/Ye4Tt8
T7Hyfw7/a+jI/xrvyF/x3f5zuR+MOr8hbKmqTa+Dj5gPglVacCZ/zwrzbO0d
yhTjlu0fuoPd2lgf1aWrfG9XziaLz+H8h6L9bq9g5T8o/Ol8oGyk/H2sOaDt
RUY1cYXnTjScaf++I7VLjy1aa0qkyV+1F31T/Z8wv/w31dtYOaJj8TFI958R
z+8pdpK4LhWmZmG6LLtipnttwtggjNvU7iv1fUM2TOf89+j+b+kJ1n8AA6nM
qQ==
                    "], {{0, 43}, {43, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {43, 43}, PlotRange -> {{0, 43}, {0, 43}},
                     ImageSize -> 20], TraditionalForm], {4.949747468305833, 
                    0.}, BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, ImageSize -> 
                  Medium, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}]}, {
                TagBox[
                 GridBox[{{
                    RowBox[{
                    TemplateBox[{
                    StyleBox["\"+\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    TemplateBox[{
                    StyleBox["\"\[Times]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"]}, "RowWithSeparator"], 
                    TemplateBox[{
                    StyleBox["\"\[Times]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"]}, "RowWithSeparator"], 
                    TemplateBox[{
                    StyleBox["\"\[Times]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"], 
                    FractionBox["1", "2"]}, "RowWithSeparator"]}, 
                    "RowWithSeparator"], "\[LongEqual]", 
                    FractionBox["3", "8"]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}}, FrameStyle -> 
                  GrayLevel[0.8]], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Hide details", "input" -> 
         "ProbabilityTree__Hide details"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show letters", "input" -> 
         "ProbabilityTree__Show letters"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Other probability results", "scanner" -> "Probability",
      "id" -> "OtherBernoulliTrialProbabilities", "position" -> "500", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"probability\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]]}, {
                    TagBox[
                    PaneBox[
                    
                    TemplateBox[{"\"less than \"", "2", "\" heads\""}, 
                    "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox["0.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.5", "SRString" -> "0.5"]]}, {
                    TagBox[
                    PaneBox[
                    TemplateBox[{"2", "\" or less heads\""}, "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox["0.875", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.875", "SRString" -> "0.875"]]}, {
                    TagBox[
                    PaneBox[
                    
                    TemplateBox[{"\"more than \"", "2", "\" heads\""}, 
                    "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox["0.125", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.125", "SRString" -> "0.125"]]}, {
                    TagBox[
                    PaneBox[
                    TemplateBox[{"2", "\" or more heads\""}, "RowDefault"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox["0.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.5", "SRString" -> "0.5"]]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}}}, AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"assuming a fair coin\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Stated frequencies", "scanner" -> "Probability", "id" -> 
     "StatedFrequencies", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"fraction of heads\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   TagBox[
                    FractionBox["2", "3"], HoldForm], "\"\[TildeTilde]\"", 
                   "0.6666666666666666`"}, "RowWithSeparators"]}, {
                 TagBox[
                  PaneBox[
                  "\"fraction of tails\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   TagBox[
                    FractionBox["1", "3"], HoldForm], "\"\[TildeTilde]\"", 
                   "0.3333333333333333`"}, "RowWithSeparators"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Expected number of heads", "scanner" -> "Probability", 
     "id" -> "StatisticsForNumberOfHeads/successes", "position" -> "700", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox["1.5", 
             $CellContext`TagBoxWrapper[
             "StringBoxes" -> "1.5", "SRString" -> "1.5"]], TraditionalForm]],
           "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More statistics", "input" -> 
         "StatisticsForNumberOfHeads/successes__More statistics"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "7", "datatypes" -> "Probability", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "0.681", "parsetiming" -> "0.325", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP385923di9abce11183g700005g17e404af05ic74", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "14", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa386023di9abce11183g7000047i181aebdih4h294307842769377011871", "version" -> 
    "2.6", "inputstring" -> "probability two heads out of three coin tosses"},
    Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 26, 18, 18, 24.8865332`9.1485393254515}, "Line" -> 
    645, "SessionID" -> 16944803280185088864}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = 
   "probability two heads out of three coin tosses"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1081., {548.3544921875, 553.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.8784935049959145`*^9},ExpressionUUID->"5482ea6f-dcd4-4980-bbca-\
43ec93262004"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<heads\>\"", ",", "\"\<tails\>\""}], "}"}], ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.878493651947977*^9, 3.8784936576828094`*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"a282c753-afe5-419d-9d7e-3ba6f33a4060"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"heads\"\>", ",", "\<\"heads\"\>", ",", "\<\"heads\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"heads\"\>", ",", "\<\"heads\"\>", ",", "\<\"tails\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"heads\"\>", ",", "\<\"tails\"\>", ",", "\<\"heads\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"heads\"\>", ",", "\<\"tails\"\>", ",", "\<\"tails\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"tails\"\>", ",", "\<\"heads\"\>", ",", "\<\"heads\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"tails\"\>", ",", "\<\"heads\"\>", ",", "\<\"tails\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"tails\"\>", ",", "\<\"tails\"\>", ",", "\<\"heads\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"tails\"\>", ",", "\<\"tails\"\>", ",", "\<\"tails\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8784936581122656`*^9},
 CellLabel->
  "Out[647]=",ExpressionUUID->"e09317e9-7de7-46aa-81f7-0dfca88a2ddc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<heads\>\"", ",", "\"\<heads\>\"", ",", "\"\<tails\>\""}], 
    "}"}], "]"}], "[", 
  RowBox[{"Tuples", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<heads\>\"", ",", "\"\<tails\>\""}], "}"}], ",", "3"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8784936592940917`*^9, 3.87849366768426*^9}},
 CellLabel->
  "In[648]:=",ExpressionUUID->"2d0b38b2-36ac-4ba9-81ea-5b17aad58a39"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"heads\"\>", ",", "\<\"heads\"\>", ",", "\<\"tails\"\>"}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.878493668211218*^9},
 CellLabel->
  "Out[648]=",ExpressionUUID->"7b927f30-e6a0-4353-b225-60a8a6d10571"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{"{", 
    RowBox[{"_", ",", "\"\<heads\>\"", ",", "\"\<tails\>\""}], "}"}], "]"}], 
  "[", 
  RowBox[{"Tuples", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<heads\>\"", ",", "\"\<tails\>\""}], "}"}], ",", "3"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8784936592940917`*^9, 3.8784936895798464`*^9}},
 CellLabel->
  "In[649]:=",ExpressionUUID->"407083e7-626e-4f94-a1b3-5e480a0692cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"heads\"\>", ",", "\<\"heads\"\>", ",", "\<\"tails\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"tails\"\>", ",", "\<\"heads\"\>", ",", "\<\"tails\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.878493689942111*^9},
 CellLabel->
  "Out[649]=",ExpressionUUID->"ffa2ba0b-8fc0-4476-b11d-b928da70ef80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{"{", 
    RowBox[{"OrderlessPatternSequence", "[", 
     RowBox[{"_", ",", "\"\<heads\>\"", ",", "\"\<heads\>\""}], "]"}], "}"}], 
   "]"}], "[", 
  RowBox[{"Tuples", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<heads\>\"", ",", "\"\<tails\>\""}], "}"}], ",", "3"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8784936592940917`*^9, 3.878493723948267*^9}},
 CellLabel->
  "In[652]:=",ExpressionUUID->"54ce571b-ef99-434d-b7f9-2fefe8a476c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"heads\"\>", ",", "\<\"heads\"\>", ",", "\<\"heads\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"heads\"\>", ",", "\<\"heads\"\>", ",", "\<\"tails\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"heads\"\>", ",", "\<\"tails\"\>", ",", "\<\"heads\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"tails\"\>", ",", "\<\"heads\"\>", ",", "\<\"heads\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8784937036722393`*^9, 3.878493724437106*^9}},
 CellLabel->
  "Out[652]=",ExpressionUUID->"ac6fa81e-b47c-4622-b55e-604b00ee70d7"]
}, Open  ]],

Cell["The probability of HHT is 1/8. ", "Text",
 CellChangeTimes->{{3.8784936716662908`*^9, 
  3.878493685814943*^9}},ExpressionUUID->"edf1a009-2ce2-47bc-90f6-\
7614d3e01de0"],

Cell["\<\
If at least two are heads, what is the probability that all are heads? 1/4.\
\>", "Text",
 CellChangeTimes->{{3.8784937281504936`*^9, 
  3.8784937540419197`*^9}},ExpressionUUID->"9aa3ca5f-9e37-458d-a952-\
ea29fe60bce1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.5", "Section",
 CellChangeTimes->{{3.8784937775591393`*^9, 
  3.8784937782451134`*^9}},ExpressionUUID->"854b8f34-b8c9-41ba-a0c6-\
e2422b729729"],

Cell["\<\
Given a family of two children (assume boys and girls equally likely, that \
is, probability 1/2 for each), what is the probability that both are boys?\
\>", "Text",
 CellChangeTimes->{{3.878493779659347*^9, 
  3.8784938056341095`*^9}},ExpressionUUID->"89ad0a49-28ff-4404-8913-\
8fd8c9b79dd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"boys\[ScriptCapitalD]", "=", 
  RowBox[{"BinomialDistribution", "[", 
   RowBox[{"2", ",", "0.5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878493807185317*^9, 3.878493814273367*^9}},
 CellLabel->
  "In[653]:=",ExpressionUUID->"c6352b5d-af73-4d49-a0c4-4f92a0594bb7"],

Cell[BoxData[
 RowBox[{"BinomialDistribution", "[", 
  RowBox[{"2", ",", "0.5`"}], "]"}]], "Output",
 CellChangeTimes->{3.8784938148413687`*^9},
 CellLabel->
  "Out[653]=",ExpressionUUID->"55104e4a-056f-4236-9b36-6af2fd4b5c72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"b", "==", "2"}], ",", 
   RowBox[{"b", "\[Distributed]", "boys\[ScriptCapitalD]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.878493816314803*^9, 3.8784938243382277`*^9}},
 CellLabel->
  "In[654]:=",ExpressionUUID->"d0d0c03e-a684-4e69-a9fb-e2446d2c30e5"],

Cell[BoxData["0.25`"], "Output",
 CellChangeTimes->{3.8784938247140684`*^9},
 CellLabel->
  "Out[654]=",ExpressionUUID->"01ba4686-b79d-4d22-94ee-9ef89c59b91a"]
}, Open  ]],

Cell["That at least one is a girl?", "Text",
 CellChangeTimes->{{3.8784938311446657`*^9, 
  3.878493838920721*^9}},ExpressionUUID->"2391d751-689d-46f9-8048-\
bd776a61db8f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<boys\>\"", ",", "\"\<girls\>\""}], "}"}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.87849384055233*^9, 3.878493849543739*^9}},
 CellLabel->
  "In[656]:=",ExpressionUUID->"d20d69b1-7efd-4687-800f-830a140e4b57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"boys\"\>", ",", "\<\"boys\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"boys\"\>", ",", "\<\"girls\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"girls\"\>", ",", "\<\"boys\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"girls\"\>", ",", "\<\"girls\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8784938467869987`*^9, 3.878493849894208*^9}},
 CellLabel->
  "Out[656]=",ExpressionUUID->"df2678f4-061c-4eff-8d12-7d4d091ae6cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<\|01f466\>\"", ",", "\"\<\|01f467\>\""}], "}"}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.87849384055233*^9, 3.8784938758351536`*^9}},
 CellLabel->
  "In[657]:=",ExpressionUUID->"56356946-af9d-4780-8f14-7ec811271b2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"\|01f466\"\>", ",", "\<\"\|01f466\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\|01f466\"\>", ",", "\<\"\|01f467\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\|01f467\"\>", ",", "\<\"\|01f466\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\|01f467\"\>", ",", "\<\"\|01f467\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.878493876570738*^9},
 CellLabel->
  "Out[657]=",ExpressionUUID->"c8fcc528-9443-485d-aa63-b45d88549433"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\|01f466", ",", "\|01f467"}], "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.87849384055233*^9, 3.8784938892828045`*^9}},
 CellLabel->
  "In[658]:=",ExpressionUUID->"01276d4e-f975-4dcf-a2a5-f5ee44c13e55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\|01f466", ",", "\|01f466"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\|01f466", ",", "\|01f467"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\|01f467", ",", "\|01f466"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\|01f467", ",", "\|01f467"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8784938899703197`*^9},
 CellLabel->
  "Out[658]=",ExpressionUUID->"f4c1b90c-7cb4-4271-90ad-a7cda4383316"]
}, Open  ]],

Cell["\<\
The probability that at least one is a girl is the 1- probability none of the \
children are girls=1-1/4=3/4.\
\>", "Text",
 CellChangeTimes->{{3.8784939003690186`*^9, 
  3.8784939256945906`*^9}},ExpressionUUID->"4e427d25-d5a4-428d-93c3-\
b0d0db9b5d20"],

Cell["\<\
Give that at least one is girl, what is the probability that both are girls? \
At least one girl\
\>", "Text",
 CellChangeTimes->{{3.878493941047151*^9, 
  3.8784939638370905`*^9}},ExpressionUUID->"d77c689f-9f32-4137-b527-\
373653d4140c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"#", ",", "\|01f467"}], "]"}], ">=", "1"}], "&"}], "]"}], "[", 
  RowBox[{"Tuples", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\|01f466", ",", "\|01f467"}], "}"}], ",", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.878493967196187*^9, 3.8784939960979757`*^9}},
 CellLabel->
  "In[660]:=",ExpressionUUID->"aeff6e5e-bc9d-4ce9-8a08-f0c033128067"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\|01f466", ",", "\|01f467"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\|01f467", ",", "\|01f466"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\|01f467", ",", "\|01f467"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8784939779221725`*^9, 3.878493996665353*^9}},
 CellLabel->
  "Out[660]=",ExpressionUUID->"2f432c05-c995-465d-ad1e-d1ffb6183dd6"]
}, Open  ]],

Cell["The probability is 1/3.", "Text",
 CellChangeTimes->{{3.8784940017974234`*^9, 
  3.8784940051724143`*^9}},ExpressionUUID->"11373d67-985f-4980-ba8a-\
ebd68e84aa52"],

Cell["\<\
Given that the first two are girls, what is the probability that an expected \
third child will be a boy? 1/2. It doesn\[CloseCurlyQuote]t matter what the \
first two children are.\
\>", "Text",
 CellChangeTimes->{{3.878494030313122*^9, 
  3.878494059422414*^9}},ExpressionUUID->"7b7fce7d-a330-4ca5-8c34-\
ca2621cfb2dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.6", "Section",
 CellChangeTimes->{{3.878494086606449*^9, 
  3.878494089906926*^9}},ExpressionUUID->"f39d192e-072f-4648-b772-\
e0595042ce5d"],

Cell["\<\
A trick deck of cards is printed with the hearts and diamonds black, and the \
spades and clubs red. A card is chosen at random from this deck (after it is \
shuffled). Find the probability that it is either a red card or the queen of \
hearts. That it is either a red face card or a club. That it is either a red \
ace or a diamond.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellDingbat->"\[EmptyCircle]",
 CellChangeTimes->{{3.8784940910787697`*^9, 3.878494145319089*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"b9b85b29-2447-49ad-8aee-5a8d3c6b5114"],

Cell["\<\
The total number of outcomes is number of outcomes favorable to E/total number\
\>", "Text",
 CellChangeTimes->{{3.8784941743384748`*^9, 
  3.8784941942024927`*^9}},ExpressionUUID->"f6896f94-565e-422e-b963-\
433444f15584"],

Cell["\<\
If there are several equally likely, mutually exclusive, and collectively \
exhaustive outcomes of an experiment, the probability of an event E is\
\>", "Text",
 CellChangeTimes->{{3.8784942015151434`*^9, 
  3.878494223296337*^9}},ExpressionUUID->"30f9bc5c-7a0f-40f4-b918-\
12051801d781"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"p", "=", 
   FractionBox[
    RowBox[{
    "number", " ", "of", " ", "outcomes", " ", "favorable", " ", "to", " ", 
     "E"}], 
    RowBox[{"total", " ", "number", " ", "of", " ", "outcomes"}]]}], 
  TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"64d64cc3-5c30-45c4-9d69-a51d2d724e6a"]], \
"Text",
 CellChangeTimes->{{3.878494225396923*^9, 
  3.8784942454180264`*^9}},ExpressionUUID->"c9396ef1-3f97-44f7-bfd6-\
0c8d177fd4bf"],

Cell[CellGroupData[{

Cell["\<\
Find the probability that it is either a red card or the queen of hearts\
\>", "Subsection",
 CellChangeTimes->{
  3.878494545389597*^9},ExpressionUUID->"90ecc636-af7b-426e-a9fe-\
9bae718a45e9"],

Cell["\<\
Number of outcomes favorable to either a red card or queen of hearts. If red \
card and queen of hearts are mutually exclusive this is the number of red \
cards + number of queen of hearts. The hearts are black, so there\
\[CloseCurlyQuote]s can\[CloseCurlyQuote]t be a red card that\
\[CloseCurlyQuote]s a queen and a heart so they are mutually exclusive. The \
are 26 red cards and 1 queen of hearts. That makes 27 for the numerator. The \
total number of outcomes is 52.\
\>", "Text",
 CellChangeTimes->{{3.8784942477604465`*^9, 
  3.878494357178132*^9}},ExpressionUUID->"caacb691-230d-4c9b-a952-\
427e88fc611d"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["27", "52"]], "Input",
 CellChangeTimes->{{3.8784943580059423`*^9, 3.878494359630932*^9}},
 CellLabel->
  "In[661]:=",ExpressionUUID->"a3eb3231-ac41-4dc4-bf6c-e26891df59cd"],

Cell[BoxData[
 FractionBox["27", "52"]], "Output",
 CellChangeTimes->{3.8784943601187277`*^9},
 CellLabel->
  "Out[661]=",ExpressionUUID->"88b6cbfc-5044-47d1-9e74-8bbf9a4cf1d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FractionBox["27", "52"]], "Input",
 CellChangeTimes->{{3.8784943580059423`*^9, 
  3.878494359630932*^9}},ExpressionUUID->"d238d2aa-ebc0-40de-9629-\
5b708f27374a"]], "WolframAlphaLong",
 CellChangeTimes->{{3.878494363538933*^9, 3.878494364500796*^9}},
 CellLabel->
  "In[662]:=",ExpressionUUID->"8e8595d4-b50b-42de-bf98-8dac582a9264"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "27/52", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"27/52"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["27", "52"], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Exact result", "scanner" -> "Rational", "id" -> 
     "Result", "position" -> "200", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              FractionBox["27", "52"], 
              TemplateBox[{10}, "Spacer1"], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"irreducible\"", "\[NoBreak]", 
                 "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Decimal approximation", "scanner" -> "Numeric", "id" -> 
     "DecimalApproximation", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[27/52, 79]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"0.5192307692307692307692307692307692307692307692307692307\
692307692\[Ellipsis]\"", LineIndent -> 0.54, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], FrameMargins -> {{0, 10}, {0, 0}}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> 
         "DecimalApproximation__More digits"}, {}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Repeating decimal", "scanner" -> "Rational", "id" -> 
     "RepeatingDecimal", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"RealDigits[27/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               TagBox[
                GridBox[{{
                   TemplateBox[{"\"0.51\"", 
                    OverscriptBox["\"923076\"", "_"]}, "RowDefault"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 DefaultBaseStyle -> "Column", 
                 GridBoxItemSize -> {"Columns" -> {{
                    DirectedInfinity[1]}}, "Rows" -> {{
                    DirectedInfinity[1]}}}], "Column"], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"period \"", "6"}, "RowDefault"], 
                  "\[NoBreak]", "\")\""}], {
                FontFamily -> "Roboto", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[27/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{0.5192307692307693, 0.009346153846153846}]}, 
                  "0.5192307692307693`"], 
                 Annotation[#, 0.5192307692307693, "Tooltip"]& ]}, ImageSize -> 
               330., Axes -> {True, False}, 
               PlotRange -> {{0.3634615384615385, 0.675}, Automatic}, 
               AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Roboto", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Percentage", "scanner" -> "Numeric", "id" -> 
     "Percentage", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[(100 27)/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TemplateBox[{"\"\"", "51", "\".\"", "9", "2"}, "RowDefault"], 
              "\"%\""}, "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Pie chart", "scanner" -> "Rational", "id" -> 
     "PieChart", "position" -> "700", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[{{{}, {}, {{
                  Directive[
                   EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66]]], 
                   RGBColor[0.5, 0.5, 1.]], {{{{{{}, {{
                    Directive[
                    RGBColor[1., 0.856, 0.422], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66], 
                    Thickness[0.006]]]], 
                    
                    DiskBox[{0, 0}, 1., {-0.12083048667653085`, 
                    3.141592653589793}]}, {
                    Directive[
                    RGBColor[0.941, 0.941, 0.941], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66], 
                    Thickness[0.006]]]], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.12083048667653085`}]}}}}}, \
{}}, {{}}}}, {{{{{{}, {}}, {{}, {}}}, {}}}, {}}, {}, {}}, {{{}, {}}}, {{{{}, \
{}, {}, {}}}, {}}}, {
                GrayLevel[0.5], 
                Thickness[0.01], 
                CircleBox[{0, 0}]}}, DisplayFunction -> Identity, BaseStyle -> 
              Automatic, GridLinesStyle -> Automatic, ImageSize -> 50, 
              PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
              Scaled[0.05]], 
             $CellContext`TagBoxWrapper["StringBoxes" -> ""]], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Prime factorization", "scanner" -> "Integer", "id" -> 
     "PrimeFactorization", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"FactorInteger[27/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               SuperscriptBox["2", 
                TagBox[
                 RowBox[{"-", "2"}], HoldForm]], 
               StyleBox["\[Times]", FontColor -> GrayLevel[0.5]], 
               SuperscriptBox["3", 
                TagBox["3", HoldForm]], 
               StyleBox["\[Times]", FontColor -> GrayLevel[0.5]], 
               SuperscriptBox["13", 
                TagBox[
                 RowBox[{"-", "1"}], HoldForm]]}], DigitBlockMinimum -> {
               DirectedInfinity[1], 
               DirectedInfinity[1]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Continued fraction", "scanner" -> "ContinuedFraction", 
     "id" -> "ContinuedFraction", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ContinuedFraction[27/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                
                TemplateBox[{"\"[\"", "\"0; 1, 1, 12, 2\"", "\"]\""}, 
                 "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
               DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {"Columns" -> {{
                   Scaled[1.003]}}}], "Column"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Fraction form", "input" -> 
         "ContinuedFraction__Fraction form"}, {}]}]}], Typeset`pod10$$ = 
   XMLElement[
   "pod", {"title" -> "Egyptian fraction expansion", "scanner" -> "Rational", 
     "id" -> "EgyptianFractionExpansion", "position" -> "1000", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               FractionBox["1", "2"], HoldForm], "+", 
              TagBox[
               FractionBox["1", "52"], HoldForm]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "10", "datatypes" -> "Math", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "2.1470000000000002", "parsetiming" -> 
    "0.062", "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP44011gi8ce2if9h71h3500003b7bh537b1966e2b", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "6", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa44021gi8ce2if9h71h350000473aei4dihc73eba7167914177805443390", "version" -> 
    "2.6", "inputstring" -> "27/52"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 26, 18, 32, 48.0777707`9.434519180063196}, "Line" -> 
    662, "SessionID" -> 16944803280185088864}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "27/52"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1074., {352.3544921875, 357.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.878494368140276*^9},ExpressionUUID->"1553bd7b-f4c7-47e1-b8ad-\
2edcd689f47a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["That it is either a red face card or a club.", "Subsection",
 CellChangeTimes->{
  3.8784945338529453`*^9},ExpressionUUID->"e0c131b7-c0b8-4682-a220-\
8fd4b6cfa635"],

Cell["\<\
That it is either a red card or a club. We have to use the \
inclusion-exclusion principle here. There are 26 red cards. There are 13 club \
cards. There are 13 red club cards. There are 13 red cards that aren\
\[CloseCurlyQuote]t clubs. We do 26+13-13=26. There are 52 cards so we have\
\>", "Text",
 CellChangeTimes->{{3.8784943950832205`*^9, 
  3.8784944890218515`*^9}},ExpressionUUID->"b0822818-40de-4ea2-8230-\
3737d02ccbc3"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["26", "52"]], "Input",
 CellChangeTimes->{{3.8784944895686164`*^9, 3.878494491265937*^9}},
 CellLabel->
  "In[663]:=",ExpressionUUID->"c4c0d7d8-36aa-4547-b7fd-e0c759f0669b"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.8784944917345915`*^9},
 CellLabel->
  "Out[663]=",ExpressionUUID->"1add7d85-e506-4bbb-be22-cc77eb8b9aa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FractionBox["26", "52"]], "Input",
 CellChangeTimes->{{3.8784944895686164`*^9, 
  3.878494491265937*^9}},ExpressionUUID->"da55484a-5314-4be6-b374-\
b89d83bf414a"]], "WolframAlphaLong",
 CellChangeTimes->{{3.8784944945382924`*^9, 3.8784944954195795`*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"43fdea5d-fa59-41f5-adef-de2f9c6970c6"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "26/52", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"26/52"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["26", "52"], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Exact result", "scanner" -> "Rational", "id" -> 
     "Result", "position" -> "200", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["1", "2"], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Result__Step-by-step solution", "stepbystep" -> "true"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Decimal form", "scanner" -> "Numeric", "id" -> 
     "DecimalApproximation", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[26/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"0.5\"", LineIndent -> 0.54, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], FrameMargins -> {{0, 10}, {0, 0}}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[1/2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{0.5, 0.009000000000000001}]}, "0.5`"], 
                 Annotation[#, 0.5, "Tooltip"]& ]}, ImageSize -> 330., 
               Axes -> {True, False}, PlotRange -> {{0.35, 0.65}, Automatic}, 
               AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Roboto", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Percentage", "scanner" -> "Numeric", "id" -> 
     "Percentage", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[100/2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"50", "\"%\""}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Pie chart", "scanner" -> "Rational", "id" -> 
     "PieChart", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               GraphicsBox[{{{}, {}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66]]], 
                    RGBColor[0.5, 0.5, 1.]], {{{{{{}, {{
                    Directive[
                    RGBColor[1., 0.856, 0.422], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66], 
                    Thickness[0.006]]]], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}, {
                    Directive[
                    RGBColor[0.941, 0.941, 0.941], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66], 
                    Thickness[0.006]]]], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    0.}]}}}}}, {}}, {{}}}}, {{{{{{}, {}}, {{}, {}}}, {}}}, \
{}}, {}, {}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
                  GrayLevel[0.5], 
                  Thickness[0.01], 
                  CircleBox[{0, 0}]}}, DisplayFunction -> Identity, BaseStyle -> 
                Automatic, GridLinesStyle -> Automatic, ImageSize -> 50, 
                PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
                Scaled[0.05]]}, "Row", 
              DisplayFunction -> (FrameBox[#, FrameStyle -> None]& ), 
              InterpretationFunction -> (RowBox[{
                 StyleBox[
                 "Row", FontFamily -> "Roboto", FontSize -> -1 + Inherited], 
                 "[", 
                 RowBox[{
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{
                    StyleBox[
                    "Frame", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], "\[Rule]", "True"}], ",", 
                   RowBox[{
                    StyleBox[
                    "FrameStyle", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], "\[Rule]", 
                    StyleBox[
                    "None", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited]}]}], "]"}]& )], 
             $CellContext`TagBoxWrapper["StringBoxes" -> ""]], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Continued fraction", "scanner" -> "ContinuedFraction", 
     "id" -> "ContinuedFraction", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ContinuedFraction[1/2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{"\"[\"", "\"0; 2\"", "\"]\""}, "RowDefault"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", GridBoxItemSize -> {"Columns" -> {{
                   Scaled[1.003]}}}], "Column"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Fraction form", "input" -> 
         "ContinuedFraction__Fraction form"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "7", "datatypes" -> "Math", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.363", "parsetiming" -> "0.078", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP14201hgig1148h2hh61i0000267hi53cgi4dd315", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "12", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa14211hgig1148h2hh61i00001ba74h483d95ffc6822558548030476863", "version" -> 
    "2.6", "inputstring" -> "26/52"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 26, 18, 34, 56.8809581`9.507541739436055}, "Line" -> 
    664, "SessionID" -> 16944803280185088864}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "26/52"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1074., {264.3544921875, 269.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.878494496927837*^9},ExpressionUUID->"808b0fa6-9d8b-4e63-ad0c-\
e7f75a05b7f4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["That it is either a red ace or a diamond.", "Subsection",
 CellChangeTimes->{
  3.8784945216228294`*^9},ExpressionUUID->"2f8623fc-246e-405f-bba6-\
c6d48131fef1"],

Cell["\<\
There are two suits that are red, clubs and spades. Then there are two red \
ace cards. There are thirteen diamond cards. The diamond cards are black so \
the events red ace and diamond are mutually exclusive so we can add the total \
to get 2+13=15. We have\
\>", "Text",
 CellChangeTimes->{{3.878494553490528*^9, 
  3.87849462234676*^9}},ExpressionUUID->"3687f0a8-1f6d-4366-b990-\
b42c81466c17"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["15", "52"]], "Input",
 CellChangeTimes->{{3.8784946238649178`*^9, 3.87849462580049*^9}},
 CellLabel->
  "In[665]:=",ExpressionUUID->"0989f0f6-4f7d-4916-9163-3a25bac62f95"],

Cell[BoxData[
 FractionBox["15", "52"]], "Output",
 CellChangeTimes->{3.878494626316008*^9},
 CellLabel->
  "Out[665]=",ExpressionUUID->"1560240e-26ab-4541-b792-3c9a2d6e7fcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FractionBox["15", "52"]], "Input",
 CellChangeTimes->{{3.8784946238649178`*^9, 
  3.87849462580049*^9}},ExpressionUUID->"802255db-cfcc-424c-8383-\
79b61cefa14b"]], "WolframAlphaLong",
 CellChangeTimes->{{3.878494628252329*^9, 3.878494628674262*^9}},
 CellLabel->
  "In[666]:=",ExpressionUUID->"f4f3e592-c3e6-4014-864f-575c1fa12125"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "15/52", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"15/52"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["15", "52"], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Exact result", "scanner" -> "Rational", "id" -> 
     "Result", "position" -> "200", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              FractionBox["15", "52"], 
              TemplateBox[{10}, "Spacer1"], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"irreducible\"", "\[NoBreak]", 
                 "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Decimal approximation", "scanner" -> "Numeric", "id" -> 
     "DecimalApproximation", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[15/52, 79]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"0.2884615384615384615384615384615384615384615384615384615\
384615384\[Ellipsis]\"", LineIndent -> 0.54, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], FrameMargins -> {{0, 10}, {0, 0}}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> 
         "DecimalApproximation__More digits"}, {}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Repeating decimal", "scanner" -> "Rational", "id" -> 
     "RepeatingDecimal", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"RealDigits[15/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               TagBox[
                GridBox[{{
                   TemplateBox[{"\"0.28\"", 
                    OverscriptBox["\"846153\"", "_"]}, "RowDefault"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 DefaultBaseStyle -> "Column", 
                 GridBoxItemSize -> {"Columns" -> {{
                    DirectedInfinity[1]}}, "Rows" -> {{
                    DirectedInfinity[1]}}}], "Column"], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"period \"", "6"}, "RowDefault"], 
                  "\[NoBreak]", "\")\""}], {
                FontFamily -> "Roboto", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[15/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{0.28846153846153844`, 0.005192307692307694}]}, 
                  "0.28846153846153844`"], 
                 Annotation[#, 0.28846153846153844`, "Tooltip"]& ]}, 
               ImageSize -> 330., Axes -> {True, False}, 
               PlotRange -> {{0.20192307692307687`, 0.375}, Automatic}, 
               AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Roboto", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Percentage", "scanner" -> "Numeric", "id" -> 
     "Percentage", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[(100 15)/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TemplateBox[{"\"\"", "28", "\".\"", "8", "5"}, "RowDefault"], 
              "\"%\""}, "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Pie chart", "scanner" -> "Rational", "id" -> 
     "PieChart", "position" -> "700", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[{{{}, {}, {{
                  Directive[
                   EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66]]], 
                   RGBColor[0.5, 0.5, 1.]], {{{{{{}, {{
                    Directive[
                    RGBColor[1., 0.856, 0.422], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66], 
                    Thickness[0.006]]]], 
                    
                    DiskBox[{0, 0}, 1., {1.3291353534418353`, 
                    3.141592653589793}]}, {
                    Directive[
                    RGBColor[0.941, 0.941, 0.941], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66], 
                    Thickness[0.006]]]], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.3291353534418353`}]}}}}}, {}}, {{}}}}, {{{{{{}, {}}, \
{{}, {}}}, {}}}, {}}, {}, {}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
                GrayLevel[0.5], 
                Thickness[0.01], 
                CircleBox[{0, 0}]}}, DisplayFunction -> Identity, BaseStyle -> 
              Automatic, GridLinesStyle -> Automatic, ImageSize -> 50, 
              PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
              Scaled[0.05]], 
             $CellContext`TagBoxWrapper["StringBoxes" -> ""]], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Prime factorization", "scanner" -> "Integer", "id" -> 
     "PrimeFactorization", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"FactorInteger[15/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               SuperscriptBox["2", 
                TagBox[
                 RowBox[{"-", "2"}], HoldForm]], 
               StyleBox["\[Times]", FontColor -> GrayLevel[0.5]], "3", 
               StyleBox["\[Times]", FontColor -> GrayLevel[0.5]], "5", 
               StyleBox["\[Times]", FontColor -> GrayLevel[0.5]], 
               SuperscriptBox["13", 
                TagBox[
                 RowBox[{"-", "1"}], HoldForm]]}], DigitBlockMinimum -> {
               DirectedInfinity[1], 
               DirectedInfinity[1]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Continued fraction", "scanner" -> "ContinuedFraction", 
     "id" -> "ContinuedFraction", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ContinuedFraction[15/52]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                
                TemplateBox[{"\"[\"", "\"0; 3, 2, 7\"", "\"]\""}, 
                 "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
               DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {"Columns" -> {{
                   Scaled[1.003]}}}], "Column"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Fraction form", "input" -> 
         "ContinuedFraction__Fraction form"}, {}]}]}], Typeset`pod10$$ = 
   XMLElement[
   "pod", {"title" -> "Egyptian fraction expansion", "scanner" -> "Rational", 
     "id" -> "EgyptianFractionExpansion", "position" -> "1000", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               FractionBox["1", "4"], HoldForm], "+", 
              TagBox[
               FractionBox["1", "26"], HoldForm]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "10", "datatypes" -> "Math", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "0.677", "parsetiming" -> "0.065", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP18012276a84e61egbe3d0000491agc6afc7f3i54", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "15", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa18022276a84e61egbe3d00002079bg0bfihg45028884920455003441207", "version" -> 
    "2.6", "inputstring" -> "15/52"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 26, 18, 37, 10.5648026`8.776436348693563}, "Line" -> 
    666, "SessionID" -> 16944803280185088864}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "15/52"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1074., {352.3544921875, 357.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.8784946306272936`*^9},ExpressionUUID->"ab47ee11-46e5-430f-bdf4-\
0d7d614f1d37"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/Mathematical Methods \
in the Physical Sciences/Problems section 1 chapter 15 9780471198260.nb"},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9b99f063-ce77-4f8e-a5ab-7d23199d2e2e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 150, 3, 67, "Section",ExpressionUUID->"fdf7fe4f-7636-4807-b6bb-96f8b0f0a038"],
Cell[733, 27, 354, 7, 58, "Text",ExpressionUUID->"cbe18021-80c8-4c57-a7c3-7afc1d89fe48"],
Cell[CellGroupData[{
Cell[1112, 38, 298, 6, 28, "Input",ExpressionUUID->"d58b5b47-eebe-4707-9e9f-d400912da7ef"],
Cell[1413, 46, 251, 5, 32, "Output",ExpressionUUID->"4dca9cc8-46fa-4968-9a93-7b41d77ef1f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1701, 56, 329, 8, 28, "Input",ExpressionUUID->"0faf32c9-0703-47c2-8d5b-b8ffd25a71fd"],
Cell[2033, 66, 197, 3, 32, "Output",ExpressionUUID->"189172cf-0036-4eeb-91ae-467f355d1bbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2267, 74, 225, 3, 41, "WolframAlphaLong",ExpressionUUID->"1f574e18-1053-4f7f-b4a3-959afc2c19f6"],
Cell[2495, 79, 148007, 2694, 1112, "Print",ExpressionUUID->"5482ea6f-dcd4-4980-bbca-43ec93262004"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150539, 2778, 309, 8, 28, "Input",ExpressionUUID->"a282c753-afe5-419d-9d7e-3ba6f33a4060"],
Cell[150851, 2788, 1060, 29, 52, "Output",ExpressionUUID->"e09317e9-7de7-46aa-81f7-0dfca88a2ddc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151948, 2822, 472, 13, 28, "Input",ExpressionUUID->"2d0b38b2-36ac-4ba9-81ea-5b17aad58a39"],
Cell[152423, 2837, 272, 7, 32, "Output",ExpressionUUID->"7b927f30-e6a0-4353-b225-60a8a6d10571"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152732, 2849, 461, 13, 28, "Input",ExpressionUUID->"407083e7-626e-4f94-a1b3-5e480a0692cf"],
Cell[153196, 2864, 398, 11, 32, "Output",ExpressionUUID->"ffa2ba0b-8fc0-4476-b11d-b928da70ef80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153631, 2880, 514, 14, 48, "Input",ExpressionUUID->"54ce571b-ef99-434d-b7f9-2fefe8a476c3"],
Cell[154148, 2896, 644, 17, 52, "Output",ExpressionUUID->"ac6fa81e-b47c-4622-b55e-604b00ee70d7"]
}, Open  ]],
Cell[154807, 2916, 175, 3, 35, "Text",ExpressionUUID->"edf1a009-2ce2-47bc-90f6-7614d3e01de0"],
Cell[154985, 2921, 229, 5, 35, "Text",ExpressionUUID->"9aa3ca5f-9e37-458d-a952-ea29fe60bce1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155251, 2931, 152, 3, 67, "Section",ExpressionUUID->"854b8f34-b8c9-41ba-a0c6-e2422b729729"],
Cell[155406, 2936, 303, 6, 35, "Text",ExpressionUUID->"89ad0a49-28ff-4404-8913-8fd8c9b79dd9"],
Cell[CellGroupData[{
Cell[155734, 2946, 291, 6, 28, "Input",ExpressionUUID->"c6352b5d-af73-4d49-a0c4-4f92a0594bb7"],
Cell[156028, 2954, 227, 5, 32, "Output",ExpressionUUID->"55104e4a-056f-4236-9b36-6af2fd4b5c72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156292, 2964, 320, 7, 28, "Input",ExpressionUUID->"d0d0c03e-a684-4e69-a9fb-e2446d2c30e5"],
Cell[156615, 2973, 159, 3, 32, "Output",ExpressionUUID->"01ba4686-b79d-4d22-94ee-9ef89c59b91a"]
}, Open  ]],
Cell[156789, 2979, 172, 3, 35, "Text",ExpressionUUID->"2391d751-689d-46f9-8048-bd776a61db8f"],
Cell[CellGroupData[{
Cell[156986, 2986, 305, 8, 28, "Input",ExpressionUUID->"d20d69b1-7efd-4687-800f-830a140e4b57"],
Cell[157294, 2996, 532, 13, 32, "Output",ExpressionUUID->"df2678f4-061c-4eff-8d12-7d4d091ae6cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157863, 3014, 314, 8, 32, "Input",ExpressionUUID->"56356946-af9d-4780-8f14-7ec811271b2f"],
Cell[158180, 3024, 537, 14, 36, "Output",ExpressionUUID->"c8fcc528-9443-485d-aa63-b45d88549433"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158754, 3043, 295, 7, 32, "Input",ExpressionUUID->"01276d4e-f975-4dcf-a2a5-f5ee44c13e55"],
Cell[159052, 3052, 472, 13, 36, "Output",ExpressionUUID->"f4c1b90c-7cb4-4271-90ad-a7cda4383316"]
}, Open  ]],
Cell[159539, 3068, 263, 6, 35, "Text",ExpressionUUID->"4e427d25-d5a4-428d-93c3-b0d0db9b5d20"],
Cell[159805, 3076, 248, 6, 35, "Text",ExpressionUUID->"d77c689f-9f32-4137-b527-373653d4140c"],
Cell[CellGroupData[{
Cell[160078, 3086, 477, 14, 32, "Input",ExpressionUUID->"aeff6e5e-bc9d-4ce9-8a08-f0c033128067"],
Cell[160558, 3102, 423, 11, 36, "Output",ExpressionUUID->"2f432c05-c995-465d-ad1e-d1ffb6183dd6"]
}, Open  ]],
Cell[160996, 3116, 169, 3, 35, "Text",ExpressionUUID->"11373d67-985f-4980-ba8a-ebd68e84aa52"],
Cell[161168, 3121, 330, 7, 35, "Text",ExpressionUUID->"7b7fce7d-a330-4ca5-8c34-ca2621cfb2dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161535, 3133, 148, 3, 67, "Section",ExpressionUUID->"f39d192e-072f-4648-b772-e0595042ce5d"],
Cell[161686, 3138, 579, 11, 74, "Text",ExpressionUUID->"b9b85b29-2447-49ad-8aee-5a8d3c6b5114"],
Cell[162268, 3151, 232, 5, 35, "Text",ExpressionUUID->"f6896f94-565e-422e-b963-433444f15584"],
Cell[162503, 3158, 298, 6, 35, "Text",ExpressionUUID->"30f9bc5c-7a0f-40f4-b918-12051801d781"],
Cell[162804, 3166, 496, 14, 39, "Text",ExpressionUUID->"c9396ef1-3f97-44f7-bfd6-0c8d177fd4bf"],
Cell[CellGroupData[{
Cell[163325, 3184, 204, 5, 54, "Subsection",ExpressionUUID->"90ecc636-af7b-426e-a9fe-9bae718a45e9"],
Cell[163532, 3191, 625, 11, 81, "Text",ExpressionUUID->"caacb691-230d-4c9b-a952-427e88fc611d"],
Cell[CellGroupData[{
Cell[164182, 3206, 200, 4, 45, "Input",ExpressionUUID->"a3eb3231-ac41-4dc4-bf6c-e26891df59cd"],
Cell[164385, 3212, 177, 4, 48, "Output",ExpressionUUID->"88b6cbfc-5044-47d1-9e74-8bbf9a4cf1d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164599, 3221, 362, 7, 41, "WolframAlphaLong",ExpressionUUID->"8e8595d4-b50b-42de-bf98-8dac582a9264"],
Cell[164964, 3230, 28192, 562, 720, "Print",ExpressionUUID->"1553bd7b-f4c7-47e1-b8ad-2edcd689f47a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[193205, 3798, 170, 3, 38, "Subsection",ExpressionUUID->"e0c131b7-c0b8-4682-a220-8fd4b6cfa635"],
Cell[193378, 3803, 440, 8, 58, "Text",ExpressionUUID->"b0822818-40de-4ea2-8230-3737d02ccbc3"],
Cell[CellGroupData[{
Cell[193843, 3815, 200, 4, 45, "Input",ExpressionUUID->"c4c0d7d8-36aa-4547-b7fd-e0c759f0669b"],
Cell[194046, 3821, 175, 4, 48, "Output",ExpressionUUID->"1add7d85-e506-4bbb-be22-cc77eb8b9aa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194258, 3830, 366, 7, 41, "WolframAlphaLong",ExpressionUUID->"43fdea5d-fa59-41f5-adef-de2f9c6970c6"],
Cell[194627, 3839, 21167, 422, 544, "Print",ExpressionUUID->"808b0fa6-9d8b-4e63-ad0c-e7f75a05b7f4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[215843, 4267, 167, 3, 38, "Subsection",ExpressionUUID->"2f8623fc-246e-405f-bba6-c6d48131fef1"],
Cell[216013, 4272, 407, 8, 58, "Text",ExpressionUUID->"3687f0a8-1f6d-4366-b990-b42c81466c17"],
Cell[CellGroupData[{
Cell[216445, 4284, 199, 4, 45, "Input",ExpressionUUID->"0989f0f6-4f7d-4916-9163-3a25bac62f95"],
Cell[216647, 4290, 175, 4, 48, "Output",ExpressionUUID->"1560240e-26ab-4541-b792-3c9a2d6e7fcf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216859, 4299, 361, 7, 41, "WolframAlphaLong",ExpressionUUID->"f4f3e592-c3e6-4014-864f-575c1fa12125"],
Cell[217223, 4308, 28179, 560, 720, "Print",ExpressionUUID->"ab47ee11-46e5-430f-bdf4-0d7d614f1d37"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

