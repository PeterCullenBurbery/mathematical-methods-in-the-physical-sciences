(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    384965,       7946]
NotebookOptionsPosition[    368058,       7637]
NotebookOutlinePosition[    368523,       7654]
CellTagsIndexPosition[    368480,       7651]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Problem 1", "Section",
 CellChangeTimes->{{3.878482161880255*^9, 
  3.878482163062253*^9}},ExpressionUUID->"53414823-3a21-4525-80fc-\
069facfbbf92"],

Cell["\<\
In the bouncing ball example above, find the height of the tenth rebound, and \
the distance traveled by the ball after it touches the ground the tenth time. \
Compare this distance with the total distance traveled.\
\>", "Text",
 CellChangeTimes->{{3.8784821566642265`*^9, 
  3.8784822012376585`*^9}},ExpressionUUID->"4a9d669e-1335-4c8b-8415-\
6b12eae9c866"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"height", "=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["2", "3"], ")"}], "#"], "&"}]}]], "Input",
 CellChangeTimes->{{3.878482211943334*^9, 3.878482218734379*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"01dd8dc0-5bd2-4096-b2dd-9abc914f578b"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["2", "3"], ")"}], "#1"], "&"}]], "Output",
 CellChangeTimes->{3.8784822191673565`*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"4f8fd8ed-e5ea-498e-ad01-12116f372f8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"height", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.8784822195423565`*^9, 3.878482220714362*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"814511ec-0e62-439d-a884-22424e0ce6b6"],

Cell[BoxData[
 FractionBox["1024", "59049"]], "Output",
 CellChangeTimes->{3.878482221151849*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"e157bab6-664e-4b73-b2fd-9e1fa1d82cdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"height", "[", "10", "]"}], ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.8784822225040293`*^9, 3.878482224065123*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"75bb545c-a331-4faa-81dd-2f2b54d849c5"],

Cell[BoxData["0.01734152991583261359210147504614811428`20."], "Output",
 CellChangeTimes->{3.8784822244557285`*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"1a8dcbfc-0a1e-478d-9ea0-6bc2f9b3f6c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FractionBox["1024", "59049"]], "Output",
 CellChangeTimes->{
  3.878482221151849*^9},ExpressionUUID->"d5a45b4e-a2c6-4f3c-b4a7-\
339a42d52402"]], "WolframAlphaLong",
 CellChangeTimes->{{3.8784822285438313`*^9, 3.8784822340594735`*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"cdc7ed44-37dd-4853-8c59-825e899121c8"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "1024/59049", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"ContinuedFraction__Fraction form"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"1024/59049"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["1024", "59049"], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Exact result", "scanner" -> "Rational", "id" -> 
     "Result", "position" -> "200", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              FractionBox["1024", "59049"], 
              TemplateBox[{10}, "Spacer1"], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"irreducible\"", "\[NoBreak]", 
                 "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Decimal approximation", "scanner" -> "Numeric", "id" -> 
     "DecimalApproximation", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[1024/59049, 79]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"0.0173415299158326135921014750461481142779725312875747260\
749546986\[Ellipsis]\"", LineIndent -> 0.54, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], FrameMargins -> {{0, 10}, {0, 0}}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> 
         "DecimalApproximation__More digits"}, {}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Repeating decimal", "scanner" -> "Rational", "id" -> 
     "RepeatingDecimal", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"RealDigits[1024/59049]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\"(\"", "\[NoBreak]", 
               TemplateBox[{"\"period \"", "6561"}, "RowDefault"], 
               "\[NoBreak]", "\")\""}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[1024/59049]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   
                   PointBox[{0.017341529915832612`, 
                    0.00031214753848498705`}]}, "0.017341529915832612`"], 
                 Annotation[#, 0.017341529915832612`, "Tooltip"]& ]}, 
               ImageSize -> 330., Axes -> {True, False}, 
               PlotRange -> {{0.012139070941082828`, 0.022543988890582397`}, 
                 Automatic}, AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Roboto", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Percentage", "scanner" -> "Numeric", "id" -> 
     "Percentage", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[(100 1024)/59049]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              
              TemplateBox[{"\"\"", "1", "\".\"", "7", "3", "4"}, 
               "RowDefault"], "\"%\""}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Pie chart", "scanner" -> "Rational", "id" -> 
     "PieChart", "position" -> "700", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[{{{}, {}, {{
                  Directive[
                   EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66]]], 
                   RGBColor[0.5, 0.5, 1.]], {{{{{{}, {{
                    Directive[
                    RGBColor[1., 0.856, 0.422], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66], 
                    Thickness[0.006]]]], 
                    
                    DiskBox[{0, 0}, 1., {3.0326326076186185`, 
                    3.141592653589793}]}, {
                    Directive[
                    RGBColor[0.941, 0.941, 0.941], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.66], 
                    Thickness[0.006]]]], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.0326326076186185`}]}}}}}, {}}, {{}}}}, {{{{{{}, {}}, \
{{}, {}}}, {}}}, {}}, {}, {}}, {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
                GrayLevel[0.5], 
                Thickness[0.01], 
                CircleBox[{0, 0}]}}, DisplayFunction -> Identity, BaseStyle -> 
              Automatic, GridLinesStyle -> Automatic, ImageSize -> 50, 
              PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
              Scaled[0.05]], 
             $CellContext`TagBoxWrapper["StringBoxes" -> ""]], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Prime factorization", "scanner" -> "Integer", "id" -> 
     "PrimeFactorization", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"FactorInteger[1024/59049]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               SuperscriptBox["2", 
                TagBox["10", HoldForm]], 
               StyleBox["\[Times]", FontColor -> GrayLevel[0.5]], 
               SuperscriptBox["3", 
                TagBox[
                 RowBox[{"-", "10"}], HoldForm]]}], DigitBlockMinimum -> {
               DirectedInfinity[1], 
               DirectedInfinity[1]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Continued fraction", "scanner" -> "ContinuedFraction", 
     "id" -> "ContinuedFraction", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ContinuedFraction[1024/59049, 100]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               FractionBox["1", 
                RowBox[{"57", "+", 
                  TagBox[
                   FractionBox["1", 
                    RowBox[{"1", "+", 
                    TagBox[
                    FractionBox["1", 
                    RowBox[{"1", "+", 
                    TagBox[
                    FractionBox["1", 
                    RowBox[{"1", "+", 
                    TagBox[
                    FractionBox["1", 
                    RowBox[{"67", "+", 
                    TagBox[
                    FractionBox["1", 
                    RowBox[{"1", "+", 
                    TagBox[
                    FractionBox["1", 
                    RowBox[{"1", "+", 
                    TagBox[
                    FractionBox["1", "2"], HoldForm]}]], HoldForm]}]], 
                    HoldForm]}]], HoldForm]}]], HoldForm]}]], HoldForm]}]], 
                   HoldForm]}]], HoldForm], 
              PolynomialForm[#, TraditionalOrder -> False]& ], 
             ScriptSizeMultipliers -> 1, StripOnInput -> False], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Linear form", "input" -> 
         "ContinuedFraction__Linear form"}, {}]}]}], Typeset`pod10$$ = 
   XMLElement[
   "pod", {"title" -> "Egyptian fraction expansion", "scanner" -> "Rational", 
     "id" -> "EgyptianFractionExpansion", "position" -> "1000", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               FractionBox["1", "58"], HoldForm], "+", 
              TagBox[
               FractionBox["1", "9985"], HoldForm], "+", 
              TagBox[
               FractionBox["1", "2630542106"], HoldForm], "+", 
              TagBox[
               FractionBox["1", "11244596625957695153"], HoldForm], "+", 
              TagBox[
               FractionBox["1", "252881906560998363981400397886201691665"], 
               HoldForm]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "10", "datatypes" -> "Math", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "3.234", "parsetiming" -> "0.076", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP2691de9ef9h5h5i4ch500005i4296427c3fb409", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "17", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa2701de9ef9h5h5i4ch50000135d28bh2a4f52233454770973695860617", "version" -> 
    "2.6", "inputstring" -> "1024/59049"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 26, 15, 10, 38.6624773`9.339864563536699}, "Line" -> 
    354, "SessionID" -> 16944803280185088864}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "1024/59049"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{503., {439.3544921875, 444.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.878482238724987*^9},ExpressionUUID->"982bf831-fda8-440b-bc40-\
760df23a2e23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distance", "=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{"height", "[", "i", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8784822720641146`*^9, 3.878482286965046*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"01afdeb3-3862-4ba8-bde8-a860ddbfd4f0"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{"1", "+", "n"}]], " ", 
  SuperscriptBox["3", 
   RowBox[{"-", "n"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["3", "2"], ")"}], "n"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.878482287511961*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"a70afc61-05f0-41be-a85a-a1115fde7ee6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distance", "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8784822720641146`*^9, 3.8784822999072447`*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"fb82b74f-9d87-4879-9b9e-d04548070ac0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["2", "3"], ")"}], "n"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8784823004541225`*^9},
 CellLabel->
  "Out[356]=",ExpressionUUID->"bec6004e-c538-4bde-992d-95b131f5a5ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["2", "3"], ")"}], "n"]}], ")"}]}]}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[357]:=",ExpressionUUID->"3101086f-a00c-4124-b6b4-f6e984bc8ad7"],

Cell[BoxData[
 TemplateBox[{
  "Sum", "div", "\"Sum does not converge.\"", 2, 357, 60, 
   16944803280185088864, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8784823048476844`*^9},
 CellLabel->
  "During evaluation of \
In[357]:=",ExpressionUUID->"4895a7ed-5d77-4b08-91fb-6aeba0f3b85b"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["2", "3"], ")"}], "n"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8784823050039363`*^9},
 CellLabel->
  "Out[357]=",ExpressionUUID->"41037b9a-45bb-4cfd-9c9c-2c2e1d5ec5bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"height", "[", "n", "]"}]}], ")"}]}], "==", "distance"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.8784823537881913`*^9, 3.8784823766078005`*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"d6251003-9f0f-4ce2-bf2b-2d354089ed61"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.878482372118819*^9, 3.878482376967166*^9}},
 CellLabel->
  "Out[360]=",ExpressionUUID->"53e4d927-32b9-468c-8c60-38e435c9f717"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distance", "=", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"height", "[", "#", "]"}]}], ")"}]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8784823883554277`*^9, 3.8784824018503513`*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"9d1e8b7b-f8db-45f3-be9f-a7c3e7b5f064"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"height", "[", "#1", "]"}]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{3.8784824025534773`*^9},
 CellLabel->
  "Out[361]=",ExpressionUUID->"999a3e85-6b0f-45e5-b051-2ec0a4183f37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distance", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.878482403365982*^9, 3.878482405817421*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"cfdde85a-4e82-4309-a17c-a953414a699e"],

Cell[BoxData[
 FractionBox["116050", "59049"]], "Output",
 CellChangeTimes->{3.878482406239256*^9},
 CellLabel->
  "Out[362]=",ExpressionUUID->"21976828-a22f-480c-acdf-251eeb65f4b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distance", "[", "11", "]"}]], "Input",
 CellChangeTimes->{{3.878482407922964*^9, 3.8784824096573315`*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"d116bfca-eafe-4517-aea2-047099b78fe5"],

Cell[BoxData[
 FractionBox["350198", "177147"]], "Output",
 CellChangeTimes->{3.878482410204204*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"f970fa1e-078e-4706-99b5-77754b2ed182"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distance", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8784824123448324`*^9, 3.8784824164229927`*^9}},
 CellLabel->
  "In[364]:=",ExpressionUUID->"0014de34-9d1d-4f4e-8efe-20621ed8d530"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", "3"], ",", 
   FractionBox["10", "9"], ",", 
   FractionBox["38", "27"], ",", 
   FractionBox["130", "81"], ",", 
   FractionBox["422", "243"], ",", 
   FractionBox["1330", "729"], ",", 
   FractionBox["4118", "2187"], ",", 
   FractionBox["12610", "6561"], ",", 
   FractionBox["38342", "19683"], ",", 
   FractionBox["116050", "59049"]}], "}"}]], "Output",
 CellChangeTimes->{3.8784824168448544`*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"85c063ae-ceeb-4c1e-bdc9-3c8ba7f434b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Differences", "[", 
  RowBox[{"distance", "[", 
   RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.878482418204204*^9, 3.878482419313582*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"10d2badf-05fd-42e1-aae5-9e5e0d2391eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["4", "9"], ",", 
   FractionBox["8", "27"], ",", 
   FractionBox["16", "81"], ",", 
   FractionBox["32", "243"], ",", 
   FractionBox["64", "729"], ",", 
   FractionBox["128", "2187"], ",", 
   FractionBox["256", "6561"], ",", 
   FractionBox["512", "19683"], ",", 
   FractionBox["1024", "59049"]}], "}"}]], "Output",
 CellChangeTimes->{3.8784824197354655`*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"864c626a-fd0f-4982-ab28-2b5e52451f51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totaldistance", "=", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{"2", 
     RowBox[{"distance", "[", "#", "]"}]}]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8784824283536453`*^9, 3.8784824379846272`*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"cf651a2c-f484-4879-bd6f-443c383fd6f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", 
   RowBox[{"2", " ", 
    RowBox[{"distance", "[", "#1", "]"}]}]}], "&"}]], "Output",
 CellChangeTimes->{3.8784824384533978`*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"17835d66-fcf3-4454-a71f-3974fe45632c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totaldistance", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.878482439412529*^9, 3.878482442294054*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"c91f55c6-0a0c-4737-a1a7-90136b2145d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["7", "3"], ",", 
   FractionBox["29", "9"], ",", 
   FractionBox["103", "27"], ",", 
   FractionBox["341", "81"], ",", 
   FractionBox["1087", "243"], ",", 
   FractionBox["3389", "729"], ",", 
   FractionBox["10423", "2187"], ",", 
   FractionBox["31781", "6561"], ",", 
   FractionBox["96367", "19683"], ",", 
   FractionBox["291149", "59049"]}], "}"}]], "Output",
 CellChangeTimes->{3.87848244266905*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"b66e0a74-ef47-4f2c-88b6-52d20cbcf4b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "\[Infinity]"], 
  RowBox[{"height", "[", "i", "]"}]}]], "Input",
 CellChangeTimes->{{3.8784824709572325`*^9, 3.878482484082548*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"0d9b6923-4789-4488-aafd-752dbb4c82a3"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.878482484711482*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"d009d033-ce1d-4605-b6bf-c243bcd376e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "\[Infinity]"], 
  RowBox[{"totaldistance", "[", "i", "]"}]}]], "Input",
 CellChangeTimes->{{3.8784824709572325`*^9, 3.8784825116896453`*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"e9d3b5ac-36de-4cf0-ab71-db9dc6725a2f"],

Cell[BoxData[
 TemplateBox[{
  "Sum", "div", "\"Sum does not converge.\"", 2, 371, 62, 
   16944803280185088864, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8784825020838175`*^9, 3.8784825122990217`*^9}},
 CellLabel->
  "During evaluation of \
In[371]:=",ExpressionUUID->"113309b5-c498-4849-b02a-0e13bd7fd064"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "\[Infinity]"], 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["2", "3"], ")"}], "i"]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.878482502302566*^9, 3.8784825124709*^9}},
 CellLabel->
  "Out[371]=",ExpressionUUID->"a55b0b9d-f558-4315-a5b8-8336f246085f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"height", "[", "10", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.878482559053842*^9, 3.8784825627494645`*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"12c0cae4-2456-481a-86a4-b37fed9a97aa"],

Cell[BoxData["0.017341529915832612`"], "Output",
 CellChangeTimes->{3.8784825630786448`*^9},
 CellLabel->
  "Out[372]=",ExpressionUUID->"9fe5257c-7888-4b16-a5a6-e3e1822bf29b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"], 
   RowBox[{"height", "[", "10", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8784825702781305`*^9, 3.8784825982569246`*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"b98f75cf-dce1-4fb9-ba52-4ca426181cf1"],

Cell[BoxData[
 TemplateBox[{"0.017341529915832612`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.8784825988506823`*^9, 3.878482601955063*^9}},
 CellLabel->
  "Out[374]=",ExpressionUUID->"b2243231-47a8-42bb-9b66-c340284aa59f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"height", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["2", "3"], ")"}], "#"], 
    TemplateBox[<|
     "query" -> "1m", "boxes" -> 
      TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""}, "Quantity", 
        SyntaxForm -> Mod], 
      "allassumptions" -> {{
        "type" -> "Clash", "word" -> "m", "template" -> 
         "Assuming \"m\" is a unit${separator}Use as ${desc} instead", 
         "count" -> "2", "pulldown" -> "false", "default" -> 
         "{\"C\", \"m\"} -> {\"Unit\", \"dflt\"}", 
         "Values" -> {{
           "name" -> "Unit", "desc" -> "a unit", "input" -> 
            "{\"C\", \"m\"} -> {\"Unit\"}"}, {
           "name" -> "Variable", "desc" -> "a variable", "input" -> 
            "{\"C\", \"m\"} -> {\"Variable\"}"}}}, {
        "type" -> "Unit", "word" -> "m", "template" -> 
         "Assuming meters for \"m\"${separator}Use ${desc} or ${desc} \
instead", "count" -> "3", "pulldown" -> "false", "default" -> 
         "\"UnitClash\" -> {\"m\", {\"Meters\", \"dflt\"}}", 
         "Values" -> {{
           "name" -> "Meters", "desc" -> "meters", "input" -> 
            "\"UnitClash\" -> {\"m\", {\"Meters\"}}"}, {
           "name" -> "Minims", "desc" -> "US minims of volume", "input" -> 
            "\"UnitClash\" -> {\"m\", {\"Minims\"}}"}, {
           "name" -> "Minutes", "desc" -> "minutes of time", "input" -> 
            "\"UnitClash\" -> {\"m\", {\"Minutes\"}}"}}}}, 
      "assumptions" -> {}, "open" -> {1, 2}, 
      "querystate" -> {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.6566243`7.268861944324005, "Messages" -> {}}, "contextinfo" -> 
      Automatic, "version" -> 5|>,
     "LinguisticAssistantTemplate"]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8784826085788136`*^9, 3.87848263343976*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"a59853e8-44c2-4258-a53c-c164b82656a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["2", "3"], ")"}], "#1"], " ", 
   RowBox[{"(", 
    TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
     "Quantity"], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{3.8784826340022383`*^9},
 CellLabel->
  "Out[375]=",ExpressionUUID->"46513996-f287-4c1f-930c-1e33cd226500"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"height", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.878482635017865*^9, 3.8784826366741505`*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"3dd8c070-4ed0-4265-bae3-75f586272883"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1024", "59049"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784826371116138`*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"03dd028a-6706-4340-bb59-d17a2a22e490"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "10"], 
  RowBox[{"height", "[", "i", "]"}]}]], "Input",
 CellChangeTimes->{{3.8784826412420397`*^9, 3.8784826719225073`*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"74a868a0-7903-4c9f-a2ff-75183ba5639e"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["116050", "59049"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784826723756313`*^9},
 CellLabel->
  "Out[377]=",ExpressionUUID->"380cbc3f-60e6-40ce-91a6-b26cc5096eac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "10"], 
   RowBox[{"height", "[", "i", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8784826412420397`*^9, 3.8784826772784586`*^9}},
 CellLabel->
  "In[378]:=",ExpressionUUID->"f40bbe98-785f-417f-8797-433684a2a42a"],

Cell[BoxData[
 TemplateBox[{"1.9653169401683348`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.878482677653433*^9},
 CellLabel->
  "Out[378]=",ExpressionUUID->"201b2b4c-8e66-4c03-981a-fa0599dd9816"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totaldistance", "=", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
     "Quantity"], "+", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "#"], 
       RowBox[{"height", "[", "i", "]"}]}], ")"}]}]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8784826412420397`*^9, 3.8784827574587708`*^9}},
 CellLabel->
  "In[385]:=",ExpressionUUID->"29b7bb45-7f34-44d4-8ffc-084a2c4cd72c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"], "+", 
   RowBox[{"2", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "#1"], 
     RowBox[{"height", "[", "i", "]"}]}]}]}], "&"}]], "Output",
 CellChangeTimes->{{3.878482687545348*^9, 3.878482724189226*^9}, 
   3.8784827581150208`*^9},
 CellLabel->
  "Out[385]=",ExpressionUUID->"371e5f54-7e23-4ad3-8f4e-1001a2b07ae7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totaldistance", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.8784827592712765`*^9, 3.878482760624882*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"fb890ced-e43f-412f-a41d-8d4a59e7615f"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["291149", "59049"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.87848276137179*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"6688e25e-4713-4d84-a8d1-31551f249731"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"totaldistance", "[", "10", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.878482727111002*^9, 3.8784827283705716`*^9}, {
  3.878482765440292*^9, 3.878482765893412*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"f283200e-5e4e-4d71-be99-c0f32290ca71"],

Cell[BoxData[
 TemplateBox[{"4.93063388033667`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784827288549447`*^9, 3.8784827662684574`*^9},
 CellLabel->
  "Out[387]=",ExpressionUUID->"328a0570-39f4-42ed-9c03-edff7108c178"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totaldistance", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.878482779121252*^9, 3.878482781132331*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"173a3c8b-5176-4760-9144-44f97a5f1434"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     FractionBox["7", "3"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["29", "9"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["103", "27"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["341", "81"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["1087", "243"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["3389", "729"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["10423", "2187"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["31781", "6561"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["96367", "19683"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["291149", "59049"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.878482781616663*^9},
 CellLabel->
  "Out[388]=",ExpressionUUID->"5b62f302-a8c2-45ef-bed3-35d6ead023fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Differences", "[", 
  RowBox[{"totaldistance", "[", 
   RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.878482783069228*^9, 3.8784827872624235`*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"56e57d7d-a104-4bf8-bd58-2213472b7d2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     FractionBox["8", "9"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["16", "27"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["32", "81"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["64", "243"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["128", "729"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["256", "2187"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["512", "6561"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["1024", "19683"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox["2048", "59049"], "\"m\"", "meters", "\"Meters\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8784827876999226`*^9},
 CellLabel->
  "Out[389]=",ExpressionUUID->"5b6c8e35-503a-4ec5-be40-b327996f21db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"totaldistance", "[", "10", "]"}], "-", 
  RowBox[{"totaldistance", "[", "9", "]"}]}]], "Input",
 CellChangeTimes->{{3.8784827980975904`*^9, 3.8784828020646386`*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"98cde43e-33fa-4244-9d0b-2e641c2204e4"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["2048", "59049"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784828025605154`*^9},
 CellLabel->
  "Out[390]=",ExpressionUUID->"a9607a16-6347-4c25-9392-6c016900ef54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", "2"}], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"totaldistance", "[", "10", "]"}], "-", 
    RowBox[{"totaldistance", "[", "9", "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8784832048443985`*^9, 3.8784832070006804`*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"74245a2b-e73d-44d6-8ccd-8b17f55603d0"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1024", "59049"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.878483207563156*^9},
 CellLabel->
  "Out[409]=",ExpressionUUID->"18150524-f92d-48e8-b2a8-de0769a63caa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distance", "=", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
       "Quantity"], "-", 
      RowBox[{"height", "[", "#", "]"}]}], ")"}]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.878483315489111*^9, 3.878483315989093*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"a7e60206-d6c0-4bd4-a3b8-5e41062e5679"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
      "Quantity"], "-", 
     RowBox[{"height", "[", "#1", "]"}]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{{3.878483318176664*^9, 3.878483323890169*^9}},
 CellLabel->
  "Out[416]=",ExpressionUUID->"33f4e23c-e93d-4a3c-a2d3-eaac85a65711"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"distance", "[", "10", "]"}], "-", 
  RowBox[{"distance", "[", "9", "]"}]}]], "Input",
 CellChangeTimes->{{3.8784832259764953`*^9, 3.87848322981371*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"65647aa2-e7d8-4360-bbd3-4bbf19d79c05"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1024", "59049"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.878483228226495*^9, 3.87848323018869*^9}, 
   3.87848331923909*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"c09cc516-37ec-49ef-aa0c-dad4bef67f27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"distance", "[", "10", "]"}], "-", 
   RowBox[{"distance", "[", "9", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8784832259764953`*^9, 3.87848322981371*^9}, {
  3.8784833300435476`*^9, 3.8784833311529226`*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"abb297a5-038a-4e3d-ac30-18e2814c10e1"],

Cell[BoxData[
 TemplateBox[{"0.017341529915832612`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784833314966407`*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"1c3a50eb-b169-47f8-a8df-191511560449"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "distance"}]], "Input",
 CellChangeTimes->{{3.878483263337981*^9, 3.8784832640567226`*^9}},
 CellLabel->
  "In[413]:=",ExpressionUUID->"f9ac7252-9966-41b3-b738-7927056d0c52"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`distance\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"distance", "=", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"height", "[", "#1", "]"}]}], ")"}]}], "&"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`distance\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`distance\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`distance", "Documentation" -> 
    None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`distance, {$CellContext`distance -> (
        2 (1 - $CellContext`height[#])& )}], "UpValues" -> None, "DownValues" -> 
    None, "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`distance"|>, False]]], "Output",
 CellChangeTimes->{3.8784832768681755`*^9},
 CellLabel->
  "Out[413]=",ExpressionUUID->"b45836cf-3c8d-4d95-8df0-86b01e54d056"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"totaldistance", "[", "10", "]"}], "-", 
   RowBox[{"totaldistance", "[", "9", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8784827980975904`*^9, 3.8784828047480116`*^9}},
 CellLabel->
  "In[391]:=",ExpressionUUID->"588d8f2e-2df0-4251-ae34-034f14e04591"],

Cell[BoxData[
 TemplateBox[{"0.034683059831665225`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784828051074233`*^9},
 CellLabel->
  "Out[391]=",ExpressionUUID->"28e75192-ef86-4957-9dac-9ac61114deb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totaldistance", "[", "\[Infinity]", "]"}]], "Input",
 CellChangeTimes->{{3.878482820388881*^9, 3.878482824773239*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"e2be36a2-7966-45cb-af15-36136da2fd44"],

Cell[BoxData[
 TemplateBox[{"5", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.87848282511703*^9},
 CellLabel->
  "Out[392]=",ExpressionUUID->"2ea4690a-6143-4cb2-972d-2a5aa3f09355"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"totaldistance", "[", "11", "]"}], "-", 
  RowBox[{"totaldistance", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.878482841951031*^9, 3.878482845608968*^9}},
 CellLabel->
  "In[393]:=",ExpressionUUID->"43b7520b-4667-4b80-90fc-5a34a1ea3710"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["4096", "177147"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784828460308523`*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"ec14ea8c-195f-48ae-9563-ab1620c0344c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"totaldistance", "[", "11", "]"}], "-", 
   RowBox[{"totaldistance", "[", "10", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.878482841951031*^9, 3.878482845608968*^9}, {
  3.8784828941150837`*^9, 3.878482896099492*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"9b1fd1e7-c136-4407-aa46-ab0daf7f6b8a"],

Cell[BoxData[
 TemplateBox[{"0.023122039887776818`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.878482896490143*^9},
 CellLabel->
  "Out[394]=",ExpressionUUID->"50a478fc-b824-482b-9e7f-3b7862f8eda2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distanceballtravels", "=", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"height", "[", "#", "]"}]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.878482910098693*^9, 3.878482922424848*^9}},
 CellLabel->
  "In[395]:=",ExpressionUUID->"6cee6e20-70b1-4f3b-a446-b75fd04affad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"height", "[", "#1", "]"}]}], "&"}]], "Output",
 CellChangeTimes->{3.878482922956089*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"ee0d9f6c-1ba3-461c-8ac2-59ddf4b55ede"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"distanceballtravels", "[", "10", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8784829240616646`*^9, 3.8784829365301304`*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"b1dfe041-0e05-428a-909c-11f21c67c304"],

Cell[BoxData[
 TemplateBox[{"0.034683059831665225`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.8784829315663357`*^9, 3.8784829368641243`*^9}},
 CellLabel->
  "Out[397]=",ExpressionUUID->"1f2de418-69a6-4f26-a610-9aec17445320"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "totaldistance"}]], "Input",
 CellChangeTimes->{{3.878482959110817*^9, 3.8784829600044756`*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"6217e964-1cdc-40c7-bf89-bd34e6bd63f6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`totaldistance\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"totaldistance", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"Meters\""}], "]"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"i", "=", "1"}], "#1"], 
                    RowBox[{"height", "[", "i", "]"}]}]}]}], "&"}]}]}, {" "}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`totaldistance\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`totaldistance\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`totaldistance", 
    "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`totaldistance, {$CellContext`totaldistance -> (
        Quantity[1, "Meters"] + 2 Sum[
           $CellContext`height[$CellContext`i], {$CellContext`i, 1, #}]& )}], 
    "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`totaldistance"|>, False]]], "Output",
 CellChangeTimes->{3.8784829607617683`*^9},
 CellLabel->
  "Out[399]=",ExpressionUUID->"ebac9815-4c31-40bb-b3f4-b458040d8cee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totaldistance", "[", "9", "]"}]], "Input",
 CellChangeTimes->{{3.8784829698070316`*^9, 3.878482971548026*^9}},
 CellLabel->
  "In[400]:=",ExpressionUUID->"93caee4f-b239-44d5-8600-8205cc339fcc"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["96367", "19683"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784829721112547`*^9},
 CellLabel->
  "Out[400]=",ExpressionUUID->"db07293f-9df3-4bba-919b-e2d0df6e9916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"totaldistance", "[", "9", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8784829698070316`*^9, 3.878482974158085*^9}},
 CellLabel->
  "In[401]:=",ExpressionUUID->"024a11e7-a29d-4285-a024-e66ca43f181d"],

Cell[BoxData[
 TemplateBox[{"4.895950820505004`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784829745955887`*^9},
 CellLabel->
  "Out[401]=",ExpressionUUID->"6c0f640c-6f0f-4dd1-be25-c0c240f1fc96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"totaldistance", "[", "10", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8784829698070316`*^9, 3.8784829797362747`*^9}},
 CellLabel->
  "In[402]:=",ExpressionUUID->"4d66d9f3-e669-4786-affb-afe60968622b"],

Cell[BoxData[
 TemplateBox[{"4.93063388033667`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.878482980126904*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"db42c8d0-3aae-4e81-983f-4dd415877be2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["2", "3"], ")"}], "i"]}], "-", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"n", "-", "1"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["2", "3"], ")"}], "i"]}]}]], "Input",
 CellChangeTimes->{{3.8784829960785255`*^9, 3.8784830202162514`*^9}},
 CellLabel->
  "In[403]:=",ExpressionUUID->"68b87d94-8cef-48d4-9bcb-aece13a7edf6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], "+", 
  RowBox[{
   SuperscriptBox["2", "n"], " ", 
   SuperscriptBox["3", 
    RowBox[{"1", "-", "n"}]]}], "+", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"1", "+", "n"}]], " ", 
   SuperscriptBox["3", 
    RowBox[{"-", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["3", "2"], ")"}], "n"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.878483020747504*^9},
 CellLabel->
  "Out[403]=",ExpressionUUID->"e04b0cad-6587-4db5-a4bd-c9dff0118ee3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", "2"}], "+", 
   RowBox[{
    SuperscriptBox["2", "n"], " ", 
    SuperscriptBox["3", 
     RowBox[{"1", "-", "n"}]]}], "+", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"1", "+", "n"}]], " ", 
    SuperscriptBox["3", 
     RowBox[{"-", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["3", "2"], ")"}], "n"]}], ")"}]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[404]:=",ExpressionUUID->"61a30155-30b1-40da-8533-eb169bfa408a"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox["3", "2"], ")"}], 
  RowBox[{"-", "n"}]]], "Output",
 CellChangeTimes->{3.8784830248321657`*^9},
 CellLabel->
  "Out[404]=",ExpressionUUID->"b87cc954-7ef7-4cda-8596-dd8e40e0ac55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{
     SuperscriptBox["2", "n"], " ", 
     SuperscriptBox["3", 
      RowBox[{"1", "-", "n"}]]}], "+", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"1", "+", "n"}]], " ", 
     SuperscriptBox["3", 
      RowBox[{"-", "n"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["3", "2"], ")"}], "n"]}], ")"}]}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"n", "->", "10"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8784830298162546`*^9, 3.8784830336427593`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[405]:=",ExpressionUUID->"23604121-b214-4aa1-b9dd-014a591a9b87"],

Cell[BoxData[
 FractionBox["1024", "59049"]], "Output",
 CellChangeTimes->{3.87848303406464*^9},
 CellLabel->
  "Out[405]=",ExpressionUUID->"1c0c1ce7-82ed-400f-afce-6abf4ae981de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{
      SuperscriptBox["2", "n"], " ", 
      SuperscriptBox["3", 
       RowBox[{"1", "-", "n"}]]}], "+", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"1", "+", "n"}]], " ", 
      SuperscriptBox["3", 
       RowBox[{"-", "n"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["3", "2"], ")"}], "n"]}], ")"}]}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"n", "->", "10"}], "}"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8784830298162546`*^9, 3.878483037549009*^9}},
 NumberMarks->False,
 CellLabel->
  "In[406]:=",ExpressionUUID->"6957999e-1d47-47ee-8a88-49144b25553a"],

Cell[BoxData["0.017341529915832612`"], "Output",
 CellChangeTimes->{3.8784830379396367`*^9},
 CellLabel->
  "Out[406]=",ExpressionUUID->"6dcac0b5-f92f-40e8-9ade-0be4eb9b97f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distancebetweensuccessivebounces", "=", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"height", "[", "#", "]"}]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.878483107444406*^9, 3.8784831213239775`*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"81c40acc-03e8-4a0c-821a-bc12f5325065"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"height", "[", "#1", "]"}]}], "&"}]], "Output",
 CellChangeTimes->{3.8784831221833353`*^9},
 CellLabel->
  "Out[407]=",ExpressionUUID->"2e9da825-d177-42da-b0e1-3e69fcfe5afc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distancebetweensuccessivebounces", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.878483123339579*^9, 3.8784831268494616`*^9}},
 CellLabel->
  "In[408]:=",ExpressionUUID->"0437bf6d-37f8-44b4-b66a-83448787e030"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["2048", "59049"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.87848312730249*^9},
 CellLabel->
  "Out[408]=",ExpressionUUID->"291e6624-e903-4c50-a28d-cae40a2e597e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"height", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["2", "3"], ")"}], "#"], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"m\"", "meters", 
      "\"Meters\""},
     "Quantity"]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8784833397167397`*^9, 3.878483357460685*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"9e67c17f-2a67-43d2-a963-110ccdec27a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["2", "3"], ")"}], "#1"], " ", 
   RowBox[{"(", 
    TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
     "Quantity"], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{3.878483357929308*^9},
 CellLabel->
  "Out[418]=",ExpressionUUID->"42b3afbd-cc2c-4ff0-a1e7-50d3b891f9c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distance", "=", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
       "Quantity"], "-", 
      RowBox[{"height", "[", "#", "]"}]}], ")"}]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8784833599449444`*^9, 3.878483366524102*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"a9313353-596b-4833-a8cc-6e4c5dbaf647"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
      "Quantity"], "-", 
     RowBox[{"height", "[", "#1", "]"}]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{3.8784833709061236`*^9},
 CellLabel->
  "Out[419]=",ExpressionUUID->"2664fa8e-eabc-4b17-a528-b5edd4ff9d67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totaldistance", "=", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
     "Quantity"], "+", 
    RowBox[{"distance", "[", "#", "]"}]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8784833728463526`*^9, 3.8784833841869555`*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"4d375327-2d0d-43a9-81cb-a3c163c0aecb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"], "+", 
   RowBox[{"distance", "[", "#1", "]"}]}], "&"}]], "Output",
 CellChangeTimes->{{3.878483379080702*^9, 3.8784833847650557`*^9}},
 CellLabel->
  "Out[421]=",ExpressionUUID->"7823ca77-13ee-4a81-a883-754513ef05e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"height", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.8784833874554057`*^9, 3.878483388705429*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"d251a469-cddf-455c-9d02-bb9fa9043562"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1024", "59049"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.878483389567685*^9},
 CellLabel->
  "Out[422]=",ExpressionUUID->"4dda73f6-3ffa-4af0-a523-e2c7f74f94e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distance", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.87848339170123*^9, 3.878483393084686*^9}},
 CellLabel->
  "In[423]:=",ExpressionUUID->"9f8b8a27-fb2b-4ce4-8855-31069827d4b5"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["116050", "59049"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784833937251225`*^9},
 CellLabel->
  "Out[423]=",ExpressionUUID->"2a6deb36-0ec5-4985-8422-533c8126b463"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"distance", "[", "10", "]"}], "-", 
  RowBox[{"distance", "[", "9", "]"}]}]], "Input",
 CellChangeTimes->{{3.87848339170123*^9, 3.878483404648991*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"891be9cb-e861-47d6-912f-9ca9a0b2159c"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1024", "59049"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8784834050396395`*^9},
 CellLabel->
  "Out[424]=",ExpressionUUID->"da23c7f4-1347-4df5-849e-fba98d82858b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Use equation 1.8 to find the fractions that are equivalent to the following \
repeating decimals\
\>", "Section",
 CellChangeTimes->{{3.8784831810783124`*^9, 
  3.878483193861946*^9}},ExpressionUUID->"6b0472d7-00a3-4dfd-b39b-\
cd9d6dc727b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", "0.555", "]"}]], "Input",
 CellChangeTimes->{{3.8784831762658863`*^9, 3.8784831778909187`*^9}, {
  3.8784834377110643`*^9, 3.878483438679809*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"10ccfbbe-b94e-45b1-8bcf-90f239bba103"],

Cell[BoxData[
 FractionBox["111", "200"]], "Output",
 CellChangeTimes->{3.8784834391485186`*^9},
 CellLabel->
  "Out[426]=",ExpressionUUID->"24ef061b-c1ac-4114-b961-cadca6c56847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"11", "/", "20"}]], "Input",
 CellChangeTimes->{{3.8784834446853123`*^9, 3.878483445747898*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"98b8eaa9-7060-468c-ae58-1cc402a9a24f"],

Cell[BoxData[
 FractionBox["11", "20"]], "Output",
 CellChangeTimes->{3.8784834462946444`*^9},
 CellLabel->
  "Out[427]=",ExpressionUUID->"72e673a6-6b1b-4340-9e00-aa28dfd6a054"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"11", "/", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.878483447997757*^9, 3.878483448904112*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"bcaba53a-ed1f-4a0d-9724-40fc6b02e6af"],

Cell[BoxData["0.55`"], "Output",
 CellChangeTimes->{3.878483449310296*^9},
 CellLabel->
  "Out[428]=",ExpressionUUID->"bfe97dcb-2be1-4efe-938a-d31b8fc028de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["0.555555555555555555555555", "WolframAlphaLong",
 CellChangeTimes->{{3.8784834720027323`*^9, 3.878483474788495*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"c24877e8-4a84-4e67-aa89-ca6abcbdbbeb"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "0.555555555555555555555555", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"PossibleClosedForm__More"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"0.555555555555555555555555"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
            "0.555555555555555555555555`24.744627494896694", 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"NumberLinePlot[0.555555555555555555555555]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{0.5555555555555556, 0.010000000000000002`}]}, 
                  "0.5555555555555556`"], 
                 Annotation[#, 0.5555555555555556, "Tooltip"]& ]}, ImageSize -> 
               330., Axes -> {True, False}, 
               PlotRange -> {{0.3888888888888889, 0.7222222222222223}, 
                 Automatic}, AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Roboto", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Rational form", "scanner" -> "Numeric", "id" -> 
     "RationalApproximation", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Rationalize[0.555555555555555555555555]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox[
             "111111111111111111111111", "200000000000000000000000"], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Number name", "scanner" -> "Numeric", "id" -> 
     "NumberName", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"zero point five five five five five five five five five five \
five five five five six\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Continued fraction", "scanner" -> "ContinuedFraction", 
     "id" -> "ContinuedFraction", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"ContinuedFraction[0.555555555555555555555555, 10]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                
                TemplateBox[{"\"[\"", "\"0; 1, 1, 4\"", "\"]\""}, 
                 "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
               DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {"Columns" -> {{
                   Scaled[1.003]}}}], "Column"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Fraction form", "input" -> 
         "ContinuedFraction__Fraction form"}, {}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Possible closed forms", "scanner" -> "Recognize", "id" -> 
     "PossibleClosedForm", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "5"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox["5", "9"], "\[TildeTilde]", 
              TemplateBox[{"\"0.555555555555555555555555\"", 
                StyleBox["\"55555\"", 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox[
               RowBox[{"50", " ", 
                 TagBox[
                  SubscriptBox["\[ScriptCapitalW]", "\"Wad\""], 
                  $CellContext`TagBoxWrapper[
                  "SRString" -> "the Wadsworth constant"], SyntaxForm -> 
                  Subscript]}], "27"], "\[TildeTilde]", 
              TemplateBox[{"\"0.555555555555555555555555\"", 
                StyleBox["\"55555\"", 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{
                FractionBox[
                 RowBox[{"5000000", " ", 
                   TagBox[
                    SubscriptBox["\[ScriptCapitalL]", "\"Li\""], 
                    $CellContext`TagBoxWrapper[
                    "SRString" -> "Liouville's constant"], SyntaxForm -> 
                    Subscript]}], "990009"], "\[TildeTilde]", 
                TemplateBox[{"\"0.5555555555555555555555\"", 
                  StyleBox["\"60606\"", 
                   GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}]}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{
                FractionBox[
                 RadicalBox[
                  FractionBox["1304470", "245359"], "3"], "\[Pi]"], 
                "\[TildeTilde]", 
                TemplateBox[{"\"0.5555555555555\"", 
                  StyleBox["\"14574\"", 
                   GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}]}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{
                FractionBox[
                 RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["4617355", "16020173"], ")"}], 
                    RowBox[{"2", "/", "3"}]]}], "\[Pi]"], "\[TildeTilde]", 
                TemplateBox[{"\"0.555555555555555\"", 
                  StyleBox["\"49989\"", 
                   GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}]}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}], 
       XMLElement["infos", {"count" -> "2"}, {
         XMLElement[
         "info", {"text" -> "W_Wad is the Wadsworth constant"}, {}], 
         XMLElement[
         "info", {"text" -> "\[ScriptCapitalL]_Li is Liouville's constant"}, {
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/LiouvillesConstant.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
     XMLElement["expressiontypes", {"count" -> "5"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Less", "input" -> "PossibleClosedForm__Less"}, {}]}]}], 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`pod36$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False, False, False, False, False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "6", "datatypes" -> "Real", "timedout" -> "Recognize", 
     "timedoutpods" -> "", "timing" -> "1.962", "parsetiming" -> "0.05", 
     "parsetimedout" -> "false", "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa126716f8359471ge19e4000016di33b64dd1e3198458888475783217078", "id" -> 
     "MSP126816f8359471ge19e4000039g81f3ea945c3ge", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "20", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa126916f8359471ge19e400003h0beb0ci8989fhi8458888475783217078", "version" -> 
     "2.6", "inputstring" -> "0.555555555555555555555555"}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "1", "datatypes" -> "Real", "timedout" -> "", 
     "timedoutpods" -> "", "timing" -> "2.364", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "parseidserver" -> "13", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "13", "related" -> "", 
     "version" -> "2.6", "inputstring" -> "0.555555555555555555555555"}}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 26, 15, 31, 18.9036757`9.02912119825979}, "Line" -> 
    429, "SessionID" -> 16944803280185088864}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
   36}, Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "0.555555555555555555555555"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
         Typeset`pod36$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1081., {305.3544921875, 310.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
          Typeset`pod36$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa126716f8359471ge19e4000016di33b64dd1e3198458888475783217078", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.878483479059937*^9},ExpressionUUID->"9bb1de29-a5d1-4e8b-b977-\
d6f6ff59b1db"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 5", "Section",
 CellChangeTimes->{{3.878483519458511*^9, 
  3.8784835207085156`*^9}},ExpressionUUID->"b3e0f40a-83cc-4776-b9de-\
2136f17c59de"],

Cell[CellGroupData[{

Cell["0.58333", "WolframAlphaLong",
 CellChangeTimes->{{3.8784835131678*^9, 3.878483515418908*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"3f81514d-d900-443b-8b24-122f880e9f9b"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "0.58333", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"0.58333"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
            "0.58333`", PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Numeric", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[58333/100000]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"0.58333\"", LineIndent -> 0.54, StripOnInput -> False]}},
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], FrameMargins -> {{0, 10}, {0, 0}}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[0.58333]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{0.58333, 0.010499940000000001`}]}, "0.58333`"], 
                 Annotation[#, 0.58333, "Tooltip"]& ]}, ImageSize -> 330., 
               Axes -> {True, False}, 
               PlotRange -> {{0.408331, 0.758329}, Automatic}, 
               AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Roboto", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Rational form", "scanner" -> "Numeric", "id" -> 
     "RationalApproximation", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Rationalize[0.58333]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["58333", "100000"], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Number name", "scanner" -> "Numeric", "id" -> 
     "NumberName", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"zero point five eight three three three\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Continued fraction", "scanner" -> "ContinuedFraction", 
     "id" -> "ContinuedFraction", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ContinuedFraction[0.58333, 10]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                
                TemplateBox[{
                 "\"[\"", "\"0; 1, 1, 2, 1, 1, 2082, 1, 3\"", "\"]\""}, 
                 "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
               DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {"Columns" -> {{
                   Scaled[1.003]}}}], "Column"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Fraction form", "input" -> 
         "ContinuedFraction__Fraction form"}, {}]}]}], Typeset`pod7$$ = 
   XMLElement[
   "pod", {"title" -> "Possible closed forms", "scanner" -> "Recognize", "id" -> 
     "PossibleClosedForm", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{
                FractionBox["7", "12"], "\[TildeTilde]", 
                TemplateBox[{"\"0.58333\"", 
                  StyleBox["\"33333\"", 
                   GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}]}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{
                FractionBox[
                 RowBox[{"70", " ", "\[Pi]"}], "377"], "\[TildeTilde]", 
                TemplateBox[{"\"0.5833\"", 
                  StyleBox["\"19590\"", 
                   GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}]}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{
                RowBox[{
                  RowBox[{"2", " ", 
                    TagBox[
                    SubscriptBox["\[ScriptCapitalD]", "d"], 
                    $CellContext`TagBoxWrapper[
                    "SRString" -> "the dimer constant"], SyntaxForm -> 
                    Subscript]}], "-", 
                  RowBox[{"3"}]}], "\[TildeTilde]", 
                TemplateBox[{"\"0.583\"", 
                  StyleBox["\"24562\"", 
                   GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}]}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "PossibleClosedForm__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "D_d is the dimer constant"}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/DominoTiling.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod8$$, 
   Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
   Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
   Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
   Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
   Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
   Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
   Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
   Typeset`pod37$$, Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False, False, False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "7", "datatypes" -> "Number", "timedout" -> "Recognize", 
     "timedoutpods" -> "", "timing" -> "1.596", "parsetiming" -> "0.05", 
     "parsetimedout" -> "false", "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa234120405cf89e9fgd6i000016dh8ai01gg8fc43724077331436509559", "id" -> 
     "MSP234220405cf89e9fgd6i000011967a82hi3i59h2", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "2", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa234320405cf89e9fgd6i000064e1icab93c67eg4724077331436509559", "version" -> 
     "2.6", "inputstring" -> "0.58333"}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "0", "datatypes" -> "Number", "timedout" -> "Recognize", 
     "timedoutpods" -> "", "timing" -> "1.364", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "parseidserver" -> "13", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "13", "related" -> "", 
     "version" -> "2.6", "inputstring" -> "0.58333"}}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 26, 15, 31, 58.3697186`9.518762430547827}, "Line" -> 
    430, "SessionID" -> 16944803280185088864}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7}, Typeset`failedpods$$ = {8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
    37}, Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "0.58333"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1081., {282.3544921875, 287.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa234120405cf89e9fgd6i000016dh8ai01gg8fc43724077331436509559", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.8784835186002607`*^9},ExpressionUUID->"882a795b-70d3-4080-99ec-\
e18f9d678da8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.9", "Section",
 CellChangeTimes->{{3.878483539302696*^9, 
  3.878483539802617*^9}},ExpressionUUID->"d1b0188e-2312-4774-8ea5-\
c987ae0d996b"],

Cell[CellGroupData[{

Cell["0.857142857142", "WolframAlphaLong",
 CellChangeTimes->{{3.87848354116199*^9, 3.8784835518562217`*^9}},
 CellLabel->
  "In[431]:=",ExpressionUUID->"487c0c1c-9931-4f84-b2e1-17417faabe31"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "0.857142857142", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"0.857142857142"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
            "0.857142857142`12.932953210368952", 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[0.857142857142]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{0.857142857142, 0.015428571428556005`}]}, 
                  "0.857142857142`"], 
                 Annotation[#, 0.857142857142, "Tooltip"]& ]}, ImageSize -> 
               330., Axes -> {True, False}, 
               PlotRange -> {{0.5999999999993999, 1.1142857142846}, 
                 Automatic}, AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Roboto", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Rational form", "scanner" -> "Numeric", "id" -> 
     "RationalApproximation", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Rationalize[0.857142857142]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["428571428571", "500000000000"], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Number name", "scanner" -> "Numeric", "id" -> 
     "NumberName", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"zero point eight five seven one four two eight five seven one \
four two\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Continued fraction", "scanner" -> "ContinuedFraction", 
     "id" -> "ContinuedFraction", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ContinuedFraction[0.857142857142, 10]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                
                TemplateBox[{"\"[\"", "\"0; 1, 6\"", "\"]\""}, 
                 "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
               DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {"Columns" -> {{
                   Scaled[1.003]}}}], "Column"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Fraction form", "input" -> 
         "ContinuedFraction__Fraction form"}, {}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Possible closed forms", "scanner" -> "Recognize", "id" -> 
     "PossibleClosedForm", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox["6", "7"], "\[TildeTilde]", 
              TemplateBox[{"\"0.857142857142\"", 
                StyleBox["\"85714\"", 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox[
               RowBox[{"20", " ", 
                 TagBox[
                  SubscriptBox["\[ScriptCapitalW]", "\"Wad\""], 
                  $CellContext`TagBoxWrapper[
                  "SRString" -> "the Wadsworth constant"], SyntaxForm -> 
                  Subscript]}], "7"], "\[TildeTilde]", 
              TemplateBox[{"\"0.857142857142\"", 
                StyleBox["\"85714\"", 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", " ", 
                   TagBox[
                    SubscriptBox["\[ScriptCapitalW]", "\"Wad\""], 
                    $CellContext`TagBoxWrapper[
                    "SRString" -> "the Wadsworth constant"], SyntaxForm -> 
                    Subscript]}], 
                 RowBox[{
                   TagBox[
                    SubscriptBox["\[ScriptCapitalW]", "\"Wad\""], 
                    $CellContext`TagBoxWrapper[
                    "SRString" -> "the Wadsworth constant"], SyntaxForm -> 
                    Subscript], "-", 
                   RowBox[{"1"}]}]]}], "\[TildeTilde]", 
              TemplateBox[{"\"0.857142857142\"", 
                StyleBox["\"85714\"", 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "PossibleClosedForm__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "W_Wad is the Wadsworth constant"}, {}]}]}], 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`pod36$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False, False, False}, True}, 
   Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "6", "datatypes" -> "Real", "timedout" -> "Recognize", 
     "timedoutpods" -> "", "timing" -> "2.045", "parsetiming" -> "0.063", 
     "parsetimedout" -> "false", "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa181319d267h0gha1c4ag000011ag63g9dbd68a8b1697175660060143921", "id" -> 
     "MSP181419d267h0gha1c4ag0000421ccb469fg99cd0", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "18", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa181519d267h0gha1c4ag000012h0dah739b6h12e1697175660060143921", "version" -> 
     "2.6", "inputstring" -> "0.857142857142"}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "0", "datatypes" -> "Real", "timedout" -> "", 
     "timedoutpods" -> "", "timing" -> "1.911", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "parseidserver" -> "13", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "13", "related" -> "", 
     "version" -> "2.6", "inputstring" -> "0.857142857142"}}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 26, 15, 32, 34.8562109`9.294855071089454}, "Line" -> 
    431, "SessionID" -> 16944803280185088864}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
   36}, Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "0.857142857142"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
         Typeset`pod36$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1081., {262.3544921875, 267.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
          Typeset`pod36$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa181319d267h0gha1c4ag000011ag63g9dbd68a8b1697175660060143921", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.878483554996843*^9},ExpressionUUID->"629cb5a2-69e7-4066-b142-\
9ff835d8210b"]
}, Open  ]],

Cell["The answer is 6/7.", "Text",
 CellChangeTimes->{{3.8784835760686865`*^9, 
  3.8784835794414964`*^9}},ExpressionUUID->"d93a8483-ae69-4902-a5fe-\
92d5da02432a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.11", "Section",
 CellChangeTimes->{{3.878483594178743*^9, 
  3.87848359474115*^9}},ExpressionUUID->"24dca6e9-0889-464a-8016-\
240f502015e4"],

Cell[CellGroupData[{

Cell["0.678571428571428571", "WolframAlphaLong",
 CellChangeTimes->{{3.878483600123017*^9, 3.8784836331686497`*^9}},
 CellLabel->
  "In[433]:=",ExpressionUUID->"a1926034-4dd4-42be-b5fc-916d038def54"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "0.678571428571428571", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"0.678571428571428571"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
            "0.678571428571428571`18.83149556961061", 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[0.678571428571428571]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{0.6785714285714286, 0.012214285714285717`}]}, 
                  "0.6785714285714286`"], 
                 Annotation[#, 0.6785714285714286, "Tooltip"]& ]}, ImageSize -> 
               330., Axes -> {True, False}, 
               PlotRange -> {{0.475, 0.8821428571428572}, Automatic}, 
               AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Roboto", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Rational form", "scanner" -> "Numeric", "id" -> 
     "RationalApproximation", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Rationalize[0.678571428571428571]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["678571428571428571", "1000000000000000000"], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Number name", "scanner" -> "Numeric", "id" -> 
     "NumberName", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"zero point six seven eight five seven one four two eight five \
seven one four two nine\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Continued fraction", "scanner" -> "ContinuedFraction", 
     "id" -> "ContinuedFraction", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"ContinuedFraction[0.678571428571428571, 10]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                
                TemplateBox[{"\"[\"", "\"0; 1, 2, 9\"", "\"]\""}, 
                 "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
               DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {"Columns" -> {{
                   Scaled[1.003]}}}], "Column"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Fraction form", "input" -> 
         "ContinuedFraction__Fraction form"}, {}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Possible closed forms", "scanner" -> "Recognize", "id" -> 
     "PossibleClosedForm", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox["19", "28"], "\[TildeTilde]", 
              TemplateBox[{"\"0.678571428571428571\"", 
                StyleBox["\"42857\"", 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox[
               RowBox[{"95", " ", 
                 TagBox[
                  SubscriptBox["\[ScriptCapitalW]", "\"Wad\""], 
                  $CellContext`TagBoxWrapper[
                  "SRString" -> "the Wadsworth constant"], SyntaxForm -> 
                  Subscript]}], "42"], "\[TildeTilde]", 
              TemplateBox[{"\"0.678571428571428571\"", 
                StyleBox["\"42857\"", 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox[
               RowBox[{
                 RowBox[{"3", " ", 
                   TagBox[
                    SubscriptBox["\[ScriptCapitalW]", "\"Wad\""], 
                    $CellContext`TagBoxWrapper[
                    "SRString" -> "the Wadsworth constant"], SyntaxForm -> 
                    Subscript]}], "+", "1"}], 
               RowBox[{
                 RowBox[{"6", " ", 
                   TagBox[
                    SubscriptBox["\[ScriptCapitalW]", "\"Wad\""], 
                    $CellContext`TagBoxWrapper[
                    "SRString" -> "the Wadsworth constant"], SyntaxForm -> 
                    Subscript]}], "+", "1"}]], "\[TildeTilde]", 
              TemplateBox[{"\"0.678571428571428571\"", 
                StyleBox["\"42857\"", 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "PossibleClosedForm__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "W_Wad is the Wadsworth constant"}, {}]}]}], 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`pod36$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False, False, False}, True}, 
   Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "6", "datatypes" -> "Real", "timedout" -> "Recognize", 
     "timedoutpods" -> "", "timing" -> "1.973", "parsetiming" -> "0.039", 
     "parsetimedout" -> "false", "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa295712970ac98201ea3c00002hcd138dce9hg24e6235443652248981561", "id" -> 
     "MSP295812970ac98201ea3c0000388ad5hhe3175bhf", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "5", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa295912970ac98201ea3c0000589ic538477h85ce6235443652248981561", "version" -> 
     "2.6", "inputstring" -> "0.678571428571428571"}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "1", "datatypes" -> "Real", "timedout" -> "", 
     "timedoutpods" -> "", "timing" -> "2.255", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "parseidserver" -> "4", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "4", "related" -> "", 
     "version" -> "2.6", "inputstring" -> "0.678571428571428571"}}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 26, 15, 33, 56.2208428`9.502472188195696}, "Line" -> 
    433, "SessionID" -> 16944803280185088864}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
   36}, Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "0.678571428571428571"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
         Typeset`pod36$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{503., {272.3544921875, 277.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
          Typeset`pod36$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa295712970ac98201ea3c00002hcd138dce9hg24e6235443652248981561", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.878483636361471*^9},ExpressionUUID->"d461a8cb-da0b-4f62-8d73-\
932dbeee4b10"]
}, Open  ]],

Cell["I think the answer is 19/28.", "Text",
 CellChangeTimes->{{3.8784836414524775`*^9, 
  3.878483646723346*^9}},ExpressionUUID->"f077bf3d-bf20-42f9-8001-\
e6a5244dc0ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.15", "Section",
 CellChangeTimes->{{3.8784836593902407`*^9, 
  3.8784836692987833`*^9}},ExpressionUUID->"55bb19e5-7a89-4583-8a51-\
715ea078be26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"SierpinskiMesh", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.878483679263692*^9, 3.8784836802108364`*^9}, {
  3.8784837393346815`*^9, 3.8784837465394893`*^9}},
 CellLabel->
  "In[434]:=",ExpressionUUID->"ef37392f-cbdd-44fa-ab53-d33d811b4e4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[
       GraphicsComplexBox[{{0., 0.}, {0.5, 0.}, {0.25, 0.4330127018922193}, {
        1., 0.}, {0.75, 0.4330127018922193}, {0.5, 0.8660254037844386}}, 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[{{1, 2, 3}, {5, 2, 4}, {6, 3, 5}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[
       GraphicsComplexBox[{{0., 0.}, {0.25, 0.}, {0.125, 
        0.21650635094610965`}, {0.5, 0.}, {0.375, 0.21650635094610965`}, {
        0.25, 0.4330127018922193}, {1., 0.}, {0.75, 0.}, {0.875, 
        0.21650635094610965`}, {0.625, 0.21650635094610965`}, {0.75, 
        0.4330127018922193}, {0.5, 0.8660254037844386}, {0.375, 
        0.649519052838329}, {0.625, 0.649519052838329}, {0.5, 
        0.4330127018922193}}, 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          PolygonBox[{{1, 2, 3}, {5, 2, 4}, {6, 3, 5}, {9, 8, 7}, {4, 8, 
           10}, {10, 9, 11}, {12, 13, 14}, {15, 13, 6}, {11, 14, 15}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQjR0csEflb7Bf5RPxomrbbqj4BTT5E2jyB6D801D+
AzT1N9D4d9D0X0Hj30Az7wKUf9seZn+DpZPenRNX4PpR+RfQ9H9As/8NGv8d
mv0v0ORfocm/QTP/CZr6R2jqn6Hxn6Dpf4Hmv1do/nmGxn+BEd4Q/mt7WPiK
Ovt2r7aH+eMRGv8G1LwncP2o/Cdo/Cv2r/TNL/IEPUSLn9tw+1DlH6DJP0OT
f4Im/wguDwAEpLg3
        "], 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          PolygonBox[{{1, 2, 3}, {5, 2, 4}, {6, 3, 5}, {9, 8, 7}, {4, 8, 
           10}, {10, 9, 11}, {12, 13, 14}, {15, 13, 6}, {11, 14, 15}, {18, 17,
            16}, {19, 17, 20}, {20, 18, 21}, {7, 22, 23}, {24, 22, 19}, {25, 
           23, 24}, {28, 27, 26}, {21, 27, 29}, {29, 28, 25}, {30, 31, 32}, {
           34, 31, 33}, {35, 32, 34}, {37, 36, 12}, {33, 36, 38}, {38, 37, 
           39}, {26, 40, 41}, {42, 40, 35}, {39, 41, 42}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplexBox[CompressedData["
1:eJxtkz1Lw1AUQIuzTuIP8Aeoo3R6YHEpunQQZ8XZxUkHHdz8E8526aAiKNKh
0EId2hBCSEOb5jvph+4uKn158E4tlHJ67kfufS+bJ+e1s5VSqXT1+/37/f/T
EDrfi4eD4/TyuS7/b8K/wDckv0ruIb4D/kB+C9xBvabkrij635T3tt1OS+Xr
3ES+h/4ueIj+NrwD76K+iXgD8RbYRL6N+RzMY4HtpX0veCCK/W5UDu/qopjD
AHdkPVPl62yCWyLf2e2v1vo4n67qp/sevAVvwhvwX9jnHPyJfU7hZ/Bz7CtF
fA7OkD8B56g3xTwznNcEPEW+j/5j9AvhA3gf9WLEJ4iPwDHyQ8wT4PkjcLi0
X/0+Zrh/CTjHfUvBMXiC+5LjeTP4FD6Cj+ETeE/6ieShGLWN8vp3Jorz0tmV
86UqX2cfbMv5inN2RPW97VZuY1VP90N4Dz4EB4j34cfwhhBHp/vVrRHe14Hi
xX7G6v3W423EW+Lp8e36Yi1Q8+lso54L9lDPBQ/R3wEn4Bj5MfpFiA8RH+H5
A3CIev4S6/XG6Bco/gHY2jHp
        "], 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          PolygonBox[{{1, 2, 3}, {5, 2, 4}, {6, 3, 5}, {9, 8, 7}, {4, 8, 
           10}, {10, 9, 11}, {12, 13, 14}, {15, 13, 6}, {11, 14, 15}, {18, 17,
            16}, {19, 17, 20}, {20, 18, 21}, {7, 22, 23}, {24, 22, 19}, {25, 
           23, 24}, {28, 27, 26}, {21, 27, 29}, {29, 28, 25}, {30, 31, 32}, {
           34, 31, 33}, {35, 32, 34}, {37, 36, 12}, {33, 36, 38}, {38, 37, 
           39}, {26, 40, 41}, {42, 40, 35}, {39, 41, 42}, {45, 44, 43}, {46, 
           44, 47}, {47, 45, 48}, {49, 50, 51}, {52, 50, 46}, {53, 51, 52}, {
           56, 55, 54}, {48, 55, 57}, {57, 56, 53}, {16, 58, 59}, {61, 58, 
           60}, {62, 59, 61}, {64, 63, 49}, {60, 63, 65}, {65, 64, 66}, {67, 
           68, 69}, {70, 68, 62}, {66, 69, 70}, {73, 72, 71}, {74, 72, 75}, {
           75, 73, 76}, {54, 77, 78}, {79, 77, 74}, {80, 78, 79}, {82, 81, 
           67}, {76, 81, 83}, {83, 82, 80}, {84, 85, 86}, {88, 85, 87}, {89, 
           86, 88}, {92, 91, 90}, {87, 91, 93}, {93, 92, 94}, {95, 96, 97}, {
           98, 96, 89}, {94, 97, 98}, {100, 99, 30}, {101, 99, 102}, {102, 
           100, 103}, {90, 104, 105}, {106, 104, 101}, {107, 105, 106}, {110, 
           109, 108}, {103, 109, 111}, {111, 110, 107}, {71, 112, 113}, {115, 
           112, 114}, {116, 113, 115}, {118, 117, 95}, {114, 117, 119}, {119, 
           118, 120}, {108, 121, 122}, {123, 121, 116}, {120, 122, 123}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplexBox[CompressedData["
1:eJxtlz1oHEcUxy8GNcEuTHATcOEujeMyqBqIUWNsMC6MO2MFl0kIOIS4iQql
SRpVadK4MiYuouJsBBJBEYd0yIei+9q729372Nmv2907yRhDCC6SCdpdeL+z
GvHT/33Mm3nzZnVl9es7D89VKpWvPqhU/v/9/p8nSvKG+u3mvenjl7/mf9+E
/gz6k5yf57wL+y3wDvyr4C3E28x5WxX515Y//9StV0t/yZvwP0b+BvgI+evQ
D6E3EL8G+z3Y74Nr8K+jvkPUsw+uL+z3Gb9Sxf5eun7r5+eqqGMPvJXHq5X+
kmvgqkqvfdY8f+dPnM92mU/qu9D3odeg70GfYD9H4DH204U+hD7CfvVhb4MH
8HfANuK5qGeI83LALvxbyN9Evg70NvQW4lmw78G+C7bg30E9bay/C+4s7K/s
xwH6rwe20W99sAV20C821juA3ofehW5B70E/znUn5yM1Pmgtf/RuoIrzktzI
6+uX/pJb4HpeX3HOh+rGHwfu9XWrjCf1I+jH0DvgNuxb0JvQ95S6+8XKjat/
4b6+Kvlsf5rl/Zb2ddjvqxfVnR8eXWiX9UmuI14DfIx4DfAR8h+Ce2AL/hby
dWHfgX0X62+DO4jXWmAZr4l8bfBr3OdTyWunuM8n0E+gn+K+zhB/Dv+Z9F+b
I94c8U7kfTL5xbww/nJ+nMB/ivUkWM8U+VPoCfQE8TPYZ6gvhX8G/xT1Jagv
RX3pwn6L8zf7K+ahWY+cj3PMvxk4k2z2V86vOdY7gz6DnkLPoGfQPeznBPun
oXvQPexPgPP34e/jvDTi+YinsX4P56VxXhr+MfLHyBdBj6DHiBfCPkA9IfxD
+EeoJ0I9IeqJFvZX9p+P/gvQfz76LQCH6D+N/vCxXh96AD2EHkIPoBfzIH+f
zXwQ77E5L/k+J3h/p+AYnMr30tx3+V4m0KfQp3hvI9hHsI+hx1I390++D5k8
z0om3xtzn6V9ivNP5ftl6pPvWYr3KwFPkT9B/KnMb+JLDrC+EPFC1BPCPkK+
EPVEqCfC+uMFlvFirDdC/mLeFe/KWK38dOniQT9/l8w8FGz+Hznrx6T0l+yB
3bwfi3dxqB4vbazev5yU8aQ+hj6BriWbeSjtPegT6MX3eTGnByp8t7608bSY
azZ0O+/fYk46sHdh76jf1z6s/v0gLuuV7CLeCDxBvBF4jPxDcCDtzbySuo94
vsxv5p+014inZT1m/2V9GvV4CyzjTWQ+E0/mb6pvm8Nf9DfDnFtyXho+6+dx
zm3Yd2BffN96pf2PX779596j4v/2LriD+Ba4j/gWuIf1dME99fF3/979JCu+
EwZgK7//fplPsg3uqttvvn+2e02X/rLeHvQ+dBfswN6GPoA+Qf0j8Bj1u9CH
0EfYbxv2A9g7YBv+Q5yvA3alvZmfMl6M/DHsI9hHsI/k/hl7kd/Mf7meCOsP
wQHih/ieCOR6THzJgew3My9k/4XorwDsSzbxZT+EqDeAHqCfNOw17H3oPnQP
9U9wHhq6B93D/vqw97F/Gv4++sHD+Wqcry7t/wPXWwA3
        "], 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[CompressedData["
1:eJxN1XWQlWUYhvE9dEp3Lt3d3bnUIt3diyJ2txiI3VhY2N1iIHa3qIiB3ZhY
1zPnOjPvH7859zz38877zbdn5+QvXFtYVCwvL+8XFEcGxcwlzSVQKpmVRRmU
totcTtGVRwVUxH6oZC5ll5tVRRVURjVzdUVXwztqohZqm2O3TjKrj3qo65nI
DVTf3YZohMZoYs5H02TWHM189nxzC0XX0jtaoTXamJva5Wbt0Q5t0cHcUdF1
Qmd0QVd0M8du92TWCz3RwzORe6uXu/Hu+qAv+pv7YUAyG4SB3tnPPFjRDcFQ
DMNwjDAPsMvNRmMURmKMeayiK/BZx2E8Jphjd2IyK8Qk7ywwT1ahu/tjCqZi
unkaZiSz2ZiFmXaR5yi6uZiH+ViAheYZdrnZYizKy35HlpiXKrpl3rEcK7DS
HLurklkR1mC1ZyKvVZG78e4OwIE4yLwO65PZITjYZ19nPlTRHeYdh+MIHGle
b5ebHYOjcRSONR+n6I7HCTgRJ+Fkc+yeksw24DSc6pnIp2uDu2fgTJyFs80b
sSmZnYtzvHOj+TxFdz4uwIW4CBebN9nlZpfhUlyCy81XKLrNPuuVuApXm2P3
mmS2Bdd652bzddribvwPX48bcJP5RmxNZrfiFtxsF/k2RXc77sCduAt3m7fa
5Wb34h7f5X3m+xXdA97xIB7Cw+bYfSSZbcNjeNQzkR/XNnefwJN4Ck+bt2NH
MnsWz/js283PKbrnveMFvIiXzDvscrNX8Qpexmvm1xXdG3gTb+FtvGOO3XeT
2U68j/c8E/kD7XQ3vhMf4iN8bN6F3cnsU3zinbvMnym6z7EHX+BLfGXebZeb
fYOvfZffmr9TdN/7rD/gR/xkjt2fk9nevOzv7x7PRP5Ve939Db/jD/xl/hP7
ktm/+Ad/20X+T9HFj3sGxVAcJcz77HKz0iiFkihjLqvoymWyd5TnswIqZrI5
dvdLZlVQGZU8E7mqqrhbDdVRA7XMNVE7mdVFHZ+9prmeoqvvHQ3QEI3Mte1y
s3w0zmR/W5qYmyq6ZmiOFmiJVubYbZ3M2qEt2ngmcnu1czfeXQd0RGdzJ3RJ
Zt3Q1Ts7mbsruh7oiV7ojT7mLna5WX/0Q18MMA9UdIN81sEYgqHm2B2WzEZg
uHcOMo/UCHfjf3gUn6MxNpPNY1CQzCZgPMbZRZ6o6CahEJPjb4Ep5gK73Gwa
pmay35Hp5hmKbqZ3zMJszDHH7txktgDzMc8zkRdqgbvx7hZhMZaal2BZMluB
5T77EvNKRbfKO1ZjDYrMy+xys/8BnVww1w==
           "]],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}], 
   ",", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {MeshRegion, {}}}, 
      TagBox[GraphicsComplexBox[CompressedData["
1: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
9Zc=
        "], 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[PolygonBox[CompressedData["
1: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
           "]],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.87848374711252*^9},
 CellLabel->
  "Out[434]=",ExpressionUUID->"3269807a-db34-4f05-9cee-7106cdcdb8d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"SierpinskiMesh", "[", 
    RowBox[{"i", ",", "3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.878483679263692*^9, 3.8784836802108364`*^9}, {
  3.8784837393346815`*^9, 3.8784837550414553`*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"36e8e571-137d-4cb3-bb7d-50031499f4e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {
      MeshRegion, {ViewPoint -> {2.88, -1.75, 0.29}}}}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {0.5, 0., 0.}, {0.25, 
        0.4330127018922193, 0.}, {0.25, 0.14433756729740646`, 
        0.4082482904638631}, {1., 0., 0.}, {0.75, 0.4330127018922193, 0.}, {
        0.75, 0.14433756729740646`, 0.4082482904638631}, {0.5, 
        0.8660254037844386, 0.}, {0.5, 0.5773502691896257, 
        0.4082482904638631}, {0.5, 0.2886751345948129, 0.816496580927726}}, 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          TetrahedronBox[{{1, 2, 3, 4}, {5, 6, 2, 7}, {8, 3, 6, 9}, {10, 7, 4,
            9}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    ViewPoint->{2.88, -1.75, 0.29}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {
      MeshRegion, {ViewPoint -> {2.88, -1.75, 0.29}}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAmJmBkLggj128QP2q3wiXlRtO22PLi5rPMF1eeUme3sd
noK9Cqeg8g9wmHMDhzk3cJhzAar+Npr6C/YyYPWXMNRDzDkEFb8FFf+Awz0v
cIi/weHONzjc+QSH+ic41L/A4a8XOPz1Aoe/HkDNeY0Rng2WTnp3TjzBcA92
8Qf2j+2/iAlKPMeIR+zuvGG/Q+deTJHWA4xwwC7+AOqvRxjul4X61w4s/soe
Zj4sPPUVOUX6ZjzGCGdUcYQ70cWxh9sNqH+vo4k/wRAHAPavyxA=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          TetrahedronBox[{{1, 2, 3, 4}, {5, 6, 2, 7}, {8, 3, 6, 9}, {10, 7, 4,
            9}, {11, 13, 12, 14}, {5, 12, 15, 16}, {17, 15, 13, 18}, {19, 14, 
           16, 18}, {20, 21, 22, 23}, {8, 24, 21, 25}, {17, 22, 24, 26}, {27, 
           25, 23, 26}, {28, 30, 29, 31}, {10, 29, 32, 33}, {19, 32, 30, 
           34}, {27, 31, 33, 34}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    ViewPoint->{2.88, -1.75, 0.29}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {
      MeshRegion, {ViewPoint -> {2.88, -1.75, 0.29}}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJyFlk9IVUEUxh+FhKJBkNGiB7oV0UVQCNEhRVfpQl24cBVUS6WFUKtoG0TL
wFVCCrpIXIgmwsONF91c9UK31yDTvGkabw9x0T7jvXn3Mn8+Etz8PHz3O2e+
c7D3ydzk0yulUunNv9+rpf/9VCjM12n18Yx+tblDLi/ffT+68nKJqL9zfrfn
i/l7DHQioBMBnYqpP3TqK3SnUb/n1Td1Ngw/MJwDPyngDPhkwGcC6hNQn4K+
UtBXCvqKjc53b56vh4YHWJR4fsI8phr9uXXj9lfvHcM+I9rqP5190Rd7cwjz
2PR17PkvW/1WqaXfmudAb/vNdx9OvDnbvPDp8vDcItPvvsMTwC9ATuqAn4M8
nIM8aKCTAZ0M6NTBe9VBrupgPhL4EcCPAH4UqFegXgL/EviXwL8Ge5GB/CvA
NdgLDXxmIP8KcA32QoO9yED+FeAa7IUGc8tA/hXg3Oj/9u5k98j42zVycy0A
5zQ2tvx39PmZd/ea7+LmkQPOaOPB4tLCxU8vJ+F6Aeq56feXdx+ywftHnZM/
vLsdzltCXVMdR5/bTh19BnWaeRCen7A+A/qpyRv33jH8XQn0FdAXUCfsXwAd
CXxyR6ea89Y72nku5mlzATijiXtn248+1pzvCsA59Fk2+/uwwbNcf9vs++Zy
x94npnL9MOckzZ2xefF/wmDDf83Jg8tZfsdsLkG9APVF3myeGJ/7tLJ47dnC
NM99hu9VkvdrcwZ1WvfQ5hzoM6CfOne7muc//F0J9BXQF1An7F8AHQl8Fnmz
dRhdt/ao8BPmzNzVb56fMOeen0sxG1dJ
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          TetrahedronBox[{{1, 2, 3, 4}, {5, 6, 2, 7}, {8, 3, 6, 9}, {10, 7, 4,
            9}, {11, 13, 12, 14}, {5, 12, 15, 16}, {17, 15, 13, 18}, {19, 14, 
           16, 18}, {20, 21, 22, 23}, {8, 24, 21, 25}, {17, 22, 24, 26}, {27, 
           25, 23, 26}, {28, 30, 29, 31}, {10, 29, 32, 33}, {19, 32, 30, 
           34}, {27, 31, 33, 34}, {35, 37, 36, 38}, {39, 36, 40, 41}, {42, 40,
            37, 43}, {44, 38, 41, 43}, {11, 45, 46, 47}, {39, 48, 45, 49}, {
           50, 46, 48, 51}, {52, 49, 47, 51}, {53, 55, 54, 56}, {42, 54, 57, 
           58}, {50, 57, 55, 59}, {60, 56, 58, 59}, {61, 62, 63, 64}, {44, 65,
            62, 66}, {52, 63, 65, 67}, {60, 66, 64, 67}, {68, 69, 70, 71}, {
           72, 73, 69, 74}, {75, 70, 73, 76}, {77, 74, 71, 76}, {20, 79, 78, 
           80}, {72, 78, 81, 82}, {83, 81, 79, 84}, {85, 80, 82, 84}, {53, 86,
            87, 88}, {75, 89, 86, 90}, {83, 87, 89, 91}, {92, 90, 88, 91}, {
           93, 95, 94, 96}, {77, 94, 97, 98}, {85, 97, 95, 99}, {92, 96, 98, 
           99}, {100, 102, 101, 103}, {104, 101, 105, 106}, {107, 105, 102, 
           108}, {109, 103, 106, 108}, {28, 110, 111, 112}, {104, 113, 110, 
           114}, {115, 111, 113, 116}, {117, 114, 112, 116}, {61, 119, 118, 
           120}, {107, 118, 121, 122}, {115, 121, 119, 123}, {124, 120, 122, 
           123}, {93, 125, 126, 127}, {109, 128, 125, 129}, {117, 126, 128, 
           130}, {124, 129, 127, 130}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    ViewPoint->{2.88, -1.75, 0.29}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {
      MeshRegion, {ViewPoint -> {2.88, -1.75, 0.29}}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1: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
hfT1tev7oB+Afgw6MehEoBOBzxD0Q0P/P6lGMjg=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], EdgeForm[None], 
         Specularity[
          GrayLevel[0.2], 30], 
         TagBox[TetrahedronBox[CompressedData["
1:eJwt1we0z3UYx/F7b0pIyIrIrOyRlFVGsivZhNBQNkVGdotKlH2RvUdZ2eMK
lQpp2CkVFSqUnd7Pue/OeZ3/83y+z3O+v9/533uuCnTo3qhbUgL/JSYkpEn9
SIj+hoTU/kbcZJYWN3sWWTqkN09jnwEZcQtudT/qTMiMLNYxcxuyOpfZPhuy
Iwdyet/tZrncz2GWG3eY57TPgzuRF/l8vqjzo4D35XemoPv5PIu+EO5CYdyN
e6yLoCiKWcdMcZRwrqh9vH9JlEJp98uYlcW9nkVWDveZl7YvjwdwPyp4X9QV
Ucn9is5URhXnKtk/iIdQFdV8vupmNbyvqtnD7tdwNvqaeAS1UBt1UNesHup7
FlkDPGpe2z6+v8fxGBq6H/UTaITG1jHTBE2da2Qf798MzdHC+1qatXK/udmT
aG3ewr4NnkJbtPP5om6PDt7X3pmn3W/nWfTP4Dk8i4543voFdEJn65jpgq7O
dbKPn79u6I4e7vc064UXPYvsJfQ272Ef39/L6IO+3hd1P/R3v58zA/CKc/3t
4/0HYhAG+3xDzIZ63yCzYe4PdTb64XgNr+J1vGH9JkZgpHXMvIW3nRth/w5G
4V2Mdn+M2Xt437PIxmKc+Wj78ZiICZjkfVFPRrL7k52ZgqnOJdtPwweYjhk+
30yzWd433Wy2+7OcjT5+/+dgLuZhPhaYLcQizyJbjCXm8+zj/ZdhKT50P+qP
sBwrrGNmJVY5t9x+NT7GGqz1vnVm691fY7YBG83X2m/CFmzGVp8v6hRs874U
Zz5xf6tn0W/HTuzAp/jM+nPswhfWMfMlvnJul318f7uxB3vd/9psH77xLLJv
8Z35Xvt4//34Hge8L+qDOOT+QWcO44hzh+yP4gccw48+309mx73vmNnP7h93
Nvpf8CtO4CR+w+9mf+CUZ5Gdxhnzk/bx8/cX/sTf7kd9Fudw3jpm/sG/zp2z
j+/vAi7ikvddNrvi/kWzq7hmfsk+3v86/kP8MT9jnUidlJh6X9Qxc0Ni6n6C
Z9GnwY24CWlxM9KZpUcGzyK7BRnN09rfiszIhCzuR30bsiKbdcxkRw7nstrn
xO3Ihdzed4dZHvdzmeXFnea57fOhAPKjoM8XdSEU9r5CztzlfkHPoo+/f/fw
eTeKoKh1MRRHCeuYKYlSzhW3j/cvjTIo6/69ZuVwn2eRlcf95mXtH0BFVEAl
74u6Mqq4X9mZB/GQc1Xsq6IaqqOGz/ewWU3vq272iPs1nY0+fv9r8VkbdVAX
9RJTs/po4Flkj+Ix8zr28f01xON4wv2oG6ExmljHTFM0c66xfbx/c7RAS+9r
Zfak+y3MWqONeUv7tmiHp9De54u6A572vg7OPON+e8+ifxYd8RyexwvWndAZ
Xaxjpiu6OdfZPn7+uqMHerrfy+xFvORZZL3Rx7ynfXx/ffEy+nlf1P0xwP3+
zryCgc4NsI/3H4TBGOLzDTUb5n2DzYa7P8zZ6F/F63gNb+BN6xEYibesY+Zt
vOPcSPtReBejMcb998zex1jPIhuH8eZj7CdgEiZisvdFnYwp7ic7MxXTnJti
/wGmYwZm+nyzzGZ73wyzOe7Pdjb6+PffXD7nYT4WYGFiarYIiz2LbAmWms+3
j/f/EMvwkftRL8cKrLSOmVVY7dwK+4+xBmuxzvvWm21wf63ZRmwyX2e/GVux
BSk+X9Tb8In3bXNmu/spnkUff/928rkDn+Iz68+xC19Yx8yX+Mq5Xfbx/e3G
Hux1/2uzffjGs8i+xXfme+3j/ffjexzwvqgP4pD7B505jCPOHbI/ih9wDD/6
fD+ZHfe+Y2Y/u3/c2ejj9/8X/IoTOInfzH7HH55FdgqnzU/Yx8/fnziDv9yP
+m+cxTnrmDmPf5w7ax/f37+4gIved8nssvsXzK7gqvlF+3j//3AN132+qON/
4BOTUu+LOmaSklL3Yy7Oov8fI/oA3A==
           "]],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    ViewPoint->{2.88, -1.75, 0.29}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {
      MeshRegion, {ViewPoint -> {2.88, -1.75, 0.29}}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnX2MbVdZxm9q0NJSItKWaigBEg0BhD9UCEQ5CpZWBBEkSCJqBL/QiCgV
acPHSSnhK2LFRMGaiCS2lVpo4UpvhysO08t0mA7HOd/f5+zv8zEztwSpSoip
i87ea5+19vOL889NnvvkWe9617vWevfa79rnWW/549f/ziVnzpy55NIzZ77v
zP/39+maxm+rffbVb1re/KXbaz5+7U/cdt2dN91Sqz3/Se/4t2f+Xf7/94LO
XaBzF+h8Ouff7fE/XXv64/zPVPinOp/I8c/m+DbYcw7w82DnebDzLPDPAv8c
9Osc9Osc9OveXOfLFX/WX/LyF0z2zlbs0fi9tbj27aufcs39lXHUdt5VO/f8
2Zv/9Ln3Vvyg8Xvzfn2hYv+1Tn+3aoV+4c8XPOuJV378k1+s+NnFSzt9XPvt
rry/d3r4WcAPIU4OAG9APDQgHvZAZx909kHnAMbrAOLqAPxzAezZAXt2wJ5d
4O8C/wLYfwHsvwD278G82If43wV8D+bFHti5D/G/C/gezIs9mBf7EP+7gO/B
vNgDv+1D/O8Cvp3rP1xZJ696xWs+dnfNj+sdwLdrr3zlHY9d93tfr6x7p+Pi
x+M24OdrX/jp2z/zrm9+rRInmr8D/O28vw9V1of1C1/cfNLrv1pZt3W8na1d
8SuXNT//hK94+udR5zQedir2aP3zoH8uj7ftyjjqdi+A/i7o76COtn8HdC6A
nduezpbFi3F047n0p4vvAH6+9ksvWj3wc//4oNfuDuDbaOe1zvzdt/oP5PP9
S3dctvNPk12rr/HtWpKvMy5+zpu/D3rx4OPn7Trm4heAvwP8Mt5c/Gxu5521
O2//gd991xu2rZ16vTpr++vi51GnWA9dfBv0z4P+OW/d3rLxr9u9APq7oL+D
Otr+HdC5AHaW8ebqnK892ZlHpT0aP5+vqw9U7NH4NtgTQD4wA3wO+/4c9v0J
6ExBZwo6M9iXZ5A/zGAfHIA9I8CHYOcQ7BwDfwz8EfRrBP0aQb8msM5PIf8Z
Az6BvGgCdk4h/xkDPoG8aALzdAr5zxjwCeRFE/DbFPKfMeAtiJMmjHsTxr0D
Om3QaYNOC8alBfHTAj/0wJ4+2NMHe7rA7wK/B/b3wP4e2N+B+G9DnHcB70D8
d8DONsR5F/AOxH8H4r8Ncd4FvAPx3wG/tSHOu4AP4LlgCPl/H/ABPBeMIJ8f
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
cwF2LkB/AfpFPY9f/zuvXffRq57y0MCrU64HGjc6T3n4eZ+759lH3vP+LH8v
4NdNB4DPa/9y6ar3nZ9fezqh5ht7ND/I/VDgxfP7JM8D/fruae3mJ9z2lt+8
1rdnhvzoA299zic+svTanaPOadyuKnZq/Tnoz/L3GkuvX5HWqYdgT4h82a7x
M+nIfhm+tj8E+wNPZ8vixbi75z+ln91znkDjhv/UD53/++fft3LbNXyJm3a1
ncV36vw6smEt/e6tT7jtDr+OZoT8V9/8pod3fij1/DPK31P49UFj1D99TvF1
JtDuGNs9fS+Tev0d1z5fv+zsf/+WX/c0BXySvzdZVOyhfj3tselNz21klTjX
/CnwJ3m+tKiMo/bDDPA5+HkOfpsCfwr8GYzXDPw/8fhbdlyyvF3/+7e/mPvN
xafAH9fe9977ar/+0qzSrrZnCvxE+7Meg39i5Gu/xToe6hHqaz9H0G6E7Uo/
GL6Mf7N+6nkRwbyIsF86zkPgh8CPYF6E4IdA+9Pg0j+mXc0PwZ8hjEsI8Rbp
+Df+0fEc6fg39ki+0dHxHMG4h8AP8jyt8PO+xYtxd8/557Wr8/Fy3wsEGjc6
V+b7tXs+P7fx5r4XCDS+sa66eAB4iPx78v3RPbef10Jn39+y9kjc8G+45MUX
Lzy68M6lA40b+915tFXxs4uHgJfrmKvv7y9btl29Ds/suPt+0Ppz0A8gzkOt
U5nvZX+1naG20/hZ6weg36z9WXP6N9GfTL31raXrhQz/FY1bn33DqybefG/l
z7Nzj99G/dPn1pmn04F229ju6fvKiTd/i++M+fce2rUP/tG3v/OmG/3fT+gC
3snfswQVO6m/g/5fvv9pX517/B7wu8AvvkcReP0agH96gPfB/33wZxf4XeD3
YBx7OC5XOPwiDtu1G/N2/e/FvSz3m/9dOM1v1+7ovOjy935qVmlX29MFfr/2
I3/+2Bufc+TfIxkCPsjfeyYVP5y+z63yNd6v3fJo6+m/9qtxJZ/X/CHwB/m5
WVzp7y9/66a7tl/o3+PpwXzp1r70jte8/T9vDz39PuqcnltGFXu0fh/0e/l7
zNCzfwI6Y7BnhHzd7hB1dL+GoDMC+weezpbFi/H1v4te2ON/F13j/drynXdE
f/Fg5LU7BHwAdgawnswAn8O6MYd1YwI6U9CZgs4M1tUZrEszWAdGYM8Q7BmC
PWPgj4E/AvtHYP8I7J/C/jUGfAL72gTsmcI+NQZ8AvvXBNb/KaznY8AnsC9M
0D96nR8DPvDsL/L/fq2f99f/XYDCny4+BH7Ps7/8zv+t+Xj53/nX/HJd9X9f
QOuMQKfcB9381s9Ptqz9ehx71m/+d+y1fs+Lwy3L1+0OoN1yHfPbddfnLesf
jfdrz3jkmT/5Y5f6OkPAB2D/CPAx+GEE/fLnV2k/6Wj/D7VOfQHr1QLuCyxg
HVvodaOeob5e3zJoN8N29XzP9L5vdOR6WE9hncxgncywv3o9TIGfAj+D9TOB
fSoFvyXa/waX/jT2aH4K/k9hHFMcFxnnxm96nc/0Om/skXyjo9fzTNtjdCTf
+Efm+fUY8v8E8v8U8vZE46Zdnc/HwI+Bn+j83/RX57cpzJdU57fGTtLReXIC
+gnkzynkpRHoRGBPjHzdrxh1ZL8MX9sfg/0J5P+Jzv83/Ozff9R4ovN8w9f5
fwJ2hrCeBLA+BLA+RKATgk4IOiHkpSGsPyGsPzHYE4M9MayTEfAjsD8G+2Ow
P4b1KoT9K4L9K4L9K4L9KNT7kdHX+1QE+1QE63wI63YE638EeX6E/tHreQT7
QqLzfDOPdN6e6DzfxInmpzrfNvo6P08gP090nm/a1ToxtJvqvLGSh2xZ+3Ve
muo80/RL56WpzocNX7ebQLuJzvMr+8iW9Y/GE53PG77O8xPI52PoVwR+iGFe
+POrtJ90tP9j8Gfg7Tsjixf7jlvPP7f7i3svINC40SnyDbcOf273HbeeP9D4
mZkdXxcPAA+RX7wPdevMA5unuXXgc5vXuXXggcYNv8i73DrzQOOmX+7+3q74
38VDwCfeOlDgUxvnbrtTL09oW3u0zszGie8frT8H/QD0I42bdVvqG1zrh6Af
avvNuGj9AO0v3pO69XVz733xvtWR+MZ7QLfusaxLcev9Ao2bcbnGeX9d6ms8
RH7xHtytZ57Xzv7P8/7q0fclXv1noPGN+hm3bjPQuLG/mHcuHgAeAj7xnmv2
bZx/MbfTx4v56/tT65R1RP64a/056AegH2ncxLnUN7jWD0E/1PabcdH6AeiX
54c+XuyPbrsjOC8tz8HccSzfy7j6Y2jXf5+yb/naHv/8ucp343li9V18Cvzy
/ZEfn7q/E7suufgUdGagM/ae48r+FvuF67cp8Mv3ZS5/An6eAn8G/AD8PwN8
DuM+h/GdAn8K/JmOt4382ce1Tgz2xzBeMbQbgf3+ucG+5Wt7/OevKt+N20jH
uVlnJH/jnMTtVwT9jXScb+zv/jovdUy7Om4jHedGX/I3zoVcP0fg5xD4IcR5
CP4PIK4CPY6mXc0PYdxDWD+L73a2ai97nF/U9Zv5ld8Lnux/7Nb7X7sq7VS4
3b/aHj7L7wU38/x/afkaN3ljfp/dxUPN/16eJvmBvUfv4pP8vs9hnv8XdZRT
e0/nmks/ds/d9yys/cS/1bm/n1n7Sae4l+3iAejPQX/mfWcgs/EpdUw8aHtC
5Mt2jZ9JR/ZrI05cO0OwP7DfC/Lx4vsDbrtz+x0h306JG37xnQHfTolvxLOr
M7D3bl74eP5fnK8P7XcwbrvlI4/99duKutoR8ov7XC4+svezTp87irraMeoX
98hcfALtjrHd4l6bz//ZnP+G6z7a+4fLy/jX+MTq+Dj1q4grF58Bfwr8iY1D
Fw/ADzPA5+DnOfhtCvwp8GcwXjPw/8SuY/64FN/98PlF3Pr2aP7Yfv/Bjx9t
zxT4ifZnPQb/xMjXfot1PNQj1Nd+jqDdCNuVfjB8Gf9m/dTzIoJ5EWG/dJyH
wA+BH8G8CMEPgfanwaV/6iHwQ/BnCOMSQrxFOv7rEcRzpOO/Hmp+PYJ4jmDc
Q+CX9W+uPYH9/qG/ngT59xJ9/0vc6Fyff7fQHce5/c6hP14St/cZBxV9jYfI
vzrH3Xie5/cvet68CDRu+MV39tx4DjRu6/C7lXVe4yHgU/s9QH99K/IH3296
HZ7ZvMUfX60/B/0A4jzUOvUQdEKwM9R21gPQD0C//L3dSx550vVf3ynei7b0
94I2fl/VxVve/f3ivWgb9Yvv9rh4B9ptY7s3ON+dHlmdQv/0uTKo6Hz0xic/
Gnx/8f6zC3jH6vs49fdq5152gfeA3wV+J//ewsMePgD/9ADvg//74M8u8LvA
78E49nBciucUf3ynznfnSn6xP/r2aL55bszvy/txpe3pAr9v791/498//JwP
P1TUgwwBH9jvLbh4z37X6A8fP1cJLV/jfbv/uvgI+EPgD+y+7OJlvD3xfz/0
uvf8aFgZR3e+dGs35f118T7qFHmIiw9Avw/6PTvuLj4BnTHYM0K+bneIOrpf
Q9AZgf0D73tuJV7kJ65+3+aBvp0a79s8zbdT4wOwM4D1ZAb4HNaNOawbE9CZ
gs4UdGawrs5gXZrBOjACe4ZgzxDsGQN/DPwR2D8C+0dg/xT2rzHgE9jXJmDP
FPapMeAT2L8msP5PYT0fAz6BfWGC/tHr/Bjwgfed6nI/db+HObL8Ii/140Tz
e973LUv94vzKt0fzBzY/dP08BJ0R6HTt+Z6PF+uMv7/rcezZ9c3fT7V+z/v+
0tTydbsDaLf0jxvPfft85+JDwPv2udL3p8YHYP8I8DH4YQT9GoMfhqij/T/U
Ohvf1XT5C/he6ALWsYVeNza+3+Xr6/Utg3YzbFfP90zv+xs6zrjXU1gnM1gn
/e+Vlf3V62EK/BT4GayfCexTKfgt0f6v/G7OyNqj+Sn4P4VxTHFcZJwbv+l1
PtPrvLFH8o2OXs8zbY/RkXzjH5nn12PI/xPI/1PI2xONb3xH3eXHwI+Bn+j8
fyPe3DwwhfmS6vzW2Ek6Ok9OQD+B/DmFvDQCnQjsiZGv+xWjjuyX4Wv7Y7A/
gfw/0fm/8Y/M8027Gk90nr9xDu+Pi7YzhPUkgPUhgPUhAp0QdELQCSEvDWH9
CWH9icGeGOzxf49sZONH8yOwPwb7Y7A/hvUqhP0rgv0rgv0rgv0o1PvRxvxy
7Y9gn4pgnQ9h3Y5g/Y8gz4/QP3o9j2BfSHSeb+aRztsTneebONH8VOfb9QTy
8wTy80Tn+aZdrRNDu6nOGw2u88wU8tJU55nfu9cg89JU58Mb65vvB91uovP8
eqLz+XoMeKLz+XoMeX4C+XwM/YrADzHMiwjy8xh1tP9j8GdZP++fz9zv3I8o
13mJb9R1u34o6/T8fUHiZ2a5nUFFX+Mh8t17EOX5VVFX5q57c3s/wo2HQOOG
/0GnLmtq+RLf+B6FiweAh4BPvHth5TnG0LnfUeLFPRHfz1qnqIMKKvGg9eeg
H4B+pHGzPkv9jXtb/j6u9UNtvxkXrR+g/cU9Mjdvn+ffvx17+X+gcaNT3Otx
8/B57eX5fUA3Dw80bsaleL/s4gHgIfKL+19uvjf37hMFFf+482hu7+W5+WSg
cWP/OPenPx81HgI+sb/r5+JT+7uEbrvT2g/m4+LyZ6BTfsfG94/Wn4N+APqR
xuuh1je41g9BP9T21wPQD0B/6P2uYnnuXbyv988P9bnoyPtdyBIv7PfPXXW7
I/s7gP65mbZnAvb439spz42L+e6/X9D8sZ3vfru6v+V3jfzzc60zA51x/j3G
QeV8vuC7+BT4YxsP/v6i/TwF/gz4Afh/Bvgcxn0O4zsF/hT4Mx1vJi+SOgbX
OjHYH8N4xdBuBPbH2p/1COyJ4DnFv29e7r8yziv360sdHZ8R9DfScW70tU6o
dUy7Om4jHedGX/KNjo7bCPwcAj+EOA/B/wHEVaDHsR4CP4RxDytx9X8xmUXd

        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], EdgeForm[None], 
         Specularity[
          GrayLevel[0.2], 30], 
         TagBox[TetrahedronBox[CompressedData["
1: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
1TpmXsPrzvW0j++vF3qjj/f1Nevnfm+z/hhg3sc+3n8QBmKwzxf1EAz1viHO
vOH+YM+i//9//4/PYRiOERiZOpGNwlueRfY23jEfbv8uxmA0xrof9TiMx3vW
MfM+PnBuvP2HmICJmOR9k82muD/R7CN8bD7JfiqmYxpm+HxRz8Qs75vpzCfu
z/As+vj9n4PZmItPredhPj6zjpnP8YVz8+3j/b/EAix0f5HZYnzlWWRf4xvz
hfZLsAxLsdz7ol6Ble6vcOZbfOfcSvvvsQqrscbnW2u2zvtWm/3g/jpno/8R
67EBG7EJm8224CfPIvsZv5hvtI/vbxu2Yrv7Ue/ATvxqHTO/YZdzO+3j/Xdj
D/Z63z6z/e7vMfsdf5jvtT+AQziIwz5f1Edw1PuOOPOn+4c9i/4v/I1jOI4T
1idxCqetY+YfnHHulH38/J3FOZx3/1+zC/jPs8gu4pL5efv4/q7gMq56X9TX
cN39a87cwE3nrtvH+8f/IC8Zkiclni9FUiJLmZS4L84iS5WU2E/pbPTx7/+S
+EyNNEhrnQ7pcat1zNyG251Lb38HMiAjMrmf2SwL7vQssqzIZp7J/i7kQHbk
9L6ocyG3+7mcuRt5nMttnxf5kB8FfL6CZoW8L7/ZPe4Xcjb6+PPvXj4Lowju
Q9GkRFYM93sW2QMobl7EPt6/BB5ESfejLoXSeMg6Zh7GI86Vtn8UZVAW5byv
vFkF98uaPYaK5uXsK6EKKqOqzxd1NVT3vmrOPO5+Vc+ij9//GvHXATVRy/pJ
1EYd65h5Ck87V9s+vr9n8Czqul/PrD4aeBbZc2hoXtc+3r8xGqGJ90XdFM3c
b+pMczzvXDP7F9ACLdHK52tt1sb7Wpq1db+Ns9G/iJfwMtqhPTqYdUQnzyJ7
BZ3N29nHz19XdEE396Pujh7oaR0zr+I153rYx/f3Onqht/f1Mevrfi+zfuhv
3ts+3n8gBmCQzxf1YAzxvsHODHV/kGfRxz//v8HnmxiG4RiRlMhGYpRnkb2F
t82H2b+D0XgXY9yPeizGYbx1zLyH950bZ/8BPsQETPS+SWaT3Z9gNgUfmU+0
/xjTMBXTfb6oZ2Cm981wZpb70z2LPv7+bzafn2AO5lp/inmYbx0zn+Fz5+bZ
x/t/gS+xwP2FZouw2LPIvsLX5gvsv8FSLMEy74t6OVa4v9yZlfjWuRX23+F7
rMJqn2+N2VrvW2W2zv21zkYff/79wOePWI8N2JiUyDZhs2eRbcFP5uvt4/v7
BT9jq/tRb8N27LCOmZ341bnt9vH+v2EXdnvfHrO97u8y24f95rvtf8cB/IGD
Pl/Uh3DY+w45c8T9g55FH7//f+Jo/LXAMeu/cRwnrGPmJE45d9w+fv5O4x+c
cf+s2Tmc9yyyf3HB/Ix9fH8X8R8ueV/Ul3HF/cvOXMU1567Yx/tfxw3c9Pni
f0QfWbI0iftumCVPk9iPPGaj/x/jwzJT
           "]],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    ViewPoint->{2.88, -1.75, 0.29}], ",", 
   Graphics3DBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = {
      MeshRegion, {ViewPoint -> {2.88, -1.75, 0.29}}}}, 
      TagBox[GraphicsComplex3DBox[CompressedData["
1:eJyEvXu0b1lV3/lrOtglIJGnoKDEMbRpn4l50DoSfzsoFoov0GFMq7GVJDad
tJ1WosJA2IEyYBFIRU1QsCMRgniqCouqyq3ienPd955777n3PO45v/f7/TqP
e4vESCvDdtCz6uy99l5rfz+jzz81at7v+K655pprrrnWmnv9/spP/59v+kfP
qlQqz3pVpfLfV/7//h6oanlc3freHz1++4X3V0P5K//6A6/7vbf9XLX6Dc/7
Z//5Vfen//5R4PlN4PlN4HkgxX8kwD9QfcUz+F8r4c953p3KP5zKHwF9Pgny
h0DPh0DPjwP+44D/JPTrk9CvT0K/PpryPFiyZ/ytr/2m4c2Pl/TR8o9WF9U/
eekLXvZ7pXHUev5m9clvGP/4z33dR0t20PKPpv363ZL+r/T6u1XN+DN7ftNf
+eIXf/A3P1aysy/P9Qzl2m6/mfb3Q4H84yBPwE8ugfwy+MNl8Icngeci8FwE
nkswXpfAry6BfR4HfR4FfR4FfS4A/gLgHwf9Hwf9Hwf9n4R5cRH8/wLIn4R5
8SToeRH8/wLIn4R58STMi4vg/xdA/iTMiyfBbhfB/y+A/JGU/w9LcfIl3/F9
73+wGvr1oyB/pPpd3/WJL7zuZz5Tinvn4xL64yMgf6j66N/+yO/+wn/5TyU/
0fhHAf9I2t8nSvHh9JtfU3vemz5ditva3z5e/ZIfek7tD579qYD/IeQ594dH
S/po/oeA/5Opvz1SGkfd7uPAfwH4H0Uerf+jwPM46PlIwLPl5Nk4+v6c29OX
Pwryh6rf/7dOPvN3/8NjQbuPgvwR1POV3vy96Pg/k873C594ztX/OLzg+LX8
keoyjTO+/JPB/H0s8IdQ/pCLY778ccA/Cvjc33z5x1M9P1T9vY/8D//4F374
Eaenjlcfd/315Q8hTxYPffkjwP8Q8H8yiNtbzv91u48D/wXgfxR5tP6PAs/j
oGfubz7PQ9Xne/Mo10fLH0rj6u+X9NHyR0CfI8gHboP8ENb9Q1j394HnAHgO
gOc2rMu3IX+4DevgTdBnF+S3QM9boOce4PcAvwv92oV+7UK/9iHOH0D+swfy
fciL9kHPA8h/9kC+D3nRPszTA8h/9kC+D3nRPtjtAPKfPZBfBT+5AuN+Bcb9
GvBsA8828FyFcbkK/nMV7HAD9NkBfXZAn+uAvw74G6D/DdD/Buh/Dfx/G/z8
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
523w8xb4eRv8vA1+3gI/b8O4twHf1d8FWHyQ9f9mT/1dQFd/F1A4fwjHRX8X
0IM6/y7IO4iX3wXEXV3/b/poeVfX/xtefxfQgzr/Lsg7Wm5xSdbDm1zXw/eg
3j4/FwrHV/N3gb8L/twGnjbwdEDPDujZAf4O8Gf1PGH972H1dfe/5AU73aBO
OT7ScuN5wd7Xf+rhrx4E+/3b6b1AWDd9BPLD6kP3nLQ//539gKem8aaPxh+l
dsjk2f59P80Dw/rug+rbn/3AT//kK0N9biN+/p43v/rXfrUbtHuIPOd+2yvp
qfkPgf92eq/RDfpV1zxxDfSpIV62a3YmHtkvw2v9a6D/UcCz5eTZuPvnP7md
/XOeIy03/Ivee+m3v+HTPb9dw0u5tav1zN6pC+vIblVXf37fsx/4RFhHs4v4
7337j+5dfWErsM9uek8R1gftIf/5PiXk2Yd297Dd83uZVtDfveofxM95/E9/
Kqx7OgD5fnpv0inpQ/36si+M3vZ1t9slP9f4A8Dvp/lSpzSO2g63QX4Idj4E
ux0A/gDwt2G8boP99wP8lhuXddpu+P7tG1K7+fIDwO9V3/nLn67+xLe1S+1q
fQ4A39T2jBtgnwbitd0a2h/iOvJrO9eh3Tq2K+1geOn/Fj/1vKjDvKhjv7Sf
1wBfA3wd5kUN7HCk7WlyaR9rV+NrYM8ajEsN/K2u/d/so/25rv3f9JF449H+
XIdxrwH+KM3TMjtfdPJs3P1z/sPqS9Px8u8FjrTceF6crtf++fyh8zf/XuBI
ywtx1ZcfgbyG+IfT9dE/tz+szrx1f8vpI+WGf/2zXvPUtc91gnPpIy03/f15
tFWysy+vgTyPYz5/uL5suXZ1HL7txj20g+Y/BP4j8POa5inN97y/Ws+a1tPs
rPmPgP9K9Z/XRv9u/n8dBPHtqq4XMvx33L7vq1//PfvBfL+a7mcPA/w28p/v
W28HPNeg3W1s9/y+cj+Yv9k7Y+F3D9vVX/k//uTzP/rW8PcTroP8WnrPclTS
k/rb7fzrd33ZlcMAfwPw1wGfvUdxFPTrJtjnBsh3wP47YM/rgL8O+Bswjjdw
XL7Ew2d+uF19a9pu+F7ct6d2C9+F0/jt6ieaf+u5v/xbt0vtan2uA36n+uW/
+IUfefVZ+B3JLZDfTO89myU7nN/nlvFavlN99+fqr/ixv9co5fMafwvwN9Nz
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
yxL8fwX1/+D/0RL8dgnfuQA+Aby1q/18CX6+gnrp8Hw+x+vvXJbwncsK/BzG
vbDe+filrv+3+CDr/M2euv5/qev/C+cP4bjo+v8F1PMvof4f5JWlrv83fXSd
/xK+C1joOn/D6/r/BdT/L6H+H+TRAurqF1D3DnG1cC4Ujq+uqwd+d24Zxu0l
8CxBT+Ap7OtDP9F2AP5K9r7iIP3/9C86rr7u/pe8YKfb9+XJRsuN5/z3HQbB
fv84vRfolfBSbu0+dM9J+/Pf2Q94Nhpv+ki88Z/bIZNn+/fsnbpuwHNcffuz
H/jpn3xlwG/6E37+nje/+td+tRucBzLPud/2SnpK/gj4jef8XqMb9GsDPBvQ
h/Gy3YR5ZL8S4DG81j+0z5aTZ+Pun+fkdvbPfzZabvgXvffSb3/Dp3t+u4aX
8grZOfsOsRn4w0l19ef3PfuBT7QC+5wg/nvf/qN7V1/YCuxzkt5TtINxYf7z
fUrAU4F2I273/F6m5ffX8H8QP+fxP/2pTsn/pdzaPb836ZT0oX592RdGb/u6
2+2Sn0u8tSvxlex9uU5pHKUdYpCbn0g7m1zaLQF8AnhrV46XyaX9K+H4brlx
Wafthu/cviG1mz8vjjXeeN75y5+u/sS3tUvtSn2MR+PXYM81+C3jtd3W4A/M
r+fFBuYjt6vtsNb+b/FTz4sNzIsN9kvPC8Bbu3pebPS8iMkOG/DnjbZPBPgI
8Nau9v8N+H+Iz+tMtP9vtP+bPhJvPNqfQR/j0fjsHenMzhedPBt3//z/uPrS
dLz8+4KNlhvPi9P12j//z+Owf1+w0fJCXPXP+UFe8LcQ/3C6PvrnycfVmbfu
bzl9pNzwr3/Wa5669rlOcO690fL4OJhHWyU7++fh4bzL9MnjmN9uuL5suXal
H8b5uId2kPwR8FeAv+BvPk843/P+aj03Ws8E+BPgT86q/zz9fc9K8c99jxzW
C50FvyuXzfcz9/u2Hj5ifv/3XrP4Bu1G3G72+3f+/M2+96+VeLLf8/X7darl
lTP3+8KhntTfrve7tJmepxpv7Uq8e3fiKOjXqbZPDPLoVNvf5NKeCeATwMen
ehzjUxyXL/Hw2bw4c78zG74Ll/2+bfj+m8QbT/b7tmG7Uh/jkXizz5f/4hd+
5NVnjVKeL+U2Luf3ns2SHc7vc8t4Kbd23/25+it+7O81Svm8xJs+El/J3tlo
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
94GnBzw94OmB//TAf3rgPwPQZwD6DMD/+4Dvg/4D0H8A+g9A/z74fw/8vw/+
3wf/74P/98D/++D/ffD/Pvh/D/y/D/7fB//vg//3wP/7IB/CvdgA7sWGcC82
gnuxIdxzDeGeawD4AeCHcC82gnufEfjVCO6Phsij78WGwD+Ee6WRvq+x8dLt
DoC/D/oPkEfffw1AzwHcKw3h/msI919DuOcagHwI918DuP8aop76/H+oz/ON
X5/zD/W9gI2jPs8fwvn8EM7zB4AfAH4I9wUjOE8O85Ath9fnyUPkkefSpo/m
H8L5/wjO1fvQbriO5Hit/wB59Ln6APQcwL3AEO4phnAfMQD5EO4pBnBPMQR9
usF8TOv/bV+TzS+/nr/r5qn/XUAX8B3XX78+v+Pmo1+f39V4k2dx2+fpAk8P
eNqB/2f14e3qc1I7+3Xs7SDObLt+SR6TZ/b0eTqa3/B+3Nsu2d/n70K7+blo
KM/W31CfJ9L12m+3C3Lb/6brqc/T1fKCn/j69EDeh3Hpgd16iJd2Mz2JR49X
F3iaLm/06+vy+0H/vKil15HC/aBfJ5nXq/j8Ld1uqc7kosNrfdqwruV4vy60
7eaRX+fc1njjyeKV36829Lft7O/Xf7aBp4M8fl6X98tf93M7ZH7o27mt8YX6
It/+bbB/G/Adjbf5ov2kA+PVAT/s6HEv1IeE/dV+0tF+WDhXDNv1z1Gzdrta
Xjgf88e94851ff6ulpfuWXJ+LQ/Ppct4358tPv/lh9798m8M5V2Q5/dKfr+6
Wm76Z/HZl3dB3tNyG8dMn3Dcs31ZaDc5Xwr3aOH4av4O8HeBvw/ztAf8PeDv
AX8P9O8Cf1fzWx6l4+0A5uMA5tFAx6vC+UPIr+ddH9rtY7s6LvUhbvcg/vd1
/C+ck4T90nG7B/ge4Pt6XTAebYcuxLcuxMMe4Htgzx6MSw/trNedPqw7PVh3
+rCO9KHdnsYnGziX2+hzP8Pr872NPgeLmF+f40G7Eberz/02+nzDeOT5XrKG
c78NnPtxf/W531rjrV19HriB88A1nMeCPFpr+5tc2jMBfAL4eK3HMV7juMh9
99O/cyTPLTf63NL0kXjj0efz4CfGo/FrfW9udpPnmckKzjnX+pzT7KPPOUFu
7cpzy3il8aaPPudc63POp39nUJ3vxWs9jwwvz/ci5tHnnMAfAb/x6HO5FfCs
QB/Gy3YT5pH9SoDH8Fr/0D5bTi7PPwt29ufFSssNL885Da/PP8nOS4g/II+W
EH+WcO+zgnUHeBLgMX30vcwS4tUS7kFInxXos9L6RICPAG/tav1XoP8K4ttS
r2vWrl7vVrDegT7GL9cv49fr2grWtbBfW05/HedXsF6s4J6L7SPjv/HTuiDz
TJtf+px/rc/5zU/0fcFan9sbvz63B7zJ5Xm+tSt5zH8kT2F99N+NWcM5eZgP
5HJ5Th4Bf7zW59IRtFuBdk0uz9WNR56fm32k3PDy/Nzw+lwd9I/D+bVV8jff
DjAvDC/tkDCPtH8CPBafZZ1/soD6/6Wu/7e4quv/QW7tynr+eKHxpo+u/19C
/f9K171bHJD17aY/4WV9e8Q8uv4f+CPgNx5dP78AngXow3jZbsI8sl8J8Bhe
6x/aZ8vJZf1/wc5+/rPQcsPLOn/D6/p/sLPNF10Hu9L7BcPretqVru+NmF/X
00K7Ebcr610NL+uZzc91nfMK6py5X7Ju2fxZ4q1dXee8gjrnJdQ5g9z8QdrZ
5NJuCeATwFu7crxMruufw/HN47yuf17p+uen45LCG4+uZwZ/MB6Nn4M95+C3
jNd2m4M/ML+eFwuYj9yutsNc+7/FST0vFjAvFtgvPS8Ab+3qebHQ8yImOyzA
nxfaPhHgI8Bbu9r/F+D/IX7L2V/7/0L7/9Prl8Ibj/Zn0Md4NH4J9f9LXf8f
LXWdf7KA+v+lrv+PlrrOP1nAdwFLqOcHeRzaM8fL+n/TR9b5mz5SbnhZ5294
/V3AEur8QR6H8y7fP8q699L6suXa1fX5S11XHwF/BPwV4Dd/0zzhfM/7q/Vc
aD0T4E+IH+r/oymcY0zhPGcG5yfAkwCP6aPPQ6ZwHjKF8+c5nF+RnjPQcwbn
PICPAG/t6n7NoF8z6NcMzmmncP4zg/OfGZz/gJ7Gr89/ZnD+M4Pzn7C/2fyd
wvnPDM5/ZnD+A3Yzfn3+M4M65wX4yQL8ZAHzAngi4ImAx/TR/rMA/1nAOSfM
C8vTtD5zuD8CfAJ4a1frPwf95+D/CzjPX8B93xz8fwH+D3Y2funnxq/9fwH+
H45Xvi5IPzd+7f8L8H8Yd+OXfm78Wj7T91zmD/r+aw73XzO4/5rDfdYM7r8A
b/ro+6+5vv+y+a7vdyCuGl7fEzGPvv+aQ9wGfuOR9zI2Xrpd4p/D/R3zSP0j
4DG8vj8KebacXN5zFewZ/m6Fvv+a6fssw+t7LtZTnvMbvzy3N359/j+H939m
cG4/h3P4GZzbA9700fcFc30vUFjvwnfjdVyawfkz8+g6/zDO5zz6fiHMT/J9
om6X+Odw7s08+v4CeOI51NXP9X2E9VffO8zhnmKm7x0Mr+8jSJ+lrvO3/Yuu
21/qOn/LcyTe9k2y3t74dX0+4E0u6/ytXcljeY7mWen6cNsPyjrwZAn13kuo
M1/quvEI+OOlrnuPoN0KtFs4/wzlss7f+GU9v9lTyp/e56p6/qf3lbLOH/pl
46Lr/Be6X5afaLsxXtotYR45XgnxrHR9YOEe0FsvCvduoVzXPa50PWEE7Zbq
SS46vK5XBH0KeL+ec6XrPG1eSHy0grpN6G9lpes5jV/y2HwhHln3G4X1Lbkd
ZL1lstT4Qh2RX28J9i/EDX+8llDnvwQ/AXm01P4QLfW4J4BPAG/t6rrWpa7z
j8L7gqzd8Bw176+s84+Wup4/WUD9f3ifkvNLeen8uYz3/Xmp6/lNHykv3B/5
/ryA+v8l1POD3PSX8mSp69hNruvYl1Bvv9R18hHwR8BfAX6L83qeLoB/AfoD
T+G+I/QfbR/gj+YQb2FfUMi7fH3mOl4lzK/n3QL2I9yujktziNsLiP8LqPNf
YL903Aa8tavXiwV8/0V2WEB8W2j7RICPAB8v4Pu7BdpZrzsLve5EC40v7OtD
f9Dr/gLw0+Dequ/k2b3JcPf99z3xA720XxN3L+DJo6mWG092b3We/3cdT3Y/
5cmNR8orE7e++PKplscgN3xWT3Ke/7edPLvPetk973/4wYc7Ts/s3srDm55S
bvjs3srjMbyUW7/8+8F2yf4+P8grY7du+vixu9/x+zUO7hnbTh/JY/LMT0L7
aP4J8E+Bf6blyVTzJ1PNHwN/PNX6R8AfAX8l/z3T8/y/4eRZndsD7/7VL/z6
W5rODlldnIc3fik3nqw+7Xzf0XI8WT2bx288Um7j5ddH5fxSHoO8gP/h193f
/p3n5n6e1VN5ctNHyg2f1VN5/TK8lJv+2Xz05VMtj0Fu88K/N284//frwXJ5
Vp8W2lPymDyLJ+G4a/4J8E+Bf6blyVTzm1zyx8AfT7X+EfBHwF94/9PnH7r8
1tdn6OpG/P6ONI/JszzcH9+Rm+8+/0i3a3i/nqHh8FqfMfRr5PYdnp8bPuP3
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
/89c/694gnX+sjPX/89c/y8erPMXD38XMJt6foNrXJw81v9LH6zzbyfGJY91
/u1kvguYTZ2/wXf3usd1BOve25nr3tUu1+fPXFefDH8y/AfDL39jnsnoaeaL
cNSzNfyt4zf1/ymbfYxs9nOK2T8xPK3h2d5Bi/sh2eyHZLP/PJr9K6dnMXoW
s89j5JORb4rpVzH9KqZfxezTZrP/U8z+TzH7P0bPNpv9n2L2f4rZ/ylm/yeb
/Z9i9n+K2f8xdmuz2f8pps55Mn4yGT+ZzLwwPMnwJMMjfdh/JuM/k9nnNPPi
ct8y6jOa8yMj3xr5ZjT6j0b/0fj/ZPbzJ3PeNxr/n4z/GzuLH/1c/Oz/k/H/
yezzTOznu3w42oH934y7+NHPxc944XOuNJrzr9GcfxVz/jWa86xizr+M/O7/
SOTH869dvKrPd0xc3cWHOt56Hj7/Gk3cNvxN4XOZnb/V7Tr+0ZzfeR7UPxme
3f+4+vxoNOdcI59zyQ58njWa86/C51mS53Muryfu84sf9+3Fz/v/o7n/p5h9
+9Hswxezb2/kpQ+fF4x8LiB/5n1jsy5LnvefPQ/X+Y9m3Tf84sH9893/u7i+
MP9o9r09D59fGJ5mNHX1I59H7OxW52mjOacofO6QRnMe4fSZuc5f/1+4bn/m
On/lOSiv/01Yby9+rs838oeZ6/zVLvIoz2GeW64P1/9BrAMXzvXes6kzn7lu
PBn+Zua692TaPZh2D7Op85+5zl/8WM8veyIueaznlzzX+Zt+NZOp85+4X8pP
2G5eHu3Weh4cr9bx3HJ9oHCuJ7w1dYm3pu7xlusJk2lX8ljvl4w+B6OP5LnO
85brPDUvUF48XLdp+isc6znFjzyaL44H6353dov1DFhv2c4sLx6utzT2b2eW
3+3LxfnCfmLw3X5gxHHcWyPfGnm1y3WtM9f5p5nr+TWPuM5/5jr/S10Q1fNf
/kdj/f9s6vYNrvnu5LHOfxeH6zxzYlzyWM8vea7/n009v8GlP+KX+iiqY9/N
o5pnNvX2M9fJJ8OfDP/B8O/ec4z/05l/MvobHuGof2v4W8O/excv5oE8H0cz
j0aOV63n53k3mf8jvl2OS6OJ25OJ/5Op859svzhuG/nd+EZ+/v7L2WEy8W1i
+yQjn4y82uXv7yZrZ153Jl53dvrEfSped0y7aTLyebHzGPQfjv/829tf/Mt7
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
5PPeDphfXb6zDvj/Aa3fAos=
        "], 
        {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], EdgeForm[None], 
         Specularity[
          GrayLevel[0.2], 30], 
         TagBox[TetrahedronBox[CompressedData["
1:eJws3QXQlWW3h/GP7u5uJA1CpZVSKZWSVlIBwSCUllLKIlRSJaUMwqCUVEAw
CCWVVCmVkuZc6+zrzPxmr/W/15r7edzvO+j5qkin55r2Tvo//i/z//6XnI8k
iD7Z/xJ9CqQ0S4XUnkWWBmnNk9unQwakR0b3o86UuOJ/WaxjJiuyOZfZPjty
ICdyeV9uszzu5zTLi3zmuezzoyAKoJDPF3VhFPG+ws4Udb+QZ9EXQwkUR0nc
YV0KpVHGOmbKopxzpe3j/cvjTtzl/t1m96CCZ5FVRCXzu+wr4z7ci/u9L+oq
qOp+FWeqobpzVe1roCZq4QGf70Gz2t5Xy6yO+7Wdjb4u6qE+HsLDeMSsARp6
FlkjNDZ/yD6+v0fRBI+5H/XjaIpm1jHTHC2ca2of798ST6CV97U2a+P+E2Zt
0c68lX17PIkOeMrni7ojOnlfR2c6u/+UZ9F3QTd0xdN4xro7eqCndcw8i17O
9bCPn7/eeA7Pu/+C2Yvo41lkfdHP/Hn7+P5eQn+87H1RD8BA9wc4MwiDnRto
H+8/BEMxzOd7xWy49w01G+H+cGejH4nRGIVX8Zr1GIzFOOuYGY8Jzo21fx1v
4E285f7bZhMxybPIJmOK+Vv27+A9vIup3hf1NEx3f5ozMzDTuen2s/A+PsCH
Pt9sszne94HZXPfnOBt9/P7Pw3wswEdYaLYIiz2LbAmWmi+wj/f/BB/jU/ej
/gzLsNw6ZlZgpXPL7D/HF/gSX3nfKrPV7n9ptgZrzb+yX4dv8DXW+3xRb8BG
79vgzCb313sW/WZ8iy34Dlutt2E7vreOmR3Y6dx2+/j+fsCP+Mn9n812Ybdn
ke3BXvOf7OP9f8Uv2Od9Ue/HAff3O3MQh5w7YH8Yv+F3HPH5jpod877fzY67
f8zZ6E/gJP7An/gLp8xO44xnkZ3FOfM/7ePn7x/8jX/dj/o8LuCidcxcwmXn
LtjH9/cfruCq910zu+7+FbMbuGl+1T7e/zZuIf4wP2edhDppksR9UcdMsiSJ
/f95Fn1ypEBKpEJqpDFLi3SeRZYeGcxT2WdEZmRCFvejzopsyG4dMzmQ07ls
9rmQG3mQ1/vymeV3P49ZARQ0z2tfCEVQGEV9vqiLobj3FXOmhPtFPYs+/vy7
g8+SKIXS1mVQFuWsY6Y87nSurH28/124G/e4X8GsIip5Flll3Gt+j/19qIL7
UdX7oq6G6u5Xc6YGajpX3b4WHsCDqO3z1TGr630PmtVzv66z0cfvf30+H8LD
eAQNkiSyhmjkWWSN0cT8Yfv4/h7Do3jc/aibohmaW8dMC7R0rpl9vP8TaIXW
3tfGrK37rczaob15a/sOeApPoqPPF3UndPa+Ts50cb+jZ9F3xdPohmfQ3boH
euJZ65jphd7O9bSPn7/n8DxecP9Fsz7o61lk/dDf/AX7+P5exksY4H1RD8Qg
9wc6MxhDnBtkH+8/FMPwis833GyE9w0zG+n+CGejH4VXMRqvYYz1WIzDeOuY
mYDXnRtn/wbexFt42/2JZpMw2bPIpuAd87ft38VUvIdp3hf1dMxwf7ozMzHL
uRn27+MDfIjZPt8cs7ne96HZPPfnOht9/P3ffD4X4CMsxKIkiWwxlngW2VJ8
bP6Rfbz/p/gEn7kf9TIsxwrrmFmJz51bbv8FvsRXWOV9q83WuP+V2VqsM19l
/zXW4xts8Pmi3ohN3rfRmc3ub/As+vjz71s+t+A7bLXehu343jpmdmCnc9vt
4/v7AT/iJ/d/NtuF3Z5Ftgd7zX+yj/f/Fb9gn/dFvR8H3N/vzEEccu6A/WH8
ht9xxOc7anbM+343O+7+MWejj9//EziJP/An/jI7hdOeRXYGZ83/sI+fv79x
Dv+4H/W/OI8L1jFzEZecO28f399l/Icr3nfV7Jr7/5ldxw3zK/bx/rdwE7d9
vqjjH+CTJE3cF3XMJE2a2I+5OIs+GVIgOVIilXVqpEFa65hJh/TOpbHPgIzI
hMzuZzHLimyeRZYdOcwz2+dEbuRCHu+LOi/yuZ/Xmfwo4Fw++4IohMIo4vMV
NSvmfYXNirtfzNnoS6Ak7kAplEYZs7Io51lk5XGneSn7eP+7cRfucT/qCqiI
StYxUxn3OlfR/j7cjyqo6n3VzKq7X8WsBmqaV7WvhQfxAGr7fFHXQV3vq+NM
PfdrexZ9fTyMh/AIGlg3RCM0to6ZJnjUuUb28f09hsfR1P1mZs3RwrPIWuIJ
86b28f6t0QptvC/qtmjnfltn2qODc+3sn8RT6IhOPl9nsy7e19Gsq/tdnI2+
G57GM+iOHuhp9ix6eRZZ/D/OnjPvbh8/fy/gebzoftR90Bf9rGOmP15yrq99
fH8vYwAGet8gs8HuDzAbgqHmA+3j/V/BMAz3+aIegZHeN8KZUe4P9yz6///n
fz5fxWsYg7FJE9k4jPcssgl43fw1+zfwFt7E2+5HPRGTMNk6ZqbgHecm2b+L
9zAV07xvutkM96eazcQs82n27+NDfIDZPl/UczDX++Y4M8/92Z5FH7//CzAf
H2Gh9SIsxhLrmFmKj51bbB/v/wk+xWfuLzNbjhWeRbYSn5t/Zv8FvsKXWOV9
Ua/GGvdXO7MW65xbY/81vsF6bPD5Nppt8r71Zpvd3+Rs9FvwLb7DVmzDdrPv
scOzyHbiB/Ot9vH9/YQf8bP7Ue/Cbuyxjpm9+MW53fbx/r9iH/Z73wGzg+7v
MzuEw+b77X/DEfyOoz5f1Mdw3PuOOXPC/aOeRX8Sf+IP/IVT1qdxBmetY+Yc
/nbujH38/P2Df3He/QtmF3HJs8gu4z/z8/bx/V3FFVzzvqiv44b71525iVvO
3bCP97+d9H////+kT5Is8XxJkyWyZMkS98VZZMmTJfaTORt9CqRCSqRGGuu0
SIf01jGTARmdS2efCZmRBVndz2aWHTk8iywncplntc+NvMiDfN4XdX4UcD+/
MwVRyLkC9oVRBEVRzOcrblbC+4qalXS/hLPRx59/d/BZCqVRBmWTJbJyKO9Z
ZHfiLvPS9vH+9+BuVHA/6oqohMrWMXMv7nOukv39qIKqqOZ91c1quF/VrCZq
mVezfwC18SDq+HxR10U976vrTH3363gWffz+P8znQ3gEDawbohEaW8dMEzzq
XCP7+P4ew+No6n4zs+Zo4VlkLfGEeVP7eP/WaIU23hd1W7Rzv60z7dHBuXb2
T+IpdEQnn6+zWRfv62jW1f0uzkbfDU/jGXRHD/Q0exa9PIusN54z724fP38v
4Hm86H7UfdAX/axjpj9ecq6vfXx/L2MABnrfILPB7g8wG4Kh5gPt4/1fwTAM
9/miHoGR3jfCmVHuD/cs+tF4Fa9hDMZinNl4TPAsstfxhvkY+zfxNt7CRPej
noTJmGIdM+/gXecm27+HqZiG6d43w2ym+9PMZuF98+n2H2A2PsQcny/quZjn
fXOdme/+HM+ij7//+4jPBViIRdaLsQRLrWPmY3zi3BL7eP9P8RmWub/cbAVW
ehbZ5/jCfJn9l1iFr7Da+6Jeg7Xur3FmHb52bq39N1iPDdjo820y2+x9G8y2
uL/Z2ejjz79v+fwOW7EN25Mlsu+xw7PIduIH86328f39hB/xs/tR78Ju7LGO
mb34xbnd9vH+v2If9nvfAbOD7u8zO4TD5vvtf8MR/I6jPl/Ux3Dc+445c8L9
o55FH7//f8RfB/yJv6xP4TTOWMfMWZxz7rR9/Pz9jX/wr/vnzS7gomeRXcJl
83/t4/u7gv9w1fuivobr7l9z5gZuOnfdPt7/Fm4j/kX5eL4kyRNZ0uSJ+26b
JUue2I/8f/bJkQIpkQqpkcYsLdJ5Fll6ZDBPZZ8RmZEJWdyPOiuyIbt1zORA
Tuey2edCbuRBXu/LZ5bf/TxmBVDQPK99IRRBYRT1+aIuhuLeV8yZEu4X9Sz6
kiiFO1AaZazLohzKW8fMnbjLuXL28f534x5UcL+iWSVU9iyye3GfeQX7+1EV
VVDN+6KujhruV3emJmo5V8P+ATyI2qjj89U1q+d9tc3qu1/P2egfwsN4BA3Q
EI3MGqOJZ5E9isfMG9jH99cUj6OZ+1E3Rwu0tI6ZJ9DKuRb28f6t0QZtva+d
WXv325h1wJPmbe2fQid0RGefL+ou6Op9XZzp5n5nz6J/Gt3xDHqgp/Wz6IXe
1jHzHJ53rpd9/Py9gBfRx/2+Zv3Q37PIXsLL5n3s4/sbiAEY5H1RD8YQ9wc7
MxTDnBtiH+//CoZjhM830myU9w03G+3+KGejj3/97zU+X8UYjLUeh/GYYB0z
r+MN58bbv4m38DYmuj/JbDKmeBbZO3jXfKL9e5iGqZjufVHPwEz3ZzgzC+87
N9P+A3yI2Zjj8801m+d9s83muz/P2ejj938BPsJCLMJisyVY6llkH+MT84X2
8f6f4VMscz/q5ViBldYx8zm+cG6F/Zf4Cquw2vvWmK11f5XZOnxtvtr+G2zA
emz0+aLehM3et8mZLe5v9Cz6b7EV32Ebtlt/jx3YaR0zP+BH53bYx/f3E37G
Lvd3m+3BXs8i+wW/mu+yj/ffj3044H1RH8Qh9w86cxi/OXfI/nccwVEc8/mO
m53wvqNmJ90/4Wz0f+BP/IVTOI0zZmdxzrPI/sY/5qfs4+fvPP7FBfejvohL
uGwdM//hinOX7OP7u4pruO59N8xuun/N7BZum1+3j/dPEv+mOyRNkXi+qJMh
eYrEfVHHTIoUif2knkUf//yfks9USI00SJsikaVDes8iy4CM5qntMyELMiOr
+1FnQ3bksI6ZnMjlXHb73MiDvMjnffnNCrif16wgCpnnsy+MoiiCYj5f1MVR
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
Zu3db2PWAU+at7V/Cp3QEZ19vqi7oKv3dXGmm/udPYv+aXTHM+iBntbPohd6
W8fMc3jeuV728fP3Al5EH/f7mvVDf88iewkvm/exj+9vIAZgkPdFPRhD3B/s
zFAMc26Ifbz/KxiOET7fSLNR3jfcbLT7o5yNPv75/zU+X8UYjLUeh/GYYB0z
r+MN58bbv4m38DYmuj/JbDKmeBbZO3jXfKL9e5iGqZjufVHPwEz3ZzgzC+87
N9P+A3yI2Zjj8801m+d9s83muz/P2ejj938BPsJCLMJisyVY6llkH+MT84X2
8f6f4VMscz/q5ViBldYx8zm+cG6F/Zf4Cquw2vvWmK11f5XZOnxtvtr+G2zA
emz0+aLehM3et8mZLe5v9Cz6b7EV32Ebtlt/jx3YaR0zP+BH53bYx/f3E37G
Lvd3m+3BXs8i+wW/mu+yj/ffj3044H1RH8Qh9w86cxi/OXfI/nccwVEc8/mO
m53wvqNmJ90/4Wz0f+BP/IVTOI0zZmdxzrPI/sY/5qfs4+fvPP7FBfejvohL
uGwdM//hinOX7OP7u4pruO59N8xuun/N7BZum1+3j/dPEv8ltEiaLvF8USdD
8nSJ+6KOmRTpEvtJPYs+JVIhNdIgLdKZpUcGzyLLiEzmaewzIyuyIJv7UWdH
DuS0jplcyO1cDvs8yIt8yO99BcwKup/PrBAKm+e3L4JiKIriPl/UJVDS+0o4
c4f7xT2LPv78K81nKZRBWetyKI87rWPmLtztXHn7eP97UAEV3a9kVhn3ehbZ
fbjfvKJ9FVRDVVT3vqhroKb7NZyphQecq2n/IGqjDur6fPXM6ntfHbOH3K/v
bPTx+/8wn4+gARqiUbpE1hhNPIvsUTxm3sA+vr+meBzN3I+6OVqgpXXMPIFW
zrWwj/dvjTZo633tzNq738asA540b2v/FDqhIzr7fFF3QVfv6+JMN/c7exb9
0+iOZ9ADPa2fRS/0to6Z5/C8c73s4+fvBbyIPu73NeuH/p5F9hJeNu9jH9/f
QAzAIO+LejCGuD/YmaEY5twQ+3j/VzAcI3y+kWajvG+42Wj3Rzkb/asYg9cw
FuOsx2MCXreOmTfwpnMT7N/C25iISe5PNpuCdzyL7F28Zz7JfiqmYxpmeF/U
MzHL/ZnOvI8PnJtl/yFmYw7m+nzzzOZ73xyzBe7Pdzb6+Pu/j/hciEVYjCXp
EtlSfOxZZJ/gU/NF9vH+y/AZlrsf9QqsxOfWMfMFvnRupf1XWIXVWON9a83W
ub/a7Gt8Y77Gfj02YgM2+XxRb8YW79vszLfub/Is+vjzbyuf32Ebtlt/jx3Y
aR0zP+BH53bYx/f3E37GLvd3m+3BXs8i+wW/mu+yj/ffj3044H1RH8Qh9w86
cxi/OXfI/nccwVEc8/mOm53wvqNmJ90/4Wz08fv/B/7EXziF02ZncNazyM7h
b/O/7OPn71/8g/PuR30BF3HJOmYu4z/nLtrH93cFV3HN+66b3XD/qtlN3DK/
Zh/vH/+F+7f5TJI+8XxRJ6VOlj5xX9Qxkzx9Yj+JZ9GnQCqkRGqksU6LdEhv
HTMZkNG5dPaZkBlZkNX9bGbZkcOzyHIil3lW+9zIizzI531R50cB9/M7UxCF
nCtgXxhFUBTFfL7iZiW8r6hZSfdLOBv9HSiF0iiDsihnVh53ehbZXbjbvIx9
vH8F3IOK7kddCZVxr3XM3If7natsXwVVUQ3Vva+GWU33q5nVwgPm1e0fRB3U
Rl2fL+p6qO999Zx5yP26nkX/MBrgETREI+vGaIJHrWPmMTzuXBP7+P6aohma
u9/CrCWe8CyyVmht3tw+3r8t2qCd90XdHh3cb+/Mk3jKuQ72HdEJndHF5+tq
1s37Ops97X43Z6N/Bt3RAz3xLHqZ9cZznkX2PF4w72kfP3998CL6uh91P/TH
S9Yx8zIGONffPr6/gRiEwd43xGyo+4PMhuEV88H28f4jMBwjfb6oR2G0941y
5lX3R3oWffzrf6/xOQZjMQ7j0yeyCXjds8jewJvmY+3fwkS8jUnuRz0ZU/CO
dcy8i/ecm2I/FdMwHTO8b6bZLPenm72PD8xn2H+IOZiNuT5f1PMw3/vmObPA
/bmeRR+//wvxERZhsfUSLMXH1jHzCT51bql9vP9nWIbl7q8wW4nPPYvsC3xp
vtz+K6zGKqzxvqjXYp37a535Gt84t85+PTZgIzb5fJvNtnjfRrNv3d/ibPTf
YSu2YTu+xw6znfjBs8h+xE/m2+3j+9uFn7Hb/aj3YC9+sY6ZX7HPub328f77
cQAHve+Q2WH3D5j9ht/ND9ofwTEcxXGfL+oTOOl9J5z5w/3jnkX/J07hL5zG
GeuzOIe/rWPmH/zr3Dn7+Pk7jwu46P4ls8v4z7PIruCq+UX7+P6u4xpueF/U
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
imeRvYN3zSfav4dpmIrp3hf1DMx0f4Yzs/C+czPtP8CHmI05Pt9cs3neN9ts
vvvznI0+/v5vAZ8fYSEWYXGmRLYESz2L7GN8Yr7QPt7/M3yKZe5HvRwrsNI6
Zj7HF86tsP8SX2EVVnvfGrO17q8yW4evzVfbf4MNWI+NPl/Um7DZ+zY5s8X9
jZ5FH3/+fcfnt9iKbdbb8T12WMfMTvzg3Pf28f39iJ/ws/u7zHZjj2eR7cUv
5j/bx/vvw6/Y731RH8BB9w84cwiHnTto/xt+xxEc9fmOmR33viNmJ9w/7mz0
8ft/En/EXwv8hVNmp3HGs8jO4pz5n/bx8/cP/sa/7kd9Hhdw0TpmLuGycxfs
4/v7D1dw1fuumV13/4rZDdw0v2of738bt/C/zInnizoJddLMifuijplkmRP7
//Ms+uRIgZRIhdRIY5YW6TyLLD0ymKeyz4jMyIQs7kedFdmQ3TpmciCnc9ns
cyE38iCv9+Uzy+9+HrMCKGie174QiqAwivp8URdDce8r5kwJ94t6Fn1JlMId
KI0y1mVRDuWtY+ZO3OVcOft4/7txDyq4X9GsEip7Ftm9uM+8gv39qIoqqOZ9
UVdHDferO1MTtZyrYf8AHkRt1PH56prV877aZvXdr+ds9A/hYTyCBmiIRmaN
0cSzyB7FY+YN7OP7a4rH0cz9qJujBVpax8wTaOVcC/t4/9Zog7be186svftt
zDrgSfO29k+hEzqis88XdRd09b4uznRzv7Nn0T+N7ngGPdDT+ln0Qm/rmHkO
zzvXyz5+/l7Ai+jjfl+zfujvWWQv4WXzPvbx/Q3EAAzyvqgHY4j7g50ZimHO
DbGP938FwzHC5xtpNsr7hpuNdn+Us9G/ijF4DWMxzno8JuB165h5A286N8H+
LbyNiZjk/mSzKXjHs8jexXvmk+ynYjqmYYb3RT0Ts9yf6cz7+MC5WfYfYjbm
YK7PN89svvfNMVvg/nxno4/f/4+wEIuwGEvMluJjzyL7BJ+aL7KP91+Gz7Dc
/ahXYCU+t46ZL/Clcyvtv8IqrMYa71trts791WZf4xvzNfbrsREbsMnni3oz
tnjfZme+dX+TZ9F/h23Yiu343noHduIH65j5ET85t9M+vr+fsQu73d9jthe/
eBbZr9hnvts+3v8A9uOg90V9CIfdP+TMb/jducP2R3AUx3Dc5zthdtL7jpn9
4f5JZ6P/E3/hFE7jDM6ancPfnkX2D/41P20fP38XcB4X3Y/6Ei7jP+uYuYKr
zl22j+/vGq7jhvfdNLvl/nWz2/hflkR+wz7ePylZEiTLkni+qJMjRZbEfVHH
TMosif1knkWfCqmRBmmRDunNMiCjZ5FlQmbztPZZkA1Zkd39qHMgJ3JZx0xu
5HEup31e5EN+FPC+gmaF3M9vVhhFzAvYF0VxFEMJny/qkrjD+0o6U8r9Ep5F
H3/+leGzNMqinHV53Im7rGPmbtzj3J328f4VUBGV3K9sdi/u8yyy+1HFvJJ9
VVRHNdTwvqhropb7NZ15AA86V8u+NuqgLur5fPXNHvK+umYPu/+Qs9HH7/8j
fDZAQzRC4yyJrAke9Syyx/C4eUP7+P6aoSmaux91C7TEE9Yx0wqtnWtpH+/f
Bm3Rzvvam3Vwv63Zk3jKvJ19R3RGJ3Tx+aLuim7e19WZp93v4ln0z6AHuqMn
nrXuhd54zjpmnscLzvW2j5+/F9EHfd3vZ9YfL3kW2csYYN7XPr6/QRiIwd4X
9RAMdX+IM8PwinND7eP9h2MERvp8o8xGe98Is1fdH+1s9K9hLMZgHMZbT8Dr
eMM6Zt7EW869bv82JmISJrs/xewdvOtZZO9hqvlk+2mYgemY6X1Rz8L77s9y
5gN86Nz79rMxB3Mxz+ebb7bA++aafeT+Amejj7//W8jnIizGEizNksg+xiee
RfYpPjNfbB/vvxzLsML9qFfic3xhHTNf4ivnPrdfhdVYg7Xet87sa/fXmH2D
9eZr7TdgEzZis88X9RZ8631bnPnO/c2eRR9//m3jcyu243vrHdiJH6xj5kf8
5NxO+/j+fsYu7HZ/j9le/OJZZL9in/lu+3j/A9iPg94X9SEcdv+QM7/hd+cO
2x/BURzDcZ/vhNlJ7ztm9of7J52NPn7//8RfOIXTOGN2Fuc8i+xv/GN+yj5+
/s7jX1xwP+qLuITL1jHzH644d8k+vr+ruIbr3nfD7Kb718xu4bb5dft4/yRZ
+XMdSbMmni/qZEieNXFf1DGTImtiP6ln0cf//l8qPlMiNdJYp0U6pLeOmQzI
6Fw6+0zIjCzI6n42s+zI4VlkOZHLPKt9buRFHuTzvqjzo4D7+Z0piELOFbAv
jCIoimI+X3GzEt5X1Kyk+yWcjf4OlEJplEFZlDMrjzs9i+wu3G1exj7evwLu
QUX3o66EyrjXOmbuw/3OVbavgqqohureV8OspvvVzGrhAfPq9g+iDmqjrs8X
dT3U9756zjzkfl3Pon8YDfAIGqKRdWM0waPWMfMYHneuiX18f03RDM3db2HW
Ek94FlkrtDZvbh/v3xZt0M77om6PDu63d+ZJPOVcB/uO6ITO6OLzdTXr5n2d
zZ52v5uz0T+D7uiBnngWvcx64znPInseL5j3tI+fvz54EX3dj7of+uMl65h5
GQOc628f399ADMJg7xtiNtT9QWbD8Ir5YPt4/xEYjpE+X9SjMNr7Rjnzqvsj
PYs+/vn/NT7HYCzGYXzWRDYBr3sW2Rt403ys/VuYiLcxyf2oJ2MK3rGOmXfx
nnNT7KdiGqZjhvfNNJvl/nSz9/GB+Qz7DzEHszHX54t6HuZ73zxnFrg/17Po
4/d/IT7CIiy2XoKl+Ng6Zj7Bp84ttY/3/wzLsNz9FWYr8blnkX2BL82X23+F
1ViFNd4X9Vqsc3+tM1/jG+fW2a/HBmzEJp9vs9kW79to9q37W5yN/jtsxTZs
x/fYYbYTP3gW2Y/4yXy7fXx/u/Azdrsf9R7sxS/WMfMr9jm31z7efz8O4KD3
HTI77P4Bs9/wu/lB+yM4hqM47vNFfQInve+EM3+4f9yz6P/EKfyF0zhjfRbn
8Ld1zPyDf507Zx8/f+dxARfdv2R2Gf95FtkVXDW/aB/f33Vcww3vi/ombrl/
05nb+F+2xNwt+3j/JGRJkSxb4vmSZ0tkKbIl7ouzyFJmS+yncDb6VEiD1EiL
dNbpkQEZrWMmEzI7l8E+C7IiG7K7n8MsJ3J5Fllu5DHPbp8X+ZEPBbwv6oIo
5H5BZwqjiHOF7IuiGIqjhM9X0uwO7ytuVsr9O5yNPv78K81nGZRFOZTPlsju
xF2eRXY37jEvax/vXxEVUMn9qCvjXtxnHTP3o4pz99pXRTVURw3vq2lWy/3q
Zg/gQfMa9rVRF3VQz+eLuj4e8r76zjzsfj3Poo/f/wZ8PoKGaGTdGE3wqHXM
PIbHnWtiH99fUzRDc/dbmLXEE55F1gqtzZvbx/u3RRu0876o26OD++2deRJP
OdfBviM6oTO6+Hxdzbp5X2ezp93v5mz0z6A7eqAnnkUvs954zrPInscL5j3t
4+evD15EX/ej7of+eMk6Zl7GAOf628f3NxCDMNj7hpgNdX+Q2TC8Yj7YPt5/
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
buRFHuTzvqjzo4D7+Z0piELOFbAvjCIoimI+X3GzEt5X1Kyk+yWcjf4OlEJp
lEFZlDMrjzs9i+wu3G1exj7evwLuQUX3o66EyrjXOmbuw/3OVbavgqqohure
V8OspvvVzGrhAfPq9g+iDmqjrs8XdT3U9756zjzkfl3Pon8YDfAIGqKRdWM0
waPWMfMYHneuiX18f03RDM3db2HWEk94FlkrtDZvbh/v3xZt0M77om6PDu63
d+ZJPOVcB/uO6ITO6OLzdTXr5n2dzZ52v5uz0T+D7uiBnngWvcx64znPInse
L5j3tI+fvz54EX3dj7of+uMl65h5GQOc628f399ADMJg7xtiNtT9QWbD8Ir5
YPt4/xEYjpE+X9SjMNr7RjnzqvsjPYs+/v1/r/E5BmMxDuNzJrIJeN2zyN7A
m+Zj7d/CRLyNSe5HPRlT8I51zLyL95ybYj8V0zAdM7xvptks96ebvY8PzGfY
f4g5mI25Pl/U8zDf++Y5s8D9uZ5FH7//C/ERFmGx9RIsxcfWMfMJPnVuqX28
/2dYhuXurzBbic89i+wLfGm+3P4rrMYqrPG+qNdinftrnfka3zi3zn49NmAj
Nvl8m822eN9Gs2/d3+Js9N9hK7ZhO77HDrOd+MGzyH7ET+bb7eP724Wfsdv9
qPdgL36xjplfsc+5vfbx/vtxAAe975DZYfcPmP2G380P2h/BMRzFcZ8v6hM4
6X0nnPnD/eOeRf8nTuEvnMYZ67M4h7+tY+Yf/OvcOfv4+TuPC7jo/iWzy/jP
s8iu4Kr5Rfv4/q7jGm54X9Q3ccv9m87cxv9yJeZu2cf7JyFLimS5Es+XPFci
S5ErcV+cRZYyV2I/hbPRx7/+l5rPVEiDtNbpkB4ZrGMmIzI5l94+M7IgK7K5
n90sB3J6Flku5DbPZp8H+ZAX+b0v6gIo6H4BZwqhsHMF7YugKIqhuM9Xwqyk
9xUzu8P9ks5GH3/+leKzNMqgLMrlSmTlcadnkd2Fu83L2Mf7V8A9qOh+1JVQ
Gfdax8x9uN+5yvZVUBXVUN37apjVdL+aWS08YF7d/kHUQW3U9fmirof63lfP
mYfcr+tZ9PH7/0j8dUADNLRuhMZoYh0zj+Ix5xrbx/f3OJqimfvNzVqgpWeR
PYFW5s3s4/3boDXael/U7dDe/XbOdMCTzrW3fwod0Qmdfb4uZl29r5NZN/e7
Ohv903gG3dEDPfGsWS/09iyy5/C8eQ/7+Pl7ES+gj/tR90U/9LeOmZfwsnP9
7OP7G4CBGOR9g82GuD/QbCiGmQ+yj/cfjlcwwueLeiRGed9IZ0a7P8Kz6OOf
/1/l8zWMwViMy5XIxmOCZ5G9jjfMx9i/ibfxFia6H/UkTMYU65h5B+86N9n+
PUzFNEz3vhlmM92fZjYL75tPt/8As/Eh5vh8Uc/FPO+b68x89+d4Fn38/d9H
fC7AQiyyXowlWGodMx/jE+eW2Mf7f4rPsMz95WYrsNKzyD7HF+bL7L/EKnyF
1d4X9RqsdX+NM+vwtXNr7b/BemzARp9vk9lm79tgtsX9zc5GH3/+fcvnd9iK
bdieK5F9jx2eRbYTP5hvtY/v7yf8iJ/dj3oXdmOPdczsxS/O7baP9/8V+7Df
+w6YHXR/n9khHDbfb/8bjuB3HPX5oj6G4953zJkT7h/1LPr4/f8DJ+OvBf6y
PoXTOGMdM2dxzrnT9vHz9zf+wb/unze7gIueRXYJl83/tY/v7wr+w1Xvi/oa
rrt/zZkbuOncdft4/1u4jf/lTjxfktyJLGnuxH23zZLlTuxH/j/75EiJFEiF
1NZpkBbprGMmPTI4l9Y+IzIhM7K4n9UsG7J7FlkO5DTPYp8LeZAbeb0v6nzI
734+ZwqgoHP57QuhMIqgqM9XzKy49xUxK+F+cWejL4k7UAqlUQZlzcqhvGeR
3Ym7zEvbx/vfg7tRwf2oK6ISKlvHzL24z7lK9vejCqqimvdVN6vhflWzmqhl
Xs3+AdTGg6jj80VdF/W8r64z9d2v41n0D+ERPIwGaGjdCI3RxDpmHsVjzjW2
j+/vcTRFM/ebm7VAS88iewKtzJvZx/u3QWu09b6o26G9++2c6YAnnWtv/xQ6
ohM6+3xdzLp6Xyezbu53dTb6p/EMuqMHeuJZs17o7Vlkz+F58x728fP3Il5A
H/ej7ot+6G8dMy/hZef62cf3NwADMcj7BpsNcX+g2VAMMx9kH+8/HK9ghM8X
9UiM8r6Rzox2f4Rn0b+K1zAGYzEO480m4HXPInsDb5qPtX8LE/E2Jrkf9WRM
wTvWMfMu3nNuiv1UTMN0zPC+mWaz3J9u9j4+MJ9h/yHmYDbm+nxRz8N875vn
zAL353oWffz+L8RHWITF1kuwFB9bx8wn+NS5pf/X0l1Ha1luaxh3E4oCBiBK
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
8CyyJ/GUeTH7p1EKJVHa+6Iug7Lul3HmGTzrXFn7ciiPCqjo81Uye877Kpg9
7/5zzkYfv/8v8FkZVfAiXsqSyKriZc8iewWvmlexj++vGl5DdfejroGaeN06
Zt5ALedq2sf710Yd1PW+emb13a9j9ibeMq9r/zYaogEa+XxRN0YT72vszDvu
N/Is+nfRFO+hGZpbt0BLvG8dMx/gQ+da2sfPXyu0Rhv325q1w0eeRfYxPjFv
Yx/fX3t8ig7eF3VHdHK/ozOfobNznezj/bugK7r5fN3NenhfV7PP3e/hbPRf
oCe+RC/0tu6DvvjKOma+xjfO9bXvh/74Ft+5P8Dse/zgWWQ/4ifz7+x/xiAM
xGDvi3oIfnF/iDO/Yqhzv9gPw3CMwEifb5TZaO8bYTbG/dHORh///DeWz3EY
j98wIUsim4jfPYvsD/xpPt4+3n8yJmGK+1FPxTRMt46ZGZjp3DT7WZiNOZjr
ffPM5rs/x+wv/G0+134BFmEhFvt8US/BUu9b4swy9xd7Fn38/VvB53KsxCrr
1ViDtdYxsw7rnVtjH9/fBmzEJvc3m23BVs8i24bt5pvs4/13Ygd2eV/Uu7HH
/d3O7MU+5/bY78cBHMQhn++w2RHvO2h21P0jzkYfv///4BiO4wROmp3Cac8i
O4Oz5sft4+fvHP7FefejvoCLuGQdM5dxxbmL9vH9/YeruOZ9181uuH/V7CZu
mV+zj/f/X1b+riNZ1sTzRZ0cKbIm7os6ZlJmTewn8yz6+P//dweftyMV7rS+
C6mRxjpm0uJu51Lb34N7cR/SuZ/eLAPu9yyyjHjAPJ39g8iMTMjifVFnRZL7
WZ3JhuzOJdnnwEPIiVw+X26zPN6X0yyv+3mcjT4fHsYjyI8CKGhWCIU9i+xR
PGae3z7evwgeR1H3oy6G4ihhHTNP4Ennits/hadREqW8r7RZGfdLmpXFM+al
7J9FeZRDBZ8v6oqo5H0VnXnO/QqeRf88KuMFVMGL1i+hKl62jplX8KpzVe3j
+3sN1VDd/RpmNfG6Z5G9gVrm1e3j/eugNup6X9T1UN/9es68ibecq2//Nhqg
IRr5fI3NmnhfQ7N33G/ibPTv4j00RTM0Rwuzlnjfs8g+wIfmzezj5681WqGN
+1G3RTt8ZB0zH+MT59rZx/f3Kdqjg/d1NOvkfnuzz9DZvIN9vH9XdEE3ny/q
7ujhfd2d+dz9bp5FH//93xd8fome6IXeWRNZH/T1LLKv8LV5T/tv0B/98K37
UX+HAfjeOmZ+wI/ODbD/CT9jIAZ532CzIe4PNPsFv5oPsh+K4RiGET5f1CMx
yvtGOjPa/RGeRR+//2MxBuMw3vo3TMBE65j5HX84N8E+3v9PTMJk96eYTcU0
zyKbjhnmk+1nYjZmYY73RT0X89yf68x8/OXcPPu/sQALscjnW2y2xPsWmi11
f4mz0S/DcqzASqzCarM1WOtZZOuw3nylfXx/G7EBm9yPejO2YKt1zGzDdue2
2Mf778BO7PK+3WZ73N9pthf7zHfZ78dBHMAhny/qwzjifYedOer+Ic+i/wfH
cQwncNL6FE7jjHXMnMW/zp22j5+/cziPC+5fNLuEy55FdgX/mV+wj+/vGq7i
uvdFfQM33b/hzC3clpSYu2kf7/8/smRInpR4vhRJiSxlUuK+OIvs9qTEfkpn
o///f/+PT9yJu6xTIw3SWsfM3bjHuTT29+I+pEN69zOY3Y+MnkX2AB40T2+f
CVmQGVm9L+okZHM/yZnsyOFcNvuHkBO5kNvny2OW1/tymeVzP6+z0cffv4f5
fAT5UQAFkxJZIRT2LLJH8Zh5fvt4/yJ4HEXdj7oYiqOEdcw8gSedK27/FJ5G
SZTyvtJmZdwvaVYWz5iXsn8W5VEOFXy+qCuikvdVdOY59yt4Fn38/r8Q/zmg
MqpYv4iXUNU6Zl7GK869ZB/f36t4DdXcr25WAzU9i+x1vGFezT7evzZqoY73
RV0X9dyv60x9vOlcPfu38DYaoKHP18issfc1MGvifmNno38H7+I9NEUzNDdr
gZaeRfY+PjBvah8/f63wIVq7H3UbtEU765j5CB8719Y+vr9P8Cnae18Hs47u
f2rWCZ+Zt7eP9++Czujq80XdDd29r5szPdzv6ln0n+MLfIme6IXeZn3Q17PI
vsLX5j3tv0F/9MO37kf9HQbge+uY+QE/OjfA/if8jIEY5H2DzYa4P9DsF/xq
Psh+KIZjGEb4fFGPxCjvG+nMaPdHeBZ9/PPfWD7HYBzGW/+GCZhoHTO/4w/n
JtjH+/+JSZjs/hSzqZjmWWTTMcN8sv1MzMYszPG+qOdinvtznZmPv5ybZ/83
FmAhFvl8i82WeN9Cs6XuL3E2+vj7t4zP5ViBlViVlMhWY41nka3FOvMV9vH9
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
x0yyHIn9mIuz6P8PUC7EYA==
           "]],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics3D",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    Boxed->False,
    DefaultBaseStyle->{
     "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
    Lighting->{{"Ambient", 
       GrayLevel[0.45]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{2, 0, 2}]}, {"Directional", 
       GrayLevel[0.33], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.3], 
       ImageScaled[{0, 2, 2}]}},
    ViewPoint->{2.88, -1.75, 0.29},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnXu4plV53l/33jN7DgwMzAwIeAAPiOCBJMaSxKakSZPmZNFUk6ZtCtEY
cyJENFVRO0OrYCOMgAhycMaEgxBhFERBogN4iZqCQzhEQS9HDkkIKjv1sppU
6fT53eu+117f6NU/+5dcF998+/ve7z2s9azncD/386xfPvG1r/6tPzjxtb/z
ihMP+7nXnHjyq3/nFacc9rN/+Jr6aP4J0/SE5/D/YdNCvd8zTd/z8txp+sH7
H7z/f71/s17nj3veqz6y/vGLf09/faB99Ua9Lh5zz56f3HbBdffvedXrz91z
8Ue/tHTD5+c2P37kKw978pkbpz9vh75er2uPf/+n/nHHKW+7fM9pF9yg/8/9
wC5+ovdXffqxpfp/573/9JxjPrHuzdOV7ad/rNf1J1/9l/+4+5WvO3vPmZd/
Wle65vZv6mfX3vm/d11z+7eWTvyjP9lz+a1/r+8+cu8eTs2pTt7nRW/hxi9v
Zzul3Yju+fVnXrPnTWd/UGfhrNxI/WrXLQ/ut3TK2y7V5xdce+80x3mnVbvO
vuqOpfOuuUufc6X6Ts+6dMhLj7lh3ZsvbVf4I70eoEfdcv7H9pyx7WbdUz1a
zpgrLV1313d3X3nbY0t8Xp/t+KtvHrF04fX37T7ptPdqaOq3c7qFlTqER67D
dt7zT885/iVnP7z+6xf/3vvaRf9Qr085+cz3/9XuLe++Yc9JWy7RCbgYj1a/
XNp+0wO7Tjnj8j2ve/sVe37jpNMZuHynm2AA+S4DyOP9xZdW6ZE5nkfm+w/V
7875wK7dH//KPpu/06Z5W7uL39frag3uGe/7lAaXX7zvLx7MVOn+33nlHTWo
9e30xHy2++3bb935uW88fecfbL6EK++86rPf2H3JjV/Wd/VEfKdJ4cl4qjon
g7/zTz/xt3tOrevUHelpriwpuvSWRxgjJuWSdme/q9dVmpSzrrhdz8NZuCvO
dNktj/DccwzatKibYvjqa2Ro893/9BzEdtdbzru+brweadqknzMkNa+7rr97
Dze49b7pBXrwPMAZ22/VAJxjMa9/l+oG+zCeX8fd8Y2nS0ZrMqcL292+uq25
LvIlBnXZerrpWRIjRKrueufH7l/UqfgbcaploDHgier91r9d9zMaM76v0d79
4bsf3/1nN//t7te/48+12s7YfguPuvmhNcdtfct5H9UjM/un1/G5RW57e53v
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
TRbZDBlMO0gAiuKSEyV6EiQ8NbVMKdHO6CuNAjfu+tdLLsedAMOcdgO2LgsU
GZQ9bZdbjCio9n2oORAo2FDX+RO8RbD+e8f4ZAt9yVTggeUfaWhl2hSqzQ+f
OXdst2hdyHRhL6tKHyJoGnwbUZLpw2FfbhOrS8s0OhgdmjNlFvZmxck93toe
4MTlIU2QPnL2+gaFI9muJnhoFbtPFxb0BI2gt7SknNYAjMOrG7lDUXlp2+aO
yWfcCxbUjAlV3Os2elTuu/5NCxRBCSB0GrEH/sSdKBuijZjnoOXW5VKdoV/q
dS3zijAgmHLKvI8wUkBwk8bTcoRbpay6I2mOaJ0KxT7dvs2jS6Qn4nUplXeO
d7w2rCLRs6lVdeG8om1S3Oe5vhUwvl1xTRcuainrjFqwnu14s8vlz72eUS0u
vUYToQq9R7j4vKYKL8832No8tz6KkHAfP/KVZLnkezzUgDpRZ+tzJt8NKkXF
81JMz4O8z4YxbnqsU6v8qOyAlrsB7pTahUlw9nhDitnVwe7epo0ZvextleI/
96ecTxkFdn4S4F3BTAJc/tt3+ZxBhNPELW1LsdNyGVs5ytRaKi9GVLL9vHa/
wU4D/43UKQu/PEP3S2oiLgCHlcthQV06y7SEe/aCPQ0xNi0xRJYavdxUAgqN
dqs/m61pci4c/XFuu0rrgNv6VOCe0muwplg1Su0MCx2YQ+7KiLTyrRVRAVJY
Zf7EIHxXO2trRaqyeOXJae1Q2mPD8orvfUFbSmYByoj2ETWhcuZE86l9HErV
dX0+x8PVkKrNDga2hWorhAzSq9AhjbTlnNbwwhjx8387p7RlMuF5ltbXc5E6
vvgXAlJpIILknnXF7dOc2kM+K7qg42UJxhNiJKmeUpyEG+GaZTcAd4zv3J68
NwVqydgb8imcuAZNoU4FEKp5+HZrVKykGNIFunLe+DjP75OaXuAp+A+z7AxH
0+bDKHcXtkYySihz6EphFOLoAOyzqMlmk/32FtUz0bq3NdEaAZ7FSOAxpBM0
nztJK/58+AcpB313e5TW3PG56eCHZ6j/6XwLmcQ5IuVgvFemoFlYT8CzNdGp
oGH0skc3ZlFW19veyqpAw6kwOV2LtJOTeyUrRULz49Jfuga7YtPjg/2syQtX
BKAO4XY9hUSc3x6h9Zx7TjaKJoAJBq7NMHB0wxYy+17Kz02SlP9La3MwFaM8
CjSs18P01QZDzooq5ezqTN4n08pSSTUCI91Rb+5l2EVq5u6PDmjJEg8KzRfa
l7EGTe/HNDXbfbAVqzshcyW+y6AFWNOirasxeYxGuvXxmcqWveVrHBTOrV3f
6jy85/gYIoWIGIIL2q23Hm9H6XaBdN541gdTtoOqVsobn2VLqxxSkVxaio17
cIS1h/g6BSNxpo3M2BdqYIyipQVuDP6RJgeKKGSQN9S9sJULNrE0Nat35q6f
PdICVIvjtv8K/Om0QXefkjJEQIPPtOOT0BYdo+T+Wmr3DojkTTR7EgNYhYVZ
ki4c1Q0EgkjzORovoQDRzi5XyqmcFC7Ue9ott7ZcC6QZCeXUGeCubx3pCnLZ
Gtf6CEaeWkirfrGufGbN6HOXgqrAdXmrNHUvVmaIu/Ue4jmPjBN+BS2fnelm
TabkGW15YbvR3182AcSVQ7Oa+Rh0hUbzy0YsuMH4Wc8fZJNVL62xVCWfKWc1
dlFli13s0+wtqRLursbM6eHDEL+m6kclb87l8f+cTOI8Hym7wZmb/dP+bsnU
pOcKeqo3Hh+ePKSg3FVrZKN9LvrGeyOW9iFtuAdStlaIs7cm7FSakfERXnb7
DSzGfbV0SlVqiYRHHGOaigfv+5ilw4BfNN7d0+OdCCvn6jUt6rVAkpk7IiFN
JYr75sis01+ndIfc/4fX/UxSixiNsDJSn6ziEienEVYRBeoYpdJtcAJwTBe3
W2sNZjaps0cpfG2ATVcQto+EPU5/lFr/qSbrMkz3AFRjSZ9wFWfv9HloMENq
TXV/Rq8Uy5qjlO3Z+O0l7Y5aVxVt/aKiM3eG40rp0MbwNvlaHZFHeNJnqPcc
Svej8Vhzd8b36UWqY2fvQkGf1bz2K0DNs6FRebf86225ReKuM6qr0SDaivqd
ZpK1sW+obhuQkqEicMx721Vbd42V2fwwosvNMQM+U+8fF1QY/4RWFQPjvKcI
W2WWuLhSC/nvkvGKy8nya++ZBHST7/MGPaHUsDZ7VjvfIX5u9RSa07Stnbq1
a1Cnh9TIIkLjrs1OuDL7q5Y/jnAhLNvbuVq3g3llxlNH5qRJJGAI+2c/mz2F
2v9WtCc9pPJCJc6mebUbL3dcjzCv18X83f/334Jb3tfOe4qnN8yeLfavQ+Ju
5SVMw74zXaLjTw8dqb7nvfPjfzpe6aC00BAGSF15rSO5KDsf2ChSlueRUWUY
E9fyuYo4qBlziibpmuCKky/Vysk3KddP7pCNjLd/4u+WTn/vzbs/3vhfchNc
wKymmeZ6ykQ637H0jss/s+OvH39+jtfc/Vm7RKva3hiFpFjakF3AseS/M5Uj
aJYEQX/vbPXM2TfIv61nG3k4ev5Sh+oR//7b/qdabBKZrPnxN6h8dEDb1YAU
L4Y47dJ26laXvP/e1MpkNzpt07nWrLr4rZrUVN9eNnPKkNi0nU0FnyOJiRWY
WYtPlKhdXn0JseyoT9kKdefTS0lXG/G3zEb6XAye93R5O8XrvehcEqq/Ru/D
Iz7ib51ANnOKNSq+wLxUBLbtbe+9FSBk23kf/Gup/jLliOq2z/2vZ86JATIf
S6P//DytIHUh6Zb0nWqJrxXJA4iH9c4rb5d3+P7xl2t7+5bSveqv98iGX9p2
zef+9wk3fmkfkaXqc8AYuWr+aSs6XZ2Na3uI4nCl933Fj7qy/aRVXa5iSsY6
xrwn+ENPzxy9KKThd998obo5nX/tX++87e+fqBaOTOhV7dBWAig+gYJa4DKQ
OoKZP585RLj1zoc28XTaMIQn8iFvHsQid/6Bma9yl/rLX6n/yHN/8P4H73/w
/v/n++kJ/xd9HhCf\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{3.8784837568201485`*^9},
 CellLabel->
  "Out[435]=",ExpressionUUID->"a492d76e-bb37-4e6c-9531-7b2eee1e81a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Area", "[", 
    RowBox[{"SierpinskiMesh", "[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.878483679263692*^9, 3.8784836802108364`*^9}, {
  3.8784837393346815`*^9, 3.8784837719788246`*^9}},
 CellLabel->
  "In[436]:=",ExpressionUUID->"4d55f5a0-8778-4324-bf15-9ef818a7acd3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.3247595264191645`", ",", "0.24356964481437335`", ",", 
   "0.1826772336107799`", ",", "0.13700792520808494`", ",", 
   "0.10275594390606357`", ",", "0.07706695792954761`"}], "}"}]], "Output",
 CellChangeTimes->{3.878483772572134*^9},
 CellLabel->
  "Out[436]=",ExpressionUUID->"e505ab00-3f44-42f2-85e9-8d716a87feb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RootApproximant", "@", 
    RowBox[{"Area", "[", 
     RowBox[{"SierpinskiMesh", "[", "i", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.878483679263692*^9, 3.8784836802108364`*^9}, {
  3.8784837393346815`*^9, 3.8784837813294888`*^9}, {3.8784838849408565`*^9, 
  3.878483885097225*^9}},
 CellLabel->
  "In[444]:=",ExpressionUUID->"1287d2e3-5752-4354-8584-f742b4e9f728"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     SqrtBox["3"]}], "16"], ",", 
   FractionBox[
    RowBox[{"9", " ", 
     SqrtBox["3"]}], "64"], ",", 
   FractionBox[
    RowBox[{"27", " ", 
     SqrtBox["3"]}], "256"], ",", 
   InterpretationBox[
    TemplateBox[{"Root", 
      InterpretationBox[
       StyleBox[
        TemplateBox[{"\"0.137\"", 
          DynamicBox[
           FEPrivate`FrontEndResource[
           "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
        ShowStringCharacters -> False], 
       0.13700792520808494079354034056450473145`15.954589770191003, Editable -> 
       False], 
      TagBox[
       RowBox[{"Root", "[", 
         RowBox[{
           RowBox[{
             RowBox[{"1", "-", 
               RowBox[{"7", " ", "#1"}], "-", 
               RowBox[{"2", " ", 
                 SuperscriptBox["#1", "2"]}], "-", 
               SuperscriptBox["#1", "3"], "-", 
               SuperscriptBox["#1", "4"], "-", 
               RowBox[{"8", " ", 
                 SuperscriptBox["#1", "5"]}], "-", 
               RowBox[{"15", " ", 
                 SuperscriptBox["#1", "6"]}], "+", 
               RowBox[{"9", " ", 
                 SuperscriptBox["#1", "7"]}], "-", 
               RowBox[{"5", " ", 
                 SuperscriptBox["#1", "8"]}], "-", 
               RowBox[{"9", " ", 
                 SuperscriptBox["#1", "9"]}], "+", 
               RowBox[{"5", " ", 
                 SuperscriptBox["#1", "10"]}]}], "&"}], ",", "3"}], "]"}], 
       Short[#, 7]& ], 0.13700792520808494`},
     "NumericalApproximation"],
    Root[1 - 7 # - 2 #^2 - #^3 - #^4 - 8 #^5 - 15 #^6 + 9 #^7 - 5 #^8 - 9 #^9 + 
     5 #^10& , 3, 0]], ",", 
   InterpretationBox[
    TemplateBox[{"Root", 
      InterpretationBox[
       StyleBox[
        TemplateBox[{"\"0.103\"", 
          DynamicBox[
           FEPrivate`FrontEndResource[
           "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
        ShowStringCharacters -> False], 
       0.10275594390606357375617108118603937328`15.954589770191003, Editable -> 
       False], 
      TagBox[
       RowBox[{"Root", "[", 
         RowBox[{
           RowBox[{
             RowBox[{"1", "-", 
               RowBox[{"10", " ", "#1"}], "+", 
               SuperscriptBox["#1", "2"], "+", 
               RowBox[{"14", " ", 
                 SuperscriptBox["#1", "3"]}], "+", 
               RowBox[{"16", " ", 
                 SuperscriptBox["#1", "4"]}], "+", 
               RowBox[{"4", " ", 
                 SuperscriptBox["#1", "5"]}], "-", 
               RowBox[{"17", " ", 
                 SuperscriptBox["#1", "6"]}], "+", 
               RowBox[{"14", " ", 
                 SuperscriptBox["#1", "7"]}], "-", 
               RowBox[{"28", " ", 
                 SuperscriptBox["#1", "8"]}], "+", 
               SuperscriptBox["#1", "9"]}], "&"}], ",", "2"}], "]"}], 
       Short[#, 7]& ], 0.10275594390606357`},
     "NumericalApproximation"],
    Root[1 - 10 # + #^2 + 14 #^3 + 16 #^4 + 4 #^5 - 17 #^6 + 14 #^7 - 
     28 #^8 + #^9& , 2, 0]], ",", 
   InterpretationBox[
    TemplateBox[{"Root", 
      InterpretationBox[
       StyleBox[
        TemplateBox[{"\"0.0771\"", 
          DynamicBox[
           FEPrivate`FrontEndResource[
           "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
        ShowStringCharacters -> False], 
       0.07706695792954758317261365618833224289`15.954589770191003, Editable -> 
       False], 
      TagBox[
       RowBox[{"Root", "[", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"25", " ", "#1"}], "+", 
               RowBox[{"12", " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"4", " ", 
                 SuperscriptBox["#1", "3"]}], "+", 
               RowBox[{"5", " ", 
                 SuperscriptBox["#1", "4"]}], "+", 
               RowBox[{"17", " ", 
                 SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"6", " ", 
                 SuperscriptBox["#1", "6"]}], "-", 
               RowBox[{"32", " ", 
                 SuperscriptBox["#1", "7"]}], "+", 
               RowBox[{"21", " ", 
                 SuperscriptBox["#1", "8"]}]}], "&"}], ",", "2"}], "]"}], 
       Short[#, 7]& ], 0.07706695792954758},
     "NumericalApproximation"],
    Root[-2 + 25 # + 12 #^2 + 4 #^3 + 5 #^4 + 17 #^5 + 6 #^6 - 32 #^7 + 
     21 #^8& , 2, 0]], ",", 
   InterpretationBox[
    TemplateBox[{"Root", 
      InterpretationBox[
       StyleBox[
        TemplateBox[{"\"0.0578\"", 
          DynamicBox[
           FEPrivate`FrontEndResource[
           "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
        ShowStringCharacters -> False], 
       0.05780021844716096146576944647677009925`15.954589770191003, Editable -> 
       False], 
      TagBox[
       RowBox[{"Root", "[", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"37", " ", "#1"}], "-", 
               RowBox[{"44", " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"40", " ", 
                 SuperscriptBox["#1", "3"]}], "+", 
               RowBox[{"59", " ", 
                 SuperscriptBox["#1", "4"]}], "+", 
               RowBox[{"11", " ", 
                 SuperscriptBox["#1", "5"]}], "+", 
               RowBox[{"7", " ", 
                 SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
       Short[#, 7]& ], 0.05780021844716096},
     "NumericalApproximation"],
    Root[-2 + 37 # - 44 #^2 + 40 #^3 + 59 #^4 + 11 #^5 + 7 #^6& , 2, 0]], ",", 
   InterpretationBox[
    TemplateBox[{"Root", 
      InterpretationBox[
       StyleBox[
        TemplateBox[{"\"0.0434\"", 
          DynamicBox[
           FEPrivate`FrontEndResource[
           "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
        ShowStringCharacters -> False], 
       0.04335016383537020762117819572267762851`15.954589770191003, Editable -> 
       False], 
      TagBox[
       RowBox[{"Root", "[", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "12"}], "+", 
               RowBox[{"263", " ", "#1"}], "+", 
               RowBox[{"307", " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"269", " ", 
                 SuperscriptBox["#1", "3"]}], "+", 
               RowBox[{"19", " ", 
                 SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}], 
       Short[#, 7]& ], 0.04335016383537021},
     "NumericalApproximation"],
    Root[-12 + 263 # + 307 #^2 + 269 #^3 + 19 #^4& , 2, 0]], ",", 
   InterpretationBox[
    TemplateBox[{"Root", 
      InterpretationBox[
       StyleBox[
        TemplateBox[{"\"0.0325\"", 
          DynamicBox[
           FEPrivate`FrontEndResource[
           "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"], 
        ShowStringCharacters -> False], 
       0.03251262287652777888125044114531192463`15.954589770191003, Editable -> 
       False], 
      TagBox[
       RowBox[{"Root", "[", 
         RowBox[{
           RowBox[{
             RowBox[{
               RowBox[{"-", "25"}], "+", 
               RowBox[{"868", " ", "#1"}], "-", 
               RowBox[{"3056", " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
               RowBox[{"275", " ", 
                 SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}], 
       Short[#, 7]& ], 0.03251262287652778},
     "NumericalApproximation"],
    Root[-25 + 868 # - 3056 #^2 + 275 #^3& , 1, 0]], ",", 
   FractionBox[
    RowBox[{"2619", "-", 
     SqrtBox["1527481"]}], "56720"]}], "}"}]], "Output",
 CellChangeTimes->{3.878483782974085*^9, 3.878483894542838*^9},
 CellLabel->
  "Out[444]=",ExpressionUUID->"1621b786-e49e-4201-9748-0f56f6d8a5c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RootApproximant", "@", 
    RowBox[{"RegionMeasure", "[", 
     RowBox[{"SierpinskiMesh", "[", 
      RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.878483679263692*^9, 3.8784836802108364`*^9}, {
   3.8784837393346815`*^9, 3.8784837813294888`*^9}, {3.8784838849408565`*^9, 
   3.8784839417330923`*^9}, 3.8784839777189283`*^9},
 CellLabel->
  "In[449]:=",ExpressionUUID->"ebc6ecd8-a922-4a0c-aec2-f04f8982323f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"12", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", 
    RowBox[{"24", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", 
    RowBox[{"48", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", 
    RowBox[{"96", " ", 
     SqrtBox["2"]}]], ",", 
   FractionBox[
    RowBox[{"9809", "-", 
     SqrtBox["94888801"]}], "18440"], ",", 
   FractionBox[
    RowBox[{"9809", "-", 
     SqrtBox["94888801"]}], "36880"], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "4327"}], "+", 
     SqrtBox["19026417"]}], "37936"]}], "}"}]], "Output",
 CellChangeTimes->{3.878483942523633*^9, 3.8784839832800875`*^9},
 CellLabel->
  "Out[449]=",ExpressionUUID->"dfb0203e-be96-4af8-bd5d-02f4d13fff7a"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{574.8, 579.6},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"836dec3a-959a-47f7-a1e1-e0c99c926a33"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 3, 67, "Section",ExpressionUUID->"53414823-3a21-4525-80fc-069facfbbf92"],
Cell[737, 27, 369, 7, 81, "Text",ExpressionUUID->"4a9d669e-1335-4c8b-8415-6b12eae9c866"],
Cell[CellGroupData[{
Cell[1131, 38, 295, 8, 45, "Input",ExpressionUUID->"01dd8dc0-5bd2-4096-b2dd-9abc914f578b"],
Cell[1429, 48, 244, 7, 48, "Output",ExpressionUUID->"4f8fd8ed-e5ea-498e-ad01-12116f372f8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1710, 60, 211, 4, 28, "Input",ExpressionUUID->"814511ec-0e62-439d-a884-22424e0ce6b6"],
Cell[1924, 66, 180, 4, 48, "Output",ExpressionUUID->"e157bab6-664e-4b73-b2fd-9e1fa1d82cdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2141, 75, 264, 6, 28, "Input",ExpressionUUID->"75bb545c-a331-4faa-81dd-2f2b54d849c5"],
Cell[2408, 83, 198, 3, 32, "Output",ExpressionUUID->"1a8dcbfc-0a1e-478d-9ea0-6bc2f9b3f6c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2643, 91, 346, 7, 41, "WolframAlphaLong",ExpressionUUID->"cdc7ed44-37dd-4853-8c59-825e899121c8"],
Cell[2992, 100, 28652, 576, 894, "Print",ExpressionUUID->"982bf831-fda8-440b-bc40-760df23a2e23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31681, 681, 323, 8, 54, "Input",ExpressionUUID->"01afdeb3-3862-4ba8-bde8-a860ddbfd4f0"],
Cell[32007, 691, 420, 14, 48, "Output",ExpressionUUID->"a70afc61-05f0-41be-a85a-a1115fde7ee6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32464, 710, 217, 4, 28, "Input",ExpressionUUID->"fb82b74f-9d87-4879-9b9e-d04548070ac0"],
Cell[32684, 716, 339, 11, 48, "Output",ExpressionUUID->"bec6004e-c538-4bde-992d-95b131f5a5ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33060, 732, 412, 14, 52, "Input",ExpressionUUID->"3101086f-a00c-4124-b6b4-f6e984bc8ad7"],
Cell[33475, 748, 313, 8, 28, "Message",ExpressionUUID->"4895a7ed-5d77-4b08-91fb-6aeba0f3b85b"],
Cell[33791, 758, 436, 14, 56, "Output",ExpressionUUID->"41037b9a-45bb-4cfd-9c9c-2c2e1d5ec5bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34264, 777, 351, 10, 28, "Input",ExpressionUUID->"d6251003-9f0f-4ce2-bf2b-2d354089ed61"],
Cell[34618, 789, 180, 3, 32, "Output",ExpressionUUID->"53e4d927-32b9-468c-8c60-38e435c9f717"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34835, 797, 334, 9, 28, "Input",ExpressionUUID->"9d1e8b7b-f8db-45f3-be9f-a7c3e7b5f064"],
Cell[35172, 808, 281, 8, 32, "Output",ExpressionUUID->"999a3e85-6b0f-45e5-b051-2ec0a4183f37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35490, 821, 211, 4, 28, "Input",ExpressionUUID->"cfdde85a-4e82-4309-a17c-a953414a699e"],
Cell[35704, 827, 182, 4, 48, "Output",ExpressionUUID->"21976828-a22f-480c-acdf-251eeb65f4b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35923, 836, 213, 4, 28, "Input",ExpressionUUID->"d116bfca-eafe-4517-aea2-047099b78fe5"],
Cell[36139, 842, 183, 4, 48, "Output",ExpressionUUID->"f970fa1e-078e-4706-99b5-77754b2ed182"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36359, 851, 247, 5, 28, "Input",ExpressionUUID->"0014de34-9d1d-4f4e-8efe-20621ed8d530"],
Cell[36609, 858, 545, 15, 48, "Output",ExpressionUUID->"85c063ae-ceeb-4c1e-bdc9-3c8ba7f434b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37191, 878, 282, 6, 28, "Input",ExpressionUUID->"10d2badf-05fd-42e1-aae5-9e5e0d2391eb"],
Cell[37476, 886, 500, 14, 48, "Output",ExpressionUUID->"864c626a-fd0f-4982-ab28-2b5e52451f51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38013, 905, 314, 8, 28, "Input",ExpressionUUID->"cf651a2c-f484-4879-bd6f-443c383fd6f6"],
Cell[38330, 915, 257, 7, 32, "Output",ExpressionUUID->"17835d66-fcf3-4454-a71f-3974fe45632c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38624, 927, 248, 5, 28, "Input",ExpressionUUID->"c91f55c6-0a0c-4737-a1a7-90136b2145d4"],
Cell[38875, 934, 545, 15, 48, "Output",ExpressionUUID->"b66e0a74-ef47-4f2c-88b6-52d20cbcf4b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39457, 954, 300, 7, 53, "Input",ExpressionUUID->"0d9b6923-4789-4488-aafd-752dbb4c82a3"],
Cell[39760, 963, 153, 3, 32, "Output",ExpressionUUID->"d009d033-ce1d-4605-b6bf-c243bcd376e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39950, 971, 309, 7, 53, "Input",ExpressionUUID->"e9d3b5ac-36de-4cf0-ab71-db9dc6725a2f"],
Cell[40262, 980, 339, 8, 28, "Message",ExpressionUUID->"113309b5-c498-4849-b02a-0e13bd7fd064"],
Cell[40604, 990, 475, 14, 57, "Output",ExpressionUUID->"a55b0b9d-f558-4315-a5b8-8336f246085f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41116, 1009, 235, 5, 28, "Input",ExpressionUUID->"12c0cae4-2456-481a-86a4-b37fed9a97aa"],
Cell[41354, 1016, 175, 3, 32, "Output",ExpressionUUID->"9fe5257c-7888-4b16-a5a6-e3e1822bf29b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41566, 1024, 323, 8, 32, "Input",ExpressionUUID->"b98f75cf-dce1-4fb9-ba52-4ca426181cf1"],
Cell[41892, 1034, 263, 5, 36, "Output",ExpressionUUID->"b2243231-47a8-42bb-9b66-c340284aa59f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42192, 1044, 1932, 40, 45, "Input",ExpressionUUID->"a59853e8-44c2-4258-a53c-c164b82656a0"],
Cell[44127, 1086, 363, 11, 48, "Output",ExpressionUUID->"46513996-f287-4c1f-930c-1e33cd226500"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44527, 1102, 211, 4, 28, "Input",ExpressionUUID->"3dd8c070-4ed0-4265-bae3-75f586272883"],
Cell[44741, 1108, 248, 6, 57, "Output",ExpressionUUID->"03dd028a-6706-4340-bb59-d17a2a22e490"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45026, 1119, 293, 7, 55, "Input",ExpressionUUID->"74a868a0-7903-4c9f-a2ff-75183ba5639e"],
Cell[45322, 1128, 250, 6, 57, "Output",ExpressionUUID->"380cbc3f-60e6-40ce-91a6-b26cc5096eac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45609, 1139, 320, 8, 55, "Input",ExpressionUUID->"f40bbe98-785f-417f-8797-433684a2a42a"],
Cell[45932, 1149, 235, 5, 36, "Output",ExpressionUUID->"201b2b4c-8e66-4c03-981a-fa0599dd9816"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46204, 1159, 503, 14, 55, "Input",ExpressionUUID->"29b7bb45-7f34-44d4-8ffc-084a2c4cd72c"],
Cell[46710, 1175, 461, 13, 59, "Output",ExpressionUUID->"371e5f54-7e23-4ad3-8f4e-1001a2b07ae7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47208, 1193, 218, 4, 28, "Input",ExpressionUUID->"fb890ced-e43f-412f-a41d-8d4a59e7615f"],
Cell[47429, 1199, 247, 6, 57, "Output",ExpressionUUID->"6688e25e-4713-4d84-a8d1-31551f249731"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47713, 1210, 291, 6, 28, "Input",ExpressionUUID->"f283200e-5e4e-4d71-be99-c0f32290ca71"],
Cell[48007, 1218, 259, 5, 36, "Output",ExpressionUUID->"328a0570-39f4-42ed-9c03-edff7108c178"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48303, 1228, 248, 5, 28, "Input",ExpressionUUID->"173a3c8b-5176-4760-9144-44f97a5f1434"],
Cell[48554, 1235, 1246, 35, 57, "Output",ExpressionUUID->"5b62f302-a8c2-45ef-bed3-35d6ead023fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49837, 1275, 289, 6, 28, "Input",ExpressionUUID->"56e57d7d-a104-4bf8-bd58-2213472b7d2f"],
Cell[50129, 1283, 1133, 32, 57, "Output",ExpressionUUID->"5b6c8e35-503a-4ec5-be40-b327996f21db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51299, 1320, 283, 6, 28, "Input",ExpressionUUID->"98cde43e-33fa-4244-9d0b-2e641c2204e4"],
Cell[51585, 1328, 248, 6, 57, "Output",ExpressionUUID->"a9607a16-6347-4c25-9392-6c016900ef54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51870, 1339, 352, 9, 28, "Input",ExpressionUUID->"74245a2b-e73d-44d6-8ccd-8b17f55603d0"],
Cell[52225, 1350, 246, 6, 57, "Output",ExpressionUUID->"18150524-f92d-48e8-b2a8-de0769a63caa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52508, 1361, 403, 11, 33, "Input",ExpressionUUID->"a7e60206-d6c0-4bd4-a3b8-5e41062e5679"],
Cell[52914, 1374, 374, 10, 37, "Output",ExpressionUUID->"33f4e23c-e93d-4a3c-a2d3-eaac85a65711"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53325, 1389, 270, 6, 28, "Input",ExpressionUUID->"65647aa2-e7d8-4360-bbd3-4bbf19d79c05"],
Cell[53598, 1397, 294, 7, 57, "Output",ExpressionUUID->"c09cc516-37ec-49ef-aa0c-dad4bef67f27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53929, 1409, 349, 8, 28, "Input",ExpressionUUID->"abb297a5-038a-4e3d-ac30-18e2814c10e1"],
Cell[54281, 1419, 239, 5, 61, "Output",ExpressionUUID->"1c3a50eb-b169-47f8-a8df-191511560449"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54557, 1429, 202, 4, 28, "Input",ExpressionUUID->"f9ac7252-9966-41b3-b738-7927056d0c52"],
Cell[54762, 1435, 9624, 242, 185, "Output",ExpressionUUID->"b45836cf-3c8d-4d95-8df0-86b01e54d056"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64423, 1682, 309, 7, 28, "Input",ExpressionUUID->"588d8f2e-2df0-4251-ae34-034f14e04591"],
Cell[64735, 1691, 239, 5, 36, "Output",ExpressionUUID->"28e75192-ef86-4957-9dac-9ac61114deb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65011, 1701, 225, 4, 28, "Input",ExpressionUUID->"e2be36a2-7966-45cb-af15-36136da2fd44"],
Cell[65239, 1707, 216, 5, 36, "Output",ExpressionUUID->"2ea4690a-6143-4cb2-972d-2a5aa3f09355"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65492, 1717, 280, 6, 28, "Input",ExpressionUUID->"43b7520b-4667-4b80-90fc-5a34a1ea3710"],
Cell[65775, 1725, 249, 6, 57, "Output",ExpressionUUID->"ec14ea8c-195f-48ae-9563-ab1620c0344c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66061, 1736, 357, 8, 28, "Input",ExpressionUUID->"9b1fd1e7-c136-4407-aa46-ab0daf7f6b8a"],
Cell[66421, 1746, 237, 5, 36, "Output",ExpressionUUID->"50a478fc-b824-482b-9e7f-3b7862f8eda2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66695, 1756, 288, 7, 28, "Input",ExpressionUUID->"6cee6e20-70b1-4f3b-a446-b75fd04affad"],
Cell[66986, 1765, 228, 6, 32, "Output",ExpressionUUID->"ee0d9f6c-1ba3-461c-8ac2-59ddf4b55ede"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67251, 1776, 250, 5, 28, "Input",ExpressionUUID->"b1dfe041-0e05-428a-909c-11f21c67c304"],
Cell[67504, 1783, 265, 5, 36, "Output",ExpressionUUID->"1f2de418-69a6-4f26-a610-9aec17445320"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67806, 1793, 207, 4, 28, "Input",ExpressionUUID->"6217e964-1cdc-40c7-bf89-bd34e6bd63f6"],
Cell[68016, 1799, 9935, 248, 189, "Output",ExpressionUUID->"ebac9815-4c31-40bb-b3f4-b458040d8cee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77988, 2052, 217, 4, 28, "Input",ExpressionUUID->"93caee4f-b239-44d5-8600-8205cc339fcc"],
Cell[78208, 2058, 249, 6, 57, "Output",ExpressionUUID->"db07293f-9df3-4bba-919b-e2d0df6e9916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78494, 2069, 241, 5, 28, "Input",ExpressionUUID->"024a11e7-a29d-4285-a024-e66ca43f181d"],
Cell[78738, 2076, 236, 5, 36, "Output",ExpressionUUID->"6c0f640c-6f0f-4dd1-be25-c0c240f1fc96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79011, 2086, 244, 5, 28, "Input",ExpressionUUID->"4d66d9f3-e669-4786-affb-afe60968622b"],
Cell[79258, 2093, 233, 5, 36, "Output",ExpressionUUID->"db42c8d0-3aae-4e81-983f-4dd415877be2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79528, 2103, 539, 17, 55, "Input",ExpressionUUID->"68b87d94-8cef-48d4-9bcb-aece13a7edf6"],
Cell[80070, 2122, 579, 20, 48, "Output",ExpressionUUID->"e04b0cad-6587-4db5-a4bd-c9dff0118ee3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80686, 2147, 608, 21, 45, "Input",ExpressionUUID->"61a30155-30b1-40da-8533-eb169bfa408a"],
Cell[81297, 2170, 241, 7, 48, "Output",ExpressionUUID->"b87cc954-7ef7-4cda-8596-dd8e40e0ac55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81575, 2182, 768, 25, 45, "Input",ExpressionUUID->"23604121-b214-4aa1-b9dd-014a591a9b87"],
Cell[82346, 2209, 179, 4, 48, "Output",ExpressionUUID->"1c0c1ce7-82ed-400f-afce-6abf4ae981de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82562, 2218, 810, 26, 45, "Input",ExpressionUUID->"6957999e-1d47-47ee-8a88-49144b25553a"],
Cell[83375, 2246, 175, 3, 32, "Output",ExpressionUUID->"6dcac0b5-f92f-40e8-9ade-0be4eb9b97f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83587, 2254, 303, 7, 28, "Input",ExpressionUUID->"81c40acc-03e8-4a0c-821a-bc12f5325065"],
Cell[83893, 2263, 230, 6, 32, "Output",ExpressionUUID->"2e9da825-d177-42da-b0e1-3e69fcfe5afc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84160, 2274, 237, 4, 28, "Input",ExpressionUUID->"0437bf6d-37f8-44b4-b66a-83448787e030"],
Cell[84400, 2280, 245, 6, 57, "Output",ExpressionUUID->"291e6624-e903-4c50-a28d-cae40a2e597e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84682, 2291, 441, 13, 45, "Input",ExpressionUUID->"9e67c17f-2a67-43d2-a963-110ccdec27a7"],
Cell[85126, 2306, 361, 11, 48, "Output",ExpressionUUID->"42b3afbd-cc2c-4ff0-a1e7-50d3b891f9c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85524, 2322, 405, 11, 33, "Input",ExpressionUUID->"a9313353-596b-4833-a8cc-6e4c5dbaf647"],
Cell[85932, 2335, 352, 10, 37, "Output",ExpressionUUID->"2664fa8e-eabc-4b17-a528-b5edd4ff9d67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86321, 2350, 362, 9, 32, "Input",ExpressionUUID->"4d375327-2d0d-43a9-81cb-a3c163c0aecb"],
Cell[86686, 2361, 323, 8, 36, "Output",ExpressionUUID->"7823ca77-13ee-4a81-a883-754513ef05e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87046, 2374, 211, 4, 28, "Input",ExpressionUUID->"d251a469-cddf-455c-9d02-bb9fa9043562"],
Cell[87260, 2380, 246, 6, 57, "Output",ExpressionUUID->"4dda73f6-3ffa-4af0-a523-e2c7f74f94e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87543, 2391, 210, 4, 28, "Input",ExpressionUUID->"9f8b8a27-fb2b-4ce4-8855-31069827d4b5"],
Cell[87756, 2397, 250, 6, 57, "Output",ExpressionUUID->"2a6deb36-0ec5-4985-8422-533c8126b463"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88043, 2408, 268, 6, 28, "Input",ExpressionUUID->"891be9cb-e861-47d6-912f-9ca9a0b2159c"],
Cell[88314, 2416, 248, 6, 57, "Output",ExpressionUUID->"da23c7f4-1347-4df5-849e-fba98d82858b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88611, 2428, 251, 6, 67, "Section",ExpressionUUID->"6b0472d7-00a3-4dfd-b39b-cd9d6dc727b9"],
Cell[CellGroupData[{
Cell[88887, 2438, 272, 5, 28, "Input",ExpressionUUID->"10ccfbbe-b94e-45b1-8bcf-90f239bba103"],
Cell[89162, 2445, 179, 4, 48, "Output",ExpressionUUID->"24ef061b-c1ac-4114-b961-cadca6c56847"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89378, 2454, 202, 4, 28, "Input",ExpressionUUID->"98b8eaa9-7060-468c-ae58-1cc402a9a24f"],
Cell[89583, 2460, 177, 4, 48, "Output",ExpressionUUID->"72e673a6-6b1b-4340-9e00-aa28dfd6a054"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89797, 2469, 228, 5, 28, "Input",ExpressionUUID->"bcaba53a-ed1f-4a0d-9724-40fc6b02e6af"],
Cell[90028, 2476, 157, 3, 32, "Output",ExpressionUUID->"bfe97dcb-2be1-4efe-938a-d31b8fc028de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90222, 2484, 205, 3, 41, "WolframAlphaLong",ExpressionUUID->"c24877e8-4a84-4e67-aa89-ca6abcbdbbeb"],
Cell[90430, 2489, 31074, 590, 626, "Print",ExpressionUUID->"9bb1de29-a5d1-4e8b-b977-d6f6ff59b1db"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121553, 3085, 156, 3, 67, "Section",ExpressionUUID->"b3e0f40a-83cc-4776-b9de-2136f17c59de"],
Cell[CellGroupData[{
Cell[121734, 3092, 182, 3, 41, "WolframAlphaLong",ExpressionUUID->"3f81514d-d900-443b-8b24-122f880e9f9b"],
Cell[121919, 3097, 29006, 550, 580, "Print",ExpressionUUID->"882a795b-70d3-4080-99ec-e18f9d678da8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150974, 3653, 148, 3, 67, "Section",ExpressionUUID->"d1b0188e-2312-4774-8ea5-c987ae0d996b"],
Cell[CellGroupData[{
Cell[151147, 3660, 192, 3, 41, "WolframAlphaLong",ExpressionUUID->"487c0c1c-9931-4f84-b2e1-17417faabe31"],
Cell[151342, 3665, 26966, 508, 540, "Print",ExpressionUUID->"629cb5a2-69e7-4066-b142-9ff835d8210b"]
}, Open  ]],
Cell[178323, 4176, 164, 3, 35, "Text",ExpressionUUID->"d93a8483-ae69-4902-a5fe-92d5da02432a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178524, 4184, 148, 3, 67, "Section",ExpressionUUID->"24dca6e9-0889-464a-8016-240f502015e4"],
Cell[CellGroupData[{
Cell[178697, 4191, 199, 3, 41, "WolframAlphaLong",ExpressionUUID->"a1926034-4dd4-42be-b5fc-916d038def54"],
Cell[178899, 4196, 27086, 509, 560, "Print",ExpressionUUID->"d461a8cb-da0b-4f62-8d73-932dbeee4b10"]
}, Open  ]],
Cell[206000, 4708, 172, 3, 35, "Text",ExpressionUUID->"f077bf3d-bf20-42f9-8001-e6a5244dc0ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206209, 4716, 153, 3, 67, "Section",ExpressionUUID->"55bb19e5-7a89-4583-8a51-715ea078be26"],
Cell[CellGroupData[{
Cell[206387, 4723, 376, 9, 28, "Input",ExpressionUUID->"ef37392f-cbdd-44fa-ab53-d33d811b4e4b"],
Cell[206766, 4734, 18045, 341, 549, "Output",ExpressionUUID->"3269807a-db34-4f05-9cee-7106cdcdb8d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224848, 5080, 401, 10, 28, "Input",ExpressionUUID->"36e8e571-137d-4cb3-bb7d-50031499f4e4"],
Cell[225252, 5092, 132106, 2242, 619, "Output",ExpressionUUID->"a492d76e-bb37-4e6c-9531-7b2eee1e81a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357395, 7339, 409, 10, 28, "Input",ExpressionUUID->"4d55f5a0-8778-4324-bf15-9ef818a7acd3"],
Cell[357807, 7351, 361, 8, 32, "Output",ExpressionUUID->"e505ab00-3f44-42f2-85e9-8d716a87feb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358205, 7364, 501, 12, 28, "Input",ExpressionUUID->"1287d2e3-5752-4354-8584-f742b4e9f728"],
Cell[358709, 7378, 7944, 208, 92, "Output",ExpressionUUID->"1621b786-e49e-4201-9748-0f56f6d8a5c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366690, 7591, 564, 13, 48, "Input",ExpressionUUID->"ebc6ecd8-a922-4a0c-aec2-f04f8982323f"],
Cell[367257, 7606, 773, 27, 96, "Output",ExpressionUUID->"dfb0203e-be96-4af8-bd5d-02f4d13fff7a"]
}, Open  ]]
}, Open  ]]
}
]
*)

